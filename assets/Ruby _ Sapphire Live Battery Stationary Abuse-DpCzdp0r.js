import{u as t,j as e}from"./index-l0G2qi1r.js";const h=[{title:"Ruby and Sapphire Live Battery Static RNG",navDrawerTitle:"Static Live Battery RNG",description:"Learn how to RNG static Pokémon in Ruby and Sapphire for perfect IVs, natures, and shinies.",slug:"emulator-rs-stationary",category:"Ruby and Sapphire",tag:"emu"},{title:"有电电池定点乱数",description:"在红宝石和蓝宝石中轻松乱数完美异色传说宝可梦",slug:"zh-emulator-rs-stationary",category:"Ruby and Sapphire",tag:"emu",translation:{enSlug:"emulator-rs-stationary",language:"zh"}}];function s(i){const n={a:"a",br:"br",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...t(),...i.components},{ShowIf:r}=n;return r||l("ShowIf"),e.jsxs(e.Fragment,{children:[e.jsxs(r,{slug:"/emulator-rs-stationary",children:[e.jsx(n.h2,{children:"Tools"}),e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"/mgba-setup",children:"mGBA with lua scripts"})}),`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"/pokefinder",children:"PokeFinder"})}),`
`,e.jsx(n.li,{children:"A save file that has been ID abused. It's optional but recommended if going for shiny spreads with good IVs"}),`
`]}),e.jsx(n.pre,{children:e.jsx(n.code,{children:`Note: This method works for any Pokémon generated by Method 1 in Pokémon Ruby/Sapphire. If you're looking for a specific spread to be shiny, ID/SID abuse might be required first.
`})}),e.jsx(n.h2,{children:"Step 1: Set Up PokeFinder"}),e.jsxs(n.ol,{children:[`
`,e.jsx(n.li,{children:'Open PokeFinder, select "Gen 3 Stationary," and go to the "Searcher" tab.'}),`
`,e.jsx(n.li,{children:"Enter the spread you want and check for results."}),`
`,e.jsx(n.li,{children:"If no results appear, adjust the filters until you find a result."}),`
`]}),e.jsx(n.h2,{children:"Step 2: Get Your Initial Seed"}),e.jsxs(n.ol,{children:[`
`,e.jsx(n.li,{children:'Right-click your chosen seed and select "Generate times to seed."'}),`
`,e.jsxs(n.li,{children:[`The seed will appear in "16-Bit Seed To Time." Set the year to 2000, as other years won't work.`,`
`,e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:"This gives you the initial seed and the time/date needed to hit it."}),`
`]}),`
`]}),`
`,e.jsx(n.li,{children:'In the "Generator" tab, enter the initial seed from "16-Bit Seed To Time."'}),`
`,e.jsx(n.li,{children:'Set the search method to "Method 1" and click "Generate."'}),`
`,e.jsx(n.li,{children:'Find the advance given in "16-Bit Seed To Time."'}),`
`]}),e.jsx(n.h2,{children:"Step 3: Hitting the Desired Seed and Advance"}),e.jsxs(n.ol,{children:[`
`,e.jsxs(n.li,{children:["In mGBA, go to ",e.jsx(n.code,{children:"Tools -> Game overrides..."}),' and enable "Realtime clock."']}),`
`,e.jsxs(n.li,{children:["Then go to ",e.jsx(n.code,{children:"Tools -> Game Pak Sensors..."}),', select "Start time at," and enter the target time and date.']}),`
`]}),e.jsx(n.pre,{children:e.jsx(n.code,{children:`Note: Unlike Generations 4 and 5, only the hours and minutes matter for hitting the initial seed.
`})}),e.jsx(n.h2,{children:"Step 4: Finding the Delay"}),e.jsxs(n.ol,{children:[`
`,e.jsx(n.li,{children:"Load the game and reach the final screen before encountering the target Pokémon. Make save states along the way."}),`
`,e.jsxs(n.li,{children:["At the target advance, press ",e.jsx(n.code,{children:"A"})," to start the encounter."]}),`
`,e.jsx(n.li,{children:"Check the IVs of the encountered Pokémon."}),`
`,e.jsx(n.li,{children:"In PokeFinder, enter the IVs and search for the advance you hit."}),`
`,e.jsxs(n.li,{children:["Calculate the delay:",e.jsx(n.br,{}),`
`,e.jsx(n.code,{children:"Delay = Target Advance - Advance Hit"})]}),`
`,e.jsx(n.li,{children:"Input this delay into PokeFinder and generate results again."}),`
`,e.jsx(n.li,{children:"Find your target advance and note the new advance number."}),`
`]}),e.jsx(n.h2,{children:"Step 5: Obtain the Desired Pokémon"}),e.jsxs(n.ol,{children:[`
`,e.jsx(n.li,{children:"Repeat the process using the new advance after factoring in the delay."}),`
`,e.jsx(n.li,{children:"If done correctly, you'll hit the desired spread."}),`
`,e.jsx(n.li,{children:"If off, check how many advances you missed, reload a save state, adjust, and try again."}),`
`]}),e.jsx(n.p,{children:e.jsx(n.img,{src:"/images/Ruby-Sapphire/Stationary/Success.png",alt:"Success"})}),e.jsx(n.h2,{children:"Credits"}),e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:"Chinese translation: xuanyelin, Hakuhiro."}),`
`]})]}),`
`,e.jsxs(r,{slug:"/zh-emulator-rs-stationary",children:[e.jsx(n.h2,{children:"所需工具"}),e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"/mgba-setup",children:"带 Lua 脚本的 mGBA 模拟器"})}),`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"/pokefinder",children:"PokeFinder"})}),`
`,e.jsx(n.li,{children:"一个已经进行过 ID 乱数的存档（可选，但推荐用于乱数异色+好个体的组合）"}),`
`]}),e.jsx(n.pre,{children:e.jsx(n.code,{children:`注意：本方法适用于红宝石/蓝宝石中由方式 1 生成的宝可梦。如果你目标是特定异色个体组合，可能需要先进行 ID/SID 乱数。
`})}),e.jsx(n.h2,{children:"第一步：设置 PokeFinder"}),e.jsxs(n.ol,{children:[`
`,e.jsx(n.li,{children:"打开 PokeFinder，选择 “第三世代 定点乱数”，进入 “检索器” 标签页。"}),`
`,e.jsx(n.li,{children:"输入你想要的个体组合并进行搜索。"}),`
`,e.jsx(n.li,{children:"如果没有结果，尝试放宽筛选条件直到有结果为止。"}),`
`]}),e.jsx(n.h2,{children:"第二步：获取初始种子"}),e.jsxs(n.ol,{children:[`
`,e.jsx(n.li,{children:"右键点击选中的种子，选择“为seed生成时间”。"}),`
`,e.jsxs(n.li,{children:["种子会显示在 “Gen3 Seed到时间” 中。将年份设置为 2000，其他年份无法使用。",`
`,e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:"这会告诉你初始种子及对应的时间与日期。"}),`
`]}),`
`]}),`
`,e.jsx(n.li,{children:"切换到 “生成器” 标签页，输入刚才得到的初始种子。"}),`
`,e.jsx(n.li,{children:"设置搜索方式为“方式 1”，然后点击 “生成”。"}),`
`,e.jsx(n.li,{children:"找到对应的帧数，和“Gen3 Seed到时间” 中的帧数一致。"}),`
`]}),e.jsx(n.h2,{children:"第三步：命中目标种子与帧数"}),e.jsxs(n.ol,{children:[`
`,e.jsxs(n.li,{children:["在 mGBA 中，依次点击 ",e.jsx(n.code,{children:"工具 -> 覆写游戏"}),"，启用“实时时钟”。"]}),`
`,e.jsxs(n.li,{children:["然后进入 ",e.jsx(n.code,{children:"工具 -> 游戏卡带传感器"}),"，选择“开始时间”，并输入目标时间与日期。"]}),`
`]}),e.jsx(n.pre,{children:e.jsx(n.code,{children:`注意：不同于第四、第五世代，这里只需要精确到小时和分钟即可命中初始种子。
`})}),e.jsx(n.h2,{children:"第四步：确认延迟"}),e.jsxs(n.ol,{children:[`
`,e.jsx(n.li,{children:"启动游戏，并推进到接近目标宝可梦战斗前的最后一个画面。途中建议多次即时存档。"}),`
`,e.jsx(n.li,{children:"到达目标帧数时按下 A 键进入战斗。"}),`
`,e.jsx(n.li,{children:"捕捉宝可梦后检查它的个体值。"}),`
`,e.jsx(n.li,{children:"在 PokeFinder 中输入个体值，搜索命中的帧数。"}),`
`,e.jsxs(n.li,{children:["计算延迟： ",e.jsx(n.code,{children:"延迟 = 目标帧数 - 实际命中帧数"})]}),`
`,e.jsx(n.li,{children:"在 PokeFinder 中输入此延迟并重新生成结果。"}),`
`,e.jsx(n.li,{children:"找到你的目标组合并记录新的帧数。"}),`
`]}),e.jsx(n.h2,{children:"第五步：获取目标宝可梦"}),e.jsxs(n.ol,{children:[`
`,e.jsx(n.li,{children:"使用更新后的帧数重新尝试整个流程。"}),`
`,e.jsx(n.li,{children:"如果操作正确，你就能成功命中目标个体。"}),`
`,e.jsx(n.li,{children:"如果没命中，查看偏差了多少帧，回到存档点重新调整推进帧数再次尝试。"}),`
`]}),e.jsx(n.p,{children:e.jsx(n.img,{src:"/images/Ruby-Sapphire/Stationary/Success.png",alt:"成功！"})}),e.jsx(n.h2,{children:"特别鸣谢"}),e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:"中文翻译：炫夜鳞、Hakuhiro/白希洛。"}),`
`]})]})]})}function a(i={}){const{wrapper:n}={...t(),...i.components};return n?e.jsx(n,{...i,children:e.jsx(s,{...i})}):s(i)}function l(i,n){throw new Error("Expected component `"+i+"` to be defined: you likely forgot to import, pass, or provide it.")}export{a as default,h as frontmatter};
