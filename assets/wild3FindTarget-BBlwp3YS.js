import{S as X,c as A,a as Z,b as ee,d as te,u as ae,e as y,R as _,j as n,F as N,T as C,f as O,g as V,p as se,h as $,r as B,i as ne,o as ie,k as re,l as m,t as b,m as le,n as I,q as T,s as oe,v as de,w as W,x as me,z as R,y as G,N as pe,A as ue,B as k,C as g,D as h,_ as S,E as ce,G as he,H as be,I as _e,J as xe}from"./index-CFYbhQRX.js";import{i as ge,g as L,a as Se,f as D,b as fe,c as Ie,u as j,d as E,l as Me,e as we,h as H,j as ke,k as je,w as U,m as q,n as z,o as Y,p as Fe,q as ve}from"./wild3GameData-CjVCVzna.js";var ye=Math.min;function Te(t,a,e){for(var s=Z,r=t[0].length,x=t.length,l=x,f=Array(x),i=1/0,p=[];l--;){var u=t[l];i=ye(u.length,i),f[l]=r>=120&&u.length>=120?new X(l&&u):void 0}u=t[0];var M=-1,o=f[0];e:for(;++M<r&&p.length<i;){var c=u[M],d=c;if(c=c!==0?c:0,!(o?A(o,d):s(p,d))){for(l=x;--l;){var w=f[l];if(!(w?A(w,d):s(t[l],d)))continue e}o&&o.push(d),p.push(c)}}return p}function Le(t){return ge(t)?t:[]}var F=ee(function(t){var a=te(t,Le);return a.length&&a[0]===t[0]?Te(a):[]});const J=["Wild1","Wild2","Wild3","Wild4","Wild5"],P=Ie(),K=_e(!1),Re=ie({species:S(he),tid:g().int().min(0).max(65535),sid:g().int().min(0).max(65535),maps:h(ce()).min(1),allSetups:k(),leadIdxs:h(g().int().min(0).max(L.length-1)).min(1),actions:h(S(Y)).min(1),roamerStates:h(S(z)).min(1),massOutbreakStates:h(S(U)).min(1),feebasStates:h(S(q)).min(1),methods:h(S(J)).min(1),initial_advances:g().int().min(0).max(4294967295),max_advances:g().int().min(0).max(4294967295),max_result_count:g().int().min(1),rngManipulatedLeadPid:k(),mergeSimilarResults:k(),generate_even_if_impossible:k()}).extend(be.shape).extend(ve.shape),Pe=()=>({species:"Abra",tid:0,sid:0,maps:[],leadIdxs:L.map((t,a)=>a),allSetups:!0,methods:["Wild1","Wild2","Wild4"],actions:[...Y],roamerStates:[...z],feebasStates:[...q],massOutbreakStates:[...U],initial_advances:1e3,max_advances:1e5,max_result_count:1e4,rngManipulatedLeadPid:!1,mergeSimilarResults:!0,generate_even_if_impossible:!1,...de(),...je()}),Ae=t=>{const a=xe($,t);return[{label:"Species",input:n.jsx(m,{name:"species",options:b(P.species)})},...re({gender:a}),...fe({max_size:le(t)})]},Q=t=>{const a=P.mapSetupsBySpecies.get(t)??[];return{maps:a.map(e=>e.map_data.map_id),actions:j(a.flatMap(e=>e.actions)),roamerStates:j(a.flatMap(e=>e.roamer_states)),massOutbreakStates:j(a.flatMap(e=>e.mass_outbreak_states)),feebasStates:j(a.flatMap(e=>e.feebas_states))}},Ne=()=>{const[,t]=V(K);return n.jsx(T,{name:"rngManipulatedLeadPid",onChange:a=>{t(a)}})},Ce=(t,a,e)=>{const s=Q(t);return[{label:"Target Species",input:t},{label:"TID",input:n.jsx(I,{name:"tid",numType:"decimal",disabled:!a})},{label:"SID",input:n.jsx(I,{name:"sid",numType:"decimal",disabled:!a})},{label:"All Setups?",input:n.jsx(T,{name:"allSetups"})},...e?[]:[{label:"Actions",input:n.jsx(m,{name:"actions",options:b(s.actions,E),mode:"multiple",fullWidth:!0,selectAllNoneButtons:!0})},{label:"Maps",input:n.jsx(m,{name:"maps",options:b(s.maps,D),mode:"multiple",fullWidth:!0,selectAllNoneButtons:!0})},{label:"Leads",input:n.jsx(m,{name:"leadIdxs",options:Me,mode:"multiple",selectAllNoneButtons:!0})},...s.roamerStates.length>1?[{label:"Roamer states",input:n.jsx(m,{name:"roamerStates",options:b(s.roamerStates,we),mode:"multiple"})}]:[],...s.massOutbreakStates.length>1?[{label:"Mass outbreak states",input:n.jsx(m,{name:"roamerStates",options:b(s.massOutbreakStates,H),mode:"multiple",selectAllNoneButtons:!0})}]:[],...s.feebasStates.length>1?[{label:"Feebas states",input:n.jsx(m,{name:"feebasStates",options:b(s.feebasStates,ke),mode:"multiple"})}]:[]],{label:"Methods",input:n.jsx(m,{name:"methods",options:b(J),mode:"multiple"})},{label:"RNG-manipulated lead PID",input:n.jsx(Ne,{})},{label:"Initial advances",input:n.jsx(I,{name:"initial_advances",numType:"decimal"})},{label:"Max advances",input:n.jsx(I,{name:"max_advances",numType:"decimal"})},{label:"Max result count",input:n.jsx(I,{name:"max_result_count",numType:"decimal"})},{label:"Merge similar results",input:n.jsx(T,{name:"mergeSimilarResults"})},{label:"Display results with 0% likelihood",input:n.jsx(T,{name:"generate_even_if_impossible"})}]},Oe=()=>{const{setFieldValue:t}=ae(),a=y({name:"species"}),e=_.useMemo(()=>Ae(a),[a]);return _.useEffect(()=>{const s=Q(a);t("maps",s.maps),t("actions",s.actions),t("roamerStates",s.roamerStates),t("massOutbreakStates",s.massOutbreakStates),t("feebasStates",s.feebasStates)},[a,t]),n.jsxs(N,{vertical:!0,gap:8,children:[n.jsx(C.Title,{level:5,p:0,m:0,children:"Target PokÃ©mon"}),n.jsx(O,{fields:e})]})},Ve=()=>{const t=y({name:"species"}),a=y({name:"filter_shiny"}),e=y({name:"allSetups"}),s=_.useMemo(()=>Ce(t,a,e),[t,a,e]);return n.jsxs(N,{vertical:!0,gap:8,children:[n.jsx(C.Title,{level:5,p:0,m:0,children:"Considered Setups"}),n.jsx(O,{fields:s})]})},v=(t,a)=>{const e=G(t.method_probability),s=t.pre_sweet_scent_cycle_range.start+t.pre_sweet_scent_cycle_range.len,r=s===0?`Method ${a} can't be triggered.`:`Method ${a} is triggered if the cycle counter at Sweet Scent is between ${t.pre_sweet_scent_cycle_range.start} and ${s}.`;return n.jsx(W,{title:r,children:n.jsx("div",{children:e})})},$e=({rngManipulatedLeadPid:t})=>{const a=[];return a.push({title:"Advances",dataIndex:"advance",monospace:!0,render:e=>{const s=(e/59.7275/60).toFixed(1);return n.jsx(W,{title:`~${s} min`,children:n.jsx("div",{children:me(e)})})}},{title:"Map",dataIndex:"mapName"},{title:"Player action",dataIndex:"actionName"},{title:"Roamer",dataIndex:"roamer_state",render:e=>R(e).with("Inactive",()=>"Inactive").with("ActiveNotInMap",()=>"Roaming in another map").with("ActiveInMapLatios",()=>"Latios in map").with("ActiveInMapLatias",()=>"Latias in map").exhaustive()},{title:"Feebas Tile?",dataIndex:"feebas_state",render:e=>R(e).with("NotInMap",()=>"N/A").with("OnFeebasTile",()=>"Yes").with("InMapButNotOnFeebasTile",()=>"No").exhaustive()},{title:"Mass outbreak",dataIndex:"mass_outbreak_state",render:H}),t||a.push({title:n.jsxs(n.Fragment,{children:["Method ",n.jsx("br",{}),"Likelihood"]}),key:"<>Method <br />Likelihood</>",dataIndex:"cycle_data_by_lead",render:e=>{if(e==null)return"";const s=e.common_lower_lead.method_probability<e.common_upper_lead.method_probability?e.common_lower_lead:e.common_upper_lead;return G(s.method_probability)}}),a.push({title:"Lead",dataIndex:"lead",render:Fe}),t&&a.push({title:"Ideal Lead Speed",dataIndex:"cycle_data_by_lead",render:(e,s)=>{if(e==null||s.lead==="Egg")return"";if(e.ideal_lead.method_probability===e.slowest_lead.method_probability&&e.ideal_lead.method_probability===e.fastest_lead.method_probability)return"Any";const r=e.ideal_lead.lead_pid_cycle_count;return R(r).with(18,()=>"Fastest").with(900,()=>"Slowest").with(pe.number,()=>r+" cycles").exhaustive()}},{title:"Method Likelyhood by Lead Speed",type:"group",columns:[{title:"Ideal",dataIndex:"cycle_data_by_lead",render:(e,s)=>e==null?"":v(e.ideal_lead,s.method)},{title:"Fastest",dataIndex:"cycle_data_by_lead",render:(e,s)=>e==null?"":v(e.fastest_lead,s.method)},{title:"Common",dataIndex:"cycle_data_by_lead",render:(e,s)=>{if(e==null)return"";const r=e.common_lower_lead.method_probability<e.common_upper_lead.method_probability?e.common_lower_lead:e.common_upper_lead;return v(r,s.method)}},{title:"Slowest",dataIndex:"cycle_data_by_lead",render:(e,s)=>e==null?"":v(e.slowest_lead,s.method)}]}),a.push({title:"Species",dataIndex:"species"},{title:"PID",dataIndex:"pid",monospace:!0,render:e=>e.toString(16).padStart(8,"0").toUpperCase()},{title:"Nature",dataIndex:"nature"},{title:"Ability",dataIndex:"ability"},{title:"Shiny",dataIndex:"shiny",render:e=>e?"Yes":"No"},{title:"Gender",dataIndex:"gender"},{title:"IV",type:"group",columns:ue},{title:"Lvl",dataIndex:"lvl"},{title:"Hidden Power",type:"group",columns:[{title:"Type",dataIndex:"hidden_power",render:e=>e.pokemon_type},{title:"Power",dataIndex:"hidden_power",render:e=>e.bp}]},{title:"PID speed",dataIndex:"pidCycleCount",render:e=>`${e} cycles`}),a},Be=t=>{const a=P.mapSetupsBySpecies.get(t.species)??[];return t.allSetups?a:a.filter(e=>t.maps.includes(e.map_data.map_id)).map(e=>({map_data:e.map_data,actions:F(e.actions,t.actions),roamer_states:F(e.roamer_states,t.roamerStates),mass_outbreak_states:F(e.mass_outbreak_states,t.massOutbreakStates),feebas_states:F(e.feebas_states,t.feebasStates)}))};let We=0;const Ge=async(t,a)=>({...t,...t.ivs,mapName:a,actionName:E(t.action),uid:We++,pidCycleCount:await B.calculate_pid_speed(t.pid)}),De=t=>{const a=new Map;return t.forEach(e=>{const s=`${e.pid},${e.ivs.hp},${e.ivs.atk},${e.ivs.def},${e.ivs.spa},${e.ivs.spd},${e.ivs.spe}`,r=a.get(s);(r===void 0||r.lead!=="Vanilla"&&e.lead==="Vanilla")&&a.set(s,e)}),Array.from(a.values())},Ee=t=>oe(t,["advance","method","map_idx"]),qe=({game:t})=>{const[a,e]=_.useState([]),[s]=V(K),r=t==="emerald"?0:1440,x=_.useCallback(async i=>{const p=Be(i),u=i.allSetups?[...L]:i.leadIdxs.map(d=>L[d]),M={initial_seed:r,tid:i.tid,sid:i.sid,gender_ratio:$[i.species],initial_advances:i.initial_advances,max_advances:i.max_advances,max_result_count:i.max_result_count,filter:se(i),gen3_filter:Se(i,i.species),leads:u,map_setups:p,methods:i.methods,consider_cycles:!0,consider_rng_manipulated_lead_pid:i.rngManipulatedLeadPid,generate_even_if_impossible:i.generate_even_if_impossible};let o=await B.search_wild3(M);i.mergeSimilarResults&&(o=De(o)),o=Ee(o);const c=await Promise.all(o.map(d=>{const w=p[d.map_idx];return Ge(d,D(w.map_data.map_id))}));e(c)},[r]),l=_.useMemo(()=>Pe(),[]),f=_.useMemo(()=>$e({rngManipulatedLeadPid:s}),[s]);return n.jsxs(ne,{columns:f,results:a,validationSchema:Re,initialValues:l,onSubmit:x,submitTrackerId:"wild3_find_target",rowKey:"uid",children:[n.jsx(Oe,{}),n.jsx("br",{}),n.jsx(Ve,{})]})};export{Ve as SetupFilter,Oe as TargetMon,qe as Wild3SearcherFindTarget};
