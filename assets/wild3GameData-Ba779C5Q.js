import{P as s,Q as c,$ as F,U as M,V as _e,W as te,X as D,Y as re,Z as G,a0 as k,a1 as K,a2 as vl,a3 as se,a4 as ol,a5 as cl,a6 as Sl,a7 as ul,a8 as Il,a9 as pl,aa as Pl,ab as dl,ac as Cl,ad as xl,ae as gl,af as Al,ag as fl,ah as Ol,ai as Rl,aj as Ll,ak as bl,al as $l,am as Ul,an as Tl,ao as Nl,ap as yl,aq as hl,ar as Ml,as as Dl,at as Gl,au as kl,av as wl,aw as Bl,ax as Wl,ay as Hl,az as jl,aA as zl,aB as Zl,aC as Fl,aD as Kl,aE as Vl,aF as Yl,aG as Jl,aH as Xl,aI as ql,aJ as Ql,aK as ei,aL as li,aM as ii,aN as ni,aO as ai,aP as _i,aQ as ti,aR as ri,aS as si,aT as mi,aU as Ei,aV as vi,aW as oi,aX as ci,aY as Si,aZ as ui,a_ as Ii,a$ as pi,b0 as Pi,b1 as di,b2 as Ci,b3 as xi,b4 as gi,b5 as Ai,b6 as fi,b7 as Oi,b8 as Ri,b9 as Li,ba as bi,bb as $i,bc as Ui,bd as Ti,be as Ni,bf as yi,bg as hi,bh as Mi,bi as Di,bj as Gi,bk as ki,bl as wi,bm as Bi,bn as Wi,bo as Hi,bp as ji,bq as zi,br as Zi,bs as Fi,bt as me,bu as Ki,bv as Ee,bw as ve,bx as Vi,by as oe,bz as ce,bA as Yi,bB as Ji,bC as Xi,bD as qi,bE as Qi,bF as en,bG as ln,bH as nn,bI as an,bJ as Se,bK as ue,bL as Ie,bM as pe,bN as Pe,bO as _n,bP as tn,bQ as rn,bR as sn,bS as mn,bT as En,bU as vn,bV as on,bW as cn,bX as de,bY as Sn,bZ as un,b_ as In,b$ as pn,c0 as Ce,c1 as w,c2 as Pn,c3 as xe,c4 as dn,c5 as Cn,c6 as xn,c7 as gn,c8 as An,c9 as fn,ca as On,cb as Rn,cc as Ln,cd as bn,ce as $n,cf as Un,cg as Tn,ch as ge,ci as Nn,cj as Ae,ck as fe,cl as B,cm as yn,cn as Oe,co as Re,cp as Le,cq as be,cr as $e,cs as Ue,ct as hn,cu as Mn,cv as Dn,cw as Te,cx as Gn,cy as Ne,cz as kn,cA as ye,cB as he,cC as wn,cD as Bn,cE as Wn,cF as Hn,cG as Me,cH as jn,cI as zn,cJ as Zn,cK as De,cL as Fn,cM as Ge,cN as Kn,cO as Vn,cP as Yn,cQ as ke,cR as Jn,cS as Xn,cT as qn,cU as we,cV as Be,cW as Qn,cX as ea,cY as la,cZ as ia,c_ as na,c$ as aa,d0 as _a,d1 as We,d2 as He,d3 as ta,d4 as je,d5 as ra,d6 as sa,d7 as ma,d8 as Ea,d9 as va,da as ze,db as oa,dc as ca,dd as Sa,de as ua,df as Ia,dg as pa,dh as Pa,di as Ze,dj as $,dk as Fe,dl as Ke,dm as da,dn as Ca,dp as xa,dq as ga,dr as Ve,ds as Ye,dt as Je,du as Aa,dv as fa,dw as Oa,dx as Xe,dy as Ra,dz as La,dA as qe,dB as Qe,dC as el,dD as ll,dE as il,dF as ba,dG as $a,dH as Ua,dI as Ta,dJ as Na,dK as ya,dL as ha,dM as Ma,dN as Da,dO as Ga,dP as ka,dQ as wa,dR as Ba,dS as Wa,dT as Ha,dU as ja,dV as za,dW as Za,dX as Fa,dY as Ka,dZ as Va,d_ as Ya,d$ as Ja,e0 as Xa,e1 as qa,e2 as Qa,e3 as e_,e4 as l_,e5 as i_,e6 as n_,e7 as a_,e8 as __,e9 as t_,ea as r_,eb as s_,ec as m_,ed as E_,ee as v_,ef as o_,eg as c_,eh as S_,ei as u_,ej as I_,ek as p_,el as P_,em as d_,en as C_,eo as x_,ep as g_,eq as A_,er as f_,es as O_,et as R_,eu as L_,ev as b_,ew as $_,ex as U_,ey as T_,ez as N_,eA as y_,eB as h_,eC as M_,eD as D_,eE as G_,eF as k_,eG as w_,eH as B_,D as W_,eI as H_,eJ as j_,eK as z_,B as W,eL as Z_,eM as F_,eN as K_,eO as V_,eP as Y_,eQ as J_,eR as X_,eS as q_,eT as Q_,eU as et,eV as lt,eW as it,_ as nt,eX as at,eY as _t,eZ as tt,e_ as rt,e$ as st,f0 as mt,f1 as Et,f2 as vt,f3 as ot,f4 as ct,f5 as St,f6 as ut,f7 as It,f8 as pt,f9 as Pt,fa as dt,fb as Ct,fc as xt,fd as gt,fe as At,ff as ft,fg as Ot,fh as Rt,fi as Lt,fj as bt,fk as $t,fl as Ut,fm as Tt,fn as Nt,C as H,o as j,fo as yt,fp as ht,fq as Mt,fr as Dt,fs as Gt,ft as kt,fu as wt,fv as Bt,fw as Wt,fx as Ht,fy as jt,fz as zt,fA as Zt,fB as Ft,fC as Kt,E as Vt,fD as Yt,fE as Jt,fF as Xt,fG as qt,fH as Qt,fI as er,fJ as lr,fK as ir,fL as nr,fM as ar,fN as _r,fO as tr,fP as rr,fQ as sr,fR as mr,fS as Er,fT as vr,fU as or,fV as cr,fW as Sr,fX as ur,fY as Ir,fZ as pr,b as Pr,f_ as nl,f$ as dr,g0 as Cr,R as xr,j as L,n as V,f as gr,g1 as Ar,g2 as Y,q as J,g3 as fr,g4 as Or,z as U,N as X,h as Rr,G as Lr}from"./index-DVcJqcS4.js";const br=()=>{const _={string:{unit:"حرف",verb:"أن يحوي"},file:{unit:"بايت",verb:"أن يحوي"},array:{unit:"عنصر",verb:"أن يحوي"},set:{unit:"عنصر",verb:"أن يحوي"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"مدخل",email:"بريد إلكتروني",url:"رابط",emoji:"إيموجي",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"تاريخ ووقت بمعيار ISO",date:"تاريخ بمعيار ISO",time:"وقت بمعيار ISO",duration:"مدة بمعيار ISO",ipv4:"عنوان IPv4",ipv6:"عنوان IPv6",cidrv4:"مدى عناوين بصيغة IPv4",cidrv6:"مدى عناوين بصيغة IPv6",base64:"نَص بترميز base64-encoded",base64url:"نَص بترميز base64url-encoded",json_string:"نَص على هيئة JSON",e164:"رقم هاتف بمعيار E.164",jwt:"JWT",template_literal:"مدخل"};return e=>{switch(e.code){case"invalid_type":return`مدخلات غير مقبولة: يفترض إدخال ${e.expected}، ولكن تم إدخال ${t(e.input)}`;case"invalid_value":return e.values.length===1?`مدخلات غير مقبولة: يفترض إدخال ${c(e.values[0])}`:`اختيار غير مقبول: يتوقع انتقاء أحد هذه الخيارات: ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?` أكبر من اللازم: يفترض أن تكون ${e.origin??"القيمة"} ${l} ${e.maximum.toString()} ${i.unit??"عنصر"}`:`أكبر من اللازم: يفترض أن تكون ${e.origin??"القيمة"} ${l} ${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`أصغر من اللازم: يفترض لـ ${e.origin} أن يكون ${l} ${e.minimum.toString()} ${i.unit}`:`أصغر من اللازم: يفترض لـ ${e.origin} أن يكون ${l} ${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`نَص غير مقبول: يجب أن يبدأ بـ "${e.prefix}"`:l.format==="ends_with"?`نَص غير مقبول: يجب أن ينتهي بـ "${l.suffix}"`:l.format==="includes"?`نَص غير مقبول: يجب أن يتضمَّن "${l.includes}"`:l.format==="regex"?`نَص غير مقبول: يجب أن يطابق النمط ${l.pattern}`:`${n[l.format]??e.format} غير مقبول`}case"not_multiple_of":return`رقم غير مقبول: يجب أن يكون من مضاعفات ${e.divisor}`;case"unrecognized_keys":return`معرف${e.keys.length>1?"ات":""} غريب${e.keys.length>1?"ة":""}: ${s(e.keys,"، ")}`;case"invalid_key":return`معرف غير مقبول في ${e.origin}`;case"invalid_union":return"مدخل غير مقبول";case"invalid_element":return`مدخل غير مقبول في ${e.origin}`;default:return"مدخل غير مقبول"}}};function $r(){return{localeError:br()}}const Ur=()=>{const _={string:{unit:"simvol",verb:"olmalıdır"},file:{unit:"bayt",verb:"olmalıdır"},array:{unit:"element",verb:"olmalıdır"},set:{unit:"element",verb:"olmalıdır"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"input",email:"email address",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datetime",date:"ISO date",time:"ISO time",duration:"ISO duration",ipv4:"IPv4 address",ipv6:"IPv6 address",cidrv4:"IPv4 range",cidrv6:"IPv6 range",base64:"base64-encoded string",base64url:"base64url-encoded string",json_string:"JSON string",e164:"E.164 number",jwt:"JWT",template_literal:"input"};return e=>{switch(e.code){case"invalid_type":return`Yanlış dəyər: gözlənilən ${e.expected}, daxil olan ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Yanlış dəyər: gözlənilən ${c(e.values[0])}`:`Yanlış seçim: aşağıdakılardan biri olmalıdır: ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Çox böyük: gözlənilən ${e.origin??"dəyər"} ${l}${e.maximum.toString()} ${i.unit??"element"}`:`Çox böyük: gözlənilən ${e.origin??"dəyər"} ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Çox kiçik: gözlənilən ${e.origin} ${l}${e.minimum.toString()} ${i.unit}`:`Çox kiçik: gözlənilən ${e.origin} ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Yanlış mətn: "${l.prefix}" ilə başlamalıdır`:l.format==="ends_with"?`Yanlış mətn: "${l.suffix}" ilə bitməlidir`:l.format==="includes"?`Yanlış mətn: "${l.includes}" daxil olmalıdır`:l.format==="regex"?`Yanlış mətn: ${l.pattern} şablonuna uyğun olmalıdır`:`Yanlış ${n[l.format]??e.format}`}case"not_multiple_of":return`Yanlış ədəd: ${e.divisor} ilə bölünə bilən olmalıdır`;case"unrecognized_keys":return`Tanınmayan açar${e.keys.length>1?"lar":""}: ${s(e.keys,", ")}`;case"invalid_key":return`${e.origin} daxilində yanlış açar`;case"invalid_union":return"Yanlış dəyər";case"invalid_element":return`${e.origin} daxilində yanlış dəyər`;default:return"Yanlış dəyər"}}};function Tr(){return{localeError:Ur()}}function q(_,a,t,n){const e=Math.abs(_),l=e%10,i=e%100;return i>=11&&i<=19?n:l===1?a:l>=2&&l<=4?t:n}const Nr=()=>{const _={string:{unit:{one:"сімвал",few:"сімвалы",many:"сімвалаў"},verb:"мець"},array:{unit:{one:"элемент",few:"элементы",many:"элементаў"},verb:"мець"},set:{unit:{one:"элемент",few:"элементы",many:"элементаў"},verb:"мець"},file:{unit:{one:"байт",few:"байты",many:"байтаў"},verb:"мець"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"лік";case"object":{if(Array.isArray(e))return"масіў";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"увод",email:"email адрас",url:"URL",emoji:"эмодзі",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO дата і час",date:"ISO дата",time:"ISO час",duration:"ISO працягласць",ipv4:"IPv4 адрас",ipv6:"IPv6 адрас",cidrv4:"IPv4 дыяпазон",cidrv6:"IPv6 дыяпазон",base64:"радок у фармаце base64",base64url:"радок у фармаце base64url",json_string:"JSON радок",e164:"нумар E.164",jwt:"JWT",template_literal:"увод"};return e=>{switch(e.code){case"invalid_type":return`Няправільны ўвод: чакаўся ${e.expected}, атрымана ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Няправільны ўвод: чакалася ${c(e.values[0])}`:`Няправільны варыянт: чакаўся адзін з ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);if(i){const m=Number(e.maximum),S=q(m,i.unit.one,i.unit.few,i.unit.many);return`Занадта вялікі: чакалася, што ${e.origin??"значэнне"} павінна ${i.verb} ${l}${e.maximum.toString()} ${S}`}return`Занадта вялікі: чакалася, што ${e.origin??"значэнне"} павінна быць ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);if(i){const m=Number(e.minimum),S=q(m,i.unit.one,i.unit.few,i.unit.many);return`Занадта малы: чакалася, што ${e.origin} павінна ${i.verb} ${l}${e.minimum.toString()} ${S}`}return`Занадта малы: чакалася, што ${e.origin} павінна быць ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Няправільны радок: павінен пачынацца з "${l.prefix}"`:l.format==="ends_with"?`Няправільны радок: павінен заканчвацца на "${l.suffix}"`:l.format==="includes"?`Няправільны радок: павінен змяшчаць "${l.includes}"`:l.format==="regex"?`Няправільны радок: павінен адпавядаць шаблону ${l.pattern}`:`Няправільны ${n[l.format]??e.format}`}case"not_multiple_of":return`Няправільны лік: павінен быць кратным ${e.divisor}`;case"unrecognized_keys":return`Нераспазнаны ${e.keys.length>1?"ключы":"ключ"}: ${s(e.keys,", ")}`;case"invalid_key":return`Няправільны ключ у ${e.origin}`;case"invalid_union":return"Няправільны ўвод";case"invalid_element":return`Няправільнае значэнне ў ${e.origin}`;default:return"Няправільны ўвод"}}};function yr(){return{localeError:Nr()}}const hr=()=>{const _={string:{unit:"caràcters",verb:"contenir"},file:{unit:"bytes",verb:"contenir"},array:{unit:"elements",verb:"contenir"},set:{unit:"elements",verb:"contenir"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"entrada",email:"adreça electrònica",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"data i hora ISO",date:"data ISO",time:"hora ISO",duration:"durada ISO",ipv4:"adreça IPv4",ipv6:"adreça IPv6",cidrv4:"rang IPv4",cidrv6:"rang IPv6",base64:"cadena codificada en base64",base64url:"cadena codificada en base64url",json_string:"cadena JSON",e164:"número E.164",jwt:"JWT",template_literal:"entrada"};return e=>{switch(e.code){case"invalid_type":return`Tipus invàlid: s'esperava ${e.expected}, s'ha rebut ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Valor invàlid: s'esperava ${c(e.values[0])}`:`Opció invàlida: s'esperava una de ${s(e.values," o ")}`;case"too_big":{const l=e.inclusive?"com a màxim":"menys de",i=a(e.origin);return i?`Massa gran: s'esperava que ${e.origin??"el valor"} contingués ${l} ${e.maximum.toString()} ${i.unit??"elements"}`:`Massa gran: s'esperava que ${e.origin??"el valor"} fos ${l} ${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?"com a mínim":"més de",i=a(e.origin);return i?`Massa petit: s'esperava que ${e.origin} contingués ${l} ${e.minimum.toString()} ${i.unit}`:`Massa petit: s'esperava que ${e.origin} fos ${l} ${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Format invàlid: ha de començar amb "${l.prefix}"`:l.format==="ends_with"?`Format invàlid: ha d'acabar amb "${l.suffix}"`:l.format==="includes"?`Format invàlid: ha d'incloure "${l.includes}"`:l.format==="regex"?`Format invàlid: ha de coincidir amb el patró ${l.pattern}`:`Format invàlid per a ${n[l.format]??e.format}`}case"not_multiple_of":return`Número invàlid: ha de ser múltiple de ${e.divisor}`;case"unrecognized_keys":return`Clau${e.keys.length>1?"s":""} no reconeguda${e.keys.length>1?"s":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Clau invàlida a ${e.origin}`;case"invalid_union":return"Entrada invàlida";case"invalid_element":return`Element invàlid a ${e.origin}`;default:return"Entrada invàlida"}}};function Mr(){return{localeError:hr()}}const Dr=()=>{const _={string:{unit:"znaků",verb:"mít"},file:{unit:"bajtů",verb:"mít"},array:{unit:"prvků",verb:"mít"},set:{unit:"prvků",verb:"mít"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"číslo";case"string":return"řetězec";case"boolean":return"boolean";case"bigint":return"bigint";case"function":return"funkce";case"symbol":return"symbol";case"undefined":return"undefined";case"object":{if(Array.isArray(e))return"pole";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"regulární výraz",email:"e-mailová adresa",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"datum a čas ve formátu ISO",date:"datum ve formátu ISO",time:"čas ve formátu ISO",duration:"doba trvání ISO",ipv4:"IPv4 adresa",ipv6:"IPv6 adresa",cidrv4:"rozsah IPv4",cidrv6:"rozsah IPv6",base64:"řetězec zakódovaný ve formátu base64",base64url:"řetězec zakódovaný ve formátu base64url",json_string:"řetězec ve formátu JSON",e164:"číslo E.164",jwt:"JWT",template_literal:"vstup"};return e=>{switch(e.code){case"invalid_type":return`Neplatný vstup: očekáváno ${e.expected}, obdrženo ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Neplatný vstup: očekáváno ${c(e.values[0])}`:`Neplatná možnost: očekávána jedna z hodnot ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Hodnota je příliš velká: ${e.origin??"hodnota"} musí mít ${l}${e.maximum.toString()} ${i.unit??"prvků"}`:`Hodnota je příliš velká: ${e.origin??"hodnota"} musí být ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Hodnota je příliš malá: ${e.origin??"hodnota"} musí mít ${l}${e.minimum.toString()} ${i.unit??"prvků"}`:`Hodnota je příliš malá: ${e.origin??"hodnota"} musí být ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Neplatný řetězec: musí začínat na "${l.prefix}"`:l.format==="ends_with"?`Neplatný řetězec: musí končit na "${l.suffix}"`:l.format==="includes"?`Neplatný řetězec: musí obsahovat "${l.includes}"`:l.format==="regex"?`Neplatný řetězec: musí odpovídat vzoru ${l.pattern}`:`Neplatný formát ${n[l.format]??e.format}`}case"not_multiple_of":return`Neplatné číslo: musí být násobkem ${e.divisor}`;case"unrecognized_keys":return`Neznámé klíče: ${s(e.keys,", ")}`;case"invalid_key":return`Neplatný klíč v ${e.origin}`;case"invalid_union":return"Neplatný vstup";case"invalid_element":return`Neplatná hodnota v ${e.origin}`;default:return"Neplatný vstup"}}};function Gr(){return{localeError:Dr()}}const kr=()=>{const _={string:{unit:"tegn",verb:"havde"},file:{unit:"bytes",verb:"havde"},array:{unit:"elementer",verb:"indeholdt"},set:{unit:"elementer",verb:"indeholdt"}},a={string:"streng",number:"tal",boolean:"boolean",array:"liste",object:"objekt",set:"sæt",file:"fil"};function t(i){return _[i]??null}function n(i){return a[i]??i}const e=i=>{const m=typeof i;switch(m){case"number":return Number.isNaN(i)?"NaN":"tal";case"object":return Array.isArray(i)?"liste":i===null?"null":Object.getPrototypeOf(i)!==Object.prototype&&i.constructor?i.constructor.name:"objekt"}return m},l={regex:"input",email:"e-mailadresse",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO dato- og klokkeslæt",date:"ISO-dato",time:"ISO-klokkeslæt",duration:"ISO-varighed",ipv4:"IPv4-område",ipv6:"IPv6-område",cidrv4:"IPv4-spektrum",cidrv6:"IPv6-spektrum",base64:"base64-kodet streng",base64url:"base64url-kodet streng",json_string:"JSON-streng",e164:"E.164-nummer",jwt:"JWT",template_literal:"input"};return i=>{switch(i.code){case"invalid_type":return`Ugyldigt input: forventede ${n(i.expected)}, fik ${n(e(i.input))}`;case"invalid_value":return i.values.length===1?`Ugyldig værdi: forventede ${c(i.values[0])}`:`Ugyldigt valg: forventede en af følgende ${s(i.values,"|")}`;case"too_big":{const m=i.inclusive?"<=":"<",S=t(i.origin),C=n(i.origin);return S?`For stor: forventede ${C??"value"} ${S.verb} ${m} ${i.maximum.toString()} ${S.unit??"elementer"}`:`For stor: forventede ${C??"value"} havde ${m} ${i.maximum.toString()}`}case"too_small":{const m=i.inclusive?">=":">",S=t(i.origin),C=n(i.origin);return S?`For lille: forventede ${C} ${S.verb} ${m} ${i.minimum.toString()} ${S.unit}`:`For lille: forventede ${C} havde ${m} ${i.minimum.toString()}`}case"invalid_format":{const m=i;return m.format==="starts_with"?`Ugyldig streng: skal starte med "${m.prefix}"`:m.format==="ends_with"?`Ugyldig streng: skal ende med "${m.suffix}"`:m.format==="includes"?`Ugyldig streng: skal indeholde "${m.includes}"`:m.format==="regex"?`Ugyldig streng: skal matche mønsteret ${m.pattern}`:`Ugyldig ${l[m.format]??i.format}`}case"not_multiple_of":return`Ugyldigt tal: skal være deleligt med ${i.divisor}`;case"unrecognized_keys":return`${i.keys.length>1?"Ukendte nøgler":"Ukendt nøgle"}: ${s(i.keys,", ")}`;case"invalid_key":return`Ugyldig nøgle i ${i.origin}`;case"invalid_union":return"Ugyldigt input: matcher ingen af de tilladte typer";case"invalid_element":return`Ugyldig værdi i ${i.origin}`;default:return"Ugyldigt input"}}};function wr(){return{localeError:kr()}}const Br=()=>{const _={string:{unit:"Zeichen",verb:"zu haben"},file:{unit:"Bytes",verb:"zu haben"},array:{unit:"Elemente",verb:"zu haben"},set:{unit:"Elemente",verb:"zu haben"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"Zahl";case"object":{if(Array.isArray(e))return"Array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"Eingabe",email:"E-Mail-Adresse",url:"URL",emoji:"Emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO-Datum und -Uhrzeit",date:"ISO-Datum",time:"ISO-Uhrzeit",duration:"ISO-Dauer",ipv4:"IPv4-Adresse",ipv6:"IPv6-Adresse",cidrv4:"IPv4-Bereich",cidrv6:"IPv6-Bereich",base64:"Base64-codierter String",base64url:"Base64-URL-codierter String",json_string:"JSON-String",e164:"E.164-Nummer",jwt:"JWT",template_literal:"Eingabe"};return e=>{switch(e.code){case"invalid_type":return`Ungültige Eingabe: erwartet ${e.expected}, erhalten ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Ungültige Eingabe: erwartet ${c(e.values[0])}`:`Ungültige Option: erwartet eine von ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Zu groß: erwartet, dass ${e.origin??"Wert"} ${l}${e.maximum.toString()} ${i.unit??"Elemente"} hat`:`Zu groß: erwartet, dass ${e.origin??"Wert"} ${l}${e.maximum.toString()} ist`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Zu klein: erwartet, dass ${e.origin} ${l}${e.minimum.toString()} ${i.unit} hat`:`Zu klein: erwartet, dass ${e.origin} ${l}${e.minimum.toString()} ist`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Ungültiger String: muss mit "${l.prefix}" beginnen`:l.format==="ends_with"?`Ungültiger String: muss mit "${l.suffix}" enden`:l.format==="includes"?`Ungültiger String: muss "${l.includes}" enthalten`:l.format==="regex"?`Ungültiger String: muss dem Muster ${l.pattern} entsprechen`:`Ungültig: ${n[l.format]??e.format}`}case"not_multiple_of":return`Ungültige Zahl: muss ein Vielfaches von ${e.divisor} sein`;case"unrecognized_keys":return`${e.keys.length>1?"Unbekannte Schlüssel":"Unbekannter Schlüssel"}: ${s(e.keys,", ")}`;case"invalid_key":return`Ungültiger Schlüssel in ${e.origin}`;case"invalid_union":return"Ungültige Eingabe";case"invalid_element":return`Ungültiger Wert in ${e.origin}`;default:return"Ungültige Eingabe"}}};function Wr(){return{localeError:Br()}}const Hr=_=>{const a=typeof _;switch(a){case"number":return Number.isNaN(_)?"NaN":"number";case"object":{if(Array.isArray(_))return"array";if(_===null)return"null";if(Object.getPrototypeOf(_)!==Object.prototype&&_.constructor)return _.constructor.name}}return a},jr=()=>{const _={string:{unit:"characters",verb:"to have"},file:{unit:"bytes",verb:"to have"},array:{unit:"items",verb:"to have"},set:{unit:"items",verb:"to have"}};function a(n){return _[n]??null}const t={regex:"input",email:"email address",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datetime",date:"ISO date",time:"ISO time",duration:"ISO duration",ipv4:"IPv4 address",ipv6:"IPv6 address",cidrv4:"IPv4 range",cidrv6:"IPv6 range",base64:"base64-encoded string",base64url:"base64url-encoded string",json_string:"JSON string",e164:"E.164 number",jwt:"JWT",template_literal:"input"};return n=>{switch(n.code){case"invalid_type":return`Invalid input: expected ${n.expected}, received ${Hr(n.input)}`;case"invalid_value":return n.values.length===1?`Invalid input: expected ${c(n.values[0])}`:`Invalid option: expected one of ${s(n.values,"|")}`;case"too_big":{const e=n.inclusive?"<=":"<",l=a(n.origin);return l?`Too big: expected ${n.origin??"value"} to have ${e}${n.maximum.toString()} ${l.unit??"elements"}`:`Too big: expected ${n.origin??"value"} to be ${e}${n.maximum.toString()}`}case"too_small":{const e=n.inclusive?">=":">",l=a(n.origin);return l?`Too small: expected ${n.origin} to have ${e}${n.minimum.toString()} ${l.unit}`:`Too small: expected ${n.origin} to be ${e}${n.minimum.toString()}`}case"invalid_format":{const e=n;return e.format==="starts_with"?`Invalid string: must start with "${e.prefix}"`:e.format==="ends_with"?`Invalid string: must end with "${e.suffix}"`:e.format==="includes"?`Invalid string: must include "${e.includes}"`:e.format==="regex"?`Invalid string: must match pattern ${e.pattern}`:`Invalid ${t[e.format]??n.format}`}case"not_multiple_of":return`Invalid number: must be a multiple of ${n.divisor}`;case"unrecognized_keys":return`Unrecognized key${n.keys.length>1?"s":""}: ${s(n.keys,", ")}`;case"invalid_key":return`Invalid key in ${n.origin}`;case"invalid_union":return"Invalid input";case"invalid_element":return`Invalid value in ${n.origin}`;default:return"Invalid input"}}};function al(){return{localeError:jr()}}const zr=_=>{const a=typeof _;switch(a){case"number":return Number.isNaN(_)?"NaN":"nombro";case"object":{if(Array.isArray(_))return"tabelo";if(_===null)return"senvalora";if(Object.getPrototypeOf(_)!==Object.prototype&&_.constructor)return _.constructor.name}}return a},Zr=()=>{const _={string:{unit:"karaktrojn",verb:"havi"},file:{unit:"bajtojn",verb:"havi"},array:{unit:"elementojn",verb:"havi"},set:{unit:"elementojn",verb:"havi"}};function a(n){return _[n]??null}const t={regex:"enigo",email:"retadreso",url:"URL",emoji:"emoĝio",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO-datotempo",date:"ISO-dato",time:"ISO-tempo",duration:"ISO-daŭro",ipv4:"IPv4-adreso",ipv6:"IPv6-adreso",cidrv4:"IPv4-rango",cidrv6:"IPv6-rango",base64:"64-ume kodita karaktraro",base64url:"URL-64-ume kodita karaktraro",json_string:"JSON-karaktraro",e164:"E.164-nombro",jwt:"JWT",template_literal:"enigo"};return n=>{switch(n.code){case"invalid_type":return`Nevalida enigo: atendiĝis ${n.expected}, riceviĝis ${zr(n.input)}`;case"invalid_value":return n.values.length===1?`Nevalida enigo: atendiĝis ${c(n.values[0])}`:`Nevalida opcio: atendiĝis unu el ${s(n.values,"|")}`;case"too_big":{const e=n.inclusive?"<=":"<",l=a(n.origin);return l?`Tro granda: atendiĝis ke ${n.origin??"valoro"} havu ${e}${n.maximum.toString()} ${l.unit??"elementojn"}`:`Tro granda: atendiĝis ke ${n.origin??"valoro"} havu ${e}${n.maximum.toString()}`}case"too_small":{const e=n.inclusive?">=":">",l=a(n.origin);return l?`Tro malgranda: atendiĝis ke ${n.origin} havu ${e}${n.minimum.toString()} ${l.unit}`:`Tro malgranda: atendiĝis ke ${n.origin} estu ${e}${n.minimum.toString()}`}case"invalid_format":{const e=n;return e.format==="starts_with"?`Nevalida karaktraro: devas komenciĝi per "${e.prefix}"`:e.format==="ends_with"?`Nevalida karaktraro: devas finiĝi per "${e.suffix}"`:e.format==="includes"?`Nevalida karaktraro: devas inkluzivi "${e.includes}"`:e.format==="regex"?`Nevalida karaktraro: devas kongrui kun la modelo ${e.pattern}`:`Nevalida ${t[e.format]??n.format}`}case"not_multiple_of":return`Nevalida nombro: devas esti oblo de ${n.divisor}`;case"unrecognized_keys":return`Nekonata${n.keys.length>1?"j":""} ŝlosilo${n.keys.length>1?"j":""}: ${s(n.keys,", ")}`;case"invalid_key":return`Nevalida ŝlosilo en ${n.origin}`;case"invalid_union":return"Nevalida enigo";case"invalid_element":return`Nevalida valoro en ${n.origin}`;default:return"Nevalida enigo"}}};function Fr(){return{localeError:Zr()}}const Kr=()=>{const _={string:{unit:"caracteres",verb:"tener"},file:{unit:"bytes",verb:"tener"},array:{unit:"elementos",verb:"tener"},set:{unit:"elementos",verb:"tener"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"número";case"object":{if(Array.isArray(e))return"arreglo";if(e===null)return"nulo";if(Object.getPrototypeOf(e)!==Object.prototype)return e.constructor.name}}return l},n={regex:"entrada",email:"dirección de correo electrónico",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"fecha y hora ISO",date:"fecha ISO",time:"hora ISO",duration:"duración ISO",ipv4:"dirección IPv4",ipv6:"dirección IPv6",cidrv4:"rango IPv4",cidrv6:"rango IPv6",base64:"cadena codificada en base64",base64url:"URL codificada en base64",json_string:"cadena JSON",e164:"número E.164",jwt:"JWT",template_literal:"entrada"};return e=>{switch(e.code){case"invalid_type":return`Entrada inválida: se esperaba ${e.expected}, recibido ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Entrada inválida: se esperaba ${c(e.values[0])}`:`Opción inválida: se esperaba una de ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Demasiado grande: se esperaba que ${e.origin??"valor"} tuviera ${l}${e.maximum.toString()} ${i.unit??"elementos"}`:`Demasiado grande: se esperaba que ${e.origin??"valor"} fuera ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Demasiado pequeño: se esperaba que ${e.origin} tuviera ${l}${e.minimum.toString()} ${i.unit}`:`Demasiado pequeño: se esperaba que ${e.origin} fuera ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Cadena inválida: debe comenzar con "${l.prefix}"`:l.format==="ends_with"?`Cadena inválida: debe terminar en "${l.suffix}"`:l.format==="includes"?`Cadena inválida: debe incluir "${l.includes}"`:l.format==="regex"?`Cadena inválida: debe coincidir con el patrón ${l.pattern}`:`Inválido ${n[l.format]??e.format}`}case"not_multiple_of":return`Número inválido: debe ser múltiplo de ${e.divisor}`;case"unrecognized_keys":return`Llave${e.keys.length>1?"s":""} desconocida${e.keys.length>1?"s":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Llave inválida en ${e.origin}`;case"invalid_union":return"Entrada inválida";case"invalid_element":return`Valor inválido en ${e.origin}`;default:return"Entrada inválida"}}};function Vr(){return{localeError:Kr()}}const Yr=()=>{const _={string:{unit:"کاراکتر",verb:"داشته باشد"},file:{unit:"بایت",verb:"داشته باشد"},array:{unit:"آیتم",verb:"داشته باشد"},set:{unit:"آیتم",verb:"داشته باشد"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"عدد";case"object":{if(Array.isArray(e))return"آرایه";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"ورودی",email:"آدرس ایمیل",url:"URL",emoji:"ایموجی",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"تاریخ و زمان ایزو",date:"تاریخ ایزو",time:"زمان ایزو",duration:"مدت زمان ایزو",ipv4:"IPv4 آدرس",ipv6:"IPv6 آدرس",cidrv4:"IPv4 دامنه",cidrv6:"IPv6 دامنه",base64:"base64-encoded رشته",base64url:"base64url-encoded رشته",json_string:"JSON رشته",e164:"E.164 عدد",jwt:"JWT",template_literal:"ورودی"};return e=>{switch(e.code){case"invalid_type":return`ورودی نامعتبر: می‌بایست ${e.expected} می‌بود، ${t(e.input)} دریافت شد`;case"invalid_value":return e.values.length===1?`ورودی نامعتبر: می‌بایست ${c(e.values[0])} می‌بود`:`گزینه نامعتبر: می‌بایست یکی از ${s(e.values,"|")} می‌بود`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`خیلی بزرگ: ${e.origin??"مقدار"} باید ${l}${e.maximum.toString()} ${i.unit??"عنصر"} باشد`:`خیلی بزرگ: ${e.origin??"مقدار"} باید ${l}${e.maximum.toString()} باشد`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`خیلی کوچک: ${e.origin} باید ${l}${e.minimum.toString()} ${i.unit} باشد`:`خیلی کوچک: ${e.origin} باید ${l}${e.minimum.toString()} باشد`}case"invalid_format":{const l=e;return l.format==="starts_with"?`رشته نامعتبر: باید با "${l.prefix}" شروع شود`:l.format==="ends_with"?`رشته نامعتبر: باید با "${l.suffix}" تمام شود`:l.format==="includes"?`رشته نامعتبر: باید شامل "${l.includes}" باشد`:l.format==="regex"?`رشته نامعتبر: باید با الگوی ${l.pattern} مطابقت داشته باشد`:`${n[l.format]??e.format} نامعتبر`}case"not_multiple_of":return`عدد نامعتبر: باید مضرب ${e.divisor} باشد`;case"unrecognized_keys":return`کلید${e.keys.length>1?"های":""} ناشناس: ${s(e.keys,", ")}`;case"invalid_key":return`کلید ناشناس در ${e.origin}`;case"invalid_union":return"ورودی نامعتبر";case"invalid_element":return`مقدار نامعتبر در ${e.origin}`;default:return"ورودی نامعتبر"}}};function Jr(){return{localeError:Yr()}}const Xr=()=>{const _={string:{unit:"merkkiä",subject:"merkkijonon"},file:{unit:"tavua",subject:"tiedoston"},array:{unit:"alkiota",subject:"listan"},set:{unit:"alkiota",subject:"joukon"},number:{unit:"",subject:"luvun"},bigint:{unit:"",subject:"suuren kokonaisluvun"},int:{unit:"",subject:"kokonaisluvun"},date:{unit:"",subject:"päivämäärän"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"säännöllinen lauseke",email:"sähköpostiosoite",url:"URL-osoite",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO-aikaleima",date:"ISO-päivämäärä",time:"ISO-aika",duration:"ISO-kesto",ipv4:"IPv4-osoite",ipv6:"IPv6-osoite",cidrv4:"IPv4-alue",cidrv6:"IPv6-alue",base64:"base64-koodattu merkkijono",base64url:"base64url-koodattu merkkijono",json_string:"JSON-merkkijono",e164:"E.164-luku",jwt:"JWT",template_literal:"templaattimerkkijono"};return e=>{switch(e.code){case"invalid_type":return`Virheellinen tyyppi: odotettiin ${e.expected}, oli ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Virheellinen syöte: täytyy olla ${c(e.values[0])}`:`Virheellinen valinta: täytyy olla yksi seuraavista: ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Liian suuri: ${i.subject} täytyy olla ${l}${e.maximum.toString()} ${i.unit}`.trim():`Liian suuri: arvon täytyy olla ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Liian pieni: ${i.subject} täytyy olla ${l}${e.minimum.toString()} ${i.unit}`.trim():`Liian pieni: arvon täytyy olla ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Virheellinen syöte: täytyy alkaa "${l.prefix}"`:l.format==="ends_with"?`Virheellinen syöte: täytyy loppua "${l.suffix}"`:l.format==="includes"?`Virheellinen syöte: täytyy sisältää "${l.includes}"`:l.format==="regex"?`Virheellinen syöte: täytyy vastata säännöllistä lauseketta ${l.pattern}`:`Virheellinen ${n[l.format]??e.format}`}case"not_multiple_of":return`Virheellinen luku: täytyy olla luvun ${e.divisor} monikerta`;case"unrecognized_keys":return`${e.keys.length>1?"Tuntemattomat avaimet":"Tuntematon avain"}: ${s(e.keys,", ")}`;case"invalid_key":return"Virheellinen avain tietueessa";case"invalid_union":return"Virheellinen unioni";case"invalid_element":return"Virheellinen arvo joukossa";default:return"Virheellinen syöte"}}};function qr(){return{localeError:Xr()}}const Qr=()=>{const _={string:{unit:"caractères",verb:"avoir"},file:{unit:"octets",verb:"avoir"},array:{unit:"éléments",verb:"avoir"},set:{unit:"éléments",verb:"avoir"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"nombre";case"object":{if(Array.isArray(e))return"tableau";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"entrée",email:"adresse e-mail",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"date et heure ISO",date:"date ISO",time:"heure ISO",duration:"durée ISO",ipv4:"adresse IPv4",ipv6:"adresse IPv6",cidrv4:"plage IPv4",cidrv6:"plage IPv6",base64:"chaîne encodée en base64",base64url:"chaîne encodée en base64url",json_string:"chaîne JSON",e164:"numéro E.164",jwt:"JWT",template_literal:"entrée"};return e=>{switch(e.code){case"invalid_type":return`Entrée invalide : ${e.expected} attendu, ${t(e.input)} reçu`;case"invalid_value":return e.values.length===1?`Entrée invalide : ${c(e.values[0])} attendu`:`Option invalide : une valeur parmi ${s(e.values,"|")} attendue`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Trop grand : ${e.origin??"valeur"} doit ${i.verb} ${l}${e.maximum.toString()} ${i.unit??"élément(s)"}`:`Trop grand : ${e.origin??"valeur"} doit être ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Trop petit : ${e.origin} doit ${i.verb} ${l}${e.minimum.toString()} ${i.unit}`:`Trop petit : ${e.origin} doit être ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Chaîne invalide : doit commencer par "${l.prefix}"`:l.format==="ends_with"?`Chaîne invalide : doit se terminer par "${l.suffix}"`:l.format==="includes"?`Chaîne invalide : doit inclure "${l.includes}"`:l.format==="regex"?`Chaîne invalide : doit correspondre au modèle ${l.pattern}`:`${n[l.format]??e.format} invalide`}case"not_multiple_of":return`Nombre invalide : doit être un multiple de ${e.divisor}`;case"unrecognized_keys":return`Clé${e.keys.length>1?"s":""} non reconnue${e.keys.length>1?"s":""} : ${s(e.keys,", ")}`;case"invalid_key":return`Clé invalide dans ${e.origin}`;case"invalid_union":return"Entrée invalide";case"invalid_element":return`Valeur invalide dans ${e.origin}`;default:return"Entrée invalide"}}};function es(){return{localeError:Qr()}}const ls=()=>{const _={string:{unit:"caractères",verb:"avoir"},file:{unit:"octets",verb:"avoir"},array:{unit:"éléments",verb:"avoir"},set:{unit:"éléments",verb:"avoir"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"entrée",email:"adresse courriel",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"date-heure ISO",date:"date ISO",time:"heure ISO",duration:"durée ISO",ipv4:"adresse IPv4",ipv6:"adresse IPv6",cidrv4:"plage IPv4",cidrv6:"plage IPv6",base64:"chaîne encodée en base64",base64url:"chaîne encodée en base64url",json_string:"chaîne JSON",e164:"numéro E.164",jwt:"JWT",template_literal:"entrée"};return e=>{switch(e.code){case"invalid_type":return`Entrée invalide : attendu ${e.expected}, reçu ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Entrée invalide : attendu ${c(e.values[0])}`:`Option invalide : attendu l'une des valeurs suivantes ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"≤":"<",i=a(e.origin);return i?`Trop grand : attendu que ${e.origin??"la valeur"} ait ${l}${e.maximum.toString()} ${i.unit}`:`Trop grand : attendu que ${e.origin??"la valeur"} soit ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?"≥":">",i=a(e.origin);return i?`Trop petit : attendu que ${e.origin} ait ${l}${e.minimum.toString()} ${i.unit}`:`Trop petit : attendu que ${e.origin} soit ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Chaîne invalide : doit commencer par "${l.prefix}"`:l.format==="ends_with"?`Chaîne invalide : doit se terminer par "${l.suffix}"`:l.format==="includes"?`Chaîne invalide : doit inclure "${l.includes}"`:l.format==="regex"?`Chaîne invalide : doit correspondre au motif ${l.pattern}`:`${n[l.format]??e.format} invalide`}case"not_multiple_of":return`Nombre invalide : doit être un multiple de ${e.divisor}`;case"unrecognized_keys":return`Clé${e.keys.length>1?"s":""} non reconnue${e.keys.length>1?"s":""} : ${s(e.keys,", ")}`;case"invalid_key":return`Clé invalide dans ${e.origin}`;case"invalid_union":return"Entrée invalide";case"invalid_element":return`Valeur invalide dans ${e.origin}`;default:return"Entrée invalide"}}};function is(){return{localeError:ls()}}const ns=()=>{const _={string:{unit:"אותיות",verb:"לכלול"},file:{unit:"בייטים",verb:"לכלול"},array:{unit:"פריטים",verb:"לכלול"},set:{unit:"פריטים",verb:"לכלול"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"קלט",email:"כתובת אימייל",url:"כתובת רשת",emoji:"אימוג'י",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"תאריך וזמן ISO",date:"תאריך ISO",time:"זמן ISO",duration:"משך זמן ISO",ipv4:"כתובת IPv4",ipv6:"כתובת IPv6",cidrv4:"טווח IPv4",cidrv6:"טווח IPv6",base64:"מחרוזת בבסיס 64",base64url:"מחרוזת בבסיס 64 לכתובות רשת",json_string:"מחרוזת JSON",e164:"מספר E.164",jwt:"JWT",template_literal:"קלט"};return e=>{switch(e.code){case"invalid_type":return`קלט לא תקין: צריך ${e.expected}, התקבל ${t(e.input)}`;case"invalid_value":return e.values.length===1?`קלט לא תקין: צריך ${c(e.values[0])}`:`קלט לא תקין: צריך אחת מהאפשרויות  ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`גדול מדי: ${e.origin??"value"} צריך להיות ${l}${e.maximum.toString()} ${i.unit??"elements"}`:`גדול מדי: ${e.origin??"value"} צריך להיות ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`קטן מדי: ${e.origin} צריך להיות ${l}${e.minimum.toString()} ${i.unit}`:`קטן מדי: ${e.origin} צריך להיות ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`מחרוזת לא תקינה: חייבת להתחיל ב"${l.prefix}"`:l.format==="ends_with"?`מחרוזת לא תקינה: חייבת להסתיים ב "${l.suffix}"`:l.format==="includes"?`מחרוזת לא תקינה: חייבת לכלול "${l.includes}"`:l.format==="regex"?`מחרוזת לא תקינה: חייבת להתאים לתבנית ${l.pattern}`:`${n[l.format]??e.format} לא תקין`}case"not_multiple_of":return`מספר לא תקין: חייב להיות מכפלה של ${e.divisor}`;case"unrecognized_keys":return`מפתח${e.keys.length>1?"ות":""} לא מזוה${e.keys.length>1?"ים":"ה"}: ${s(e.keys,", ")}`;case"invalid_key":return`מפתח לא תקין ב${e.origin}`;case"invalid_union":return"קלט לא תקין";case"invalid_element":return`ערך לא תקין ב${e.origin}`;default:return"קלט לא תקין"}}};function as(){return{localeError:ns()}}const _s=()=>{const _={string:{unit:"karakter",verb:"legyen"},file:{unit:"byte",verb:"legyen"},array:{unit:"elem",verb:"legyen"},set:{unit:"elem",verb:"legyen"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"szám";case"object":{if(Array.isArray(e))return"tömb";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"bemenet",email:"email cím",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO időbélyeg",date:"ISO dátum",time:"ISO idő",duration:"ISO időintervallum",ipv4:"IPv4 cím",ipv6:"IPv6 cím",cidrv4:"IPv4 tartomány",cidrv6:"IPv6 tartomány",base64:"base64-kódolt string",base64url:"base64url-kódolt string",json_string:"JSON string",e164:"E.164 szám",jwt:"JWT",template_literal:"bemenet"};return e=>{switch(e.code){case"invalid_type":return`Érvénytelen bemenet: a várt érték ${e.expected}, a kapott érték ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Érvénytelen bemenet: a várt érték ${c(e.values[0])}`:`Érvénytelen opció: valamelyik érték várt ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Túl nagy: ${e.origin??"érték"} mérete túl nagy ${l}${e.maximum.toString()} ${i.unit??"elem"}`:`Túl nagy: a bemeneti érték ${e.origin??"érték"} túl nagy: ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Túl kicsi: a bemeneti érték ${e.origin} mérete túl kicsi ${l}${e.minimum.toString()} ${i.unit}`:`Túl kicsi: a bemeneti érték ${e.origin} túl kicsi ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Érvénytelen string: "${l.prefix}" értékkel kell kezdődnie`:l.format==="ends_with"?`Érvénytelen string: "${l.suffix}" értékkel kell végződnie`:l.format==="includes"?`Érvénytelen string: "${l.includes}" értéket kell tartalmaznia`:l.format==="regex"?`Érvénytelen string: ${l.pattern} mintának kell megfelelnie`:`Érvénytelen ${n[l.format]??e.format}`}case"not_multiple_of":return`Érvénytelen szám: ${e.divisor} többszörösének kell lennie`;case"unrecognized_keys":return`Ismeretlen kulcs${e.keys.length>1?"s":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Érvénytelen kulcs ${e.origin}`;case"invalid_union":return"Érvénytelen bemenet";case"invalid_element":return`Érvénytelen érték: ${e.origin}`;default:return"Érvénytelen bemenet"}}};function ts(){return{localeError:_s()}}const rs=()=>{const _={string:{unit:"karakter",verb:"memiliki"},file:{unit:"byte",verb:"memiliki"},array:{unit:"item",verb:"memiliki"},set:{unit:"item",verb:"memiliki"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"input",email:"alamat email",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"tanggal dan waktu format ISO",date:"tanggal format ISO",time:"jam format ISO",duration:"durasi format ISO",ipv4:"alamat IPv4",ipv6:"alamat IPv6",cidrv4:"rentang alamat IPv4",cidrv6:"rentang alamat IPv6",base64:"string dengan enkode base64",base64url:"string dengan enkode base64url",json_string:"string JSON",e164:"angka E.164",jwt:"JWT",template_literal:"input"};return e=>{switch(e.code){case"invalid_type":return`Input tidak valid: diharapkan ${e.expected}, diterima ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Input tidak valid: diharapkan ${c(e.values[0])}`:`Pilihan tidak valid: diharapkan salah satu dari ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Terlalu besar: diharapkan ${e.origin??"value"} memiliki ${l}${e.maximum.toString()} ${i.unit??"elemen"}`:`Terlalu besar: diharapkan ${e.origin??"value"} menjadi ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Terlalu kecil: diharapkan ${e.origin} memiliki ${l}${e.minimum.toString()} ${i.unit}`:`Terlalu kecil: diharapkan ${e.origin} menjadi ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`String tidak valid: harus dimulai dengan "${l.prefix}"`:l.format==="ends_with"?`String tidak valid: harus berakhir dengan "${l.suffix}"`:l.format==="includes"?`String tidak valid: harus menyertakan "${l.includes}"`:l.format==="regex"?`String tidak valid: harus sesuai pola ${l.pattern}`:`${n[l.format]??e.format} tidak valid`}case"not_multiple_of":return`Angka tidak valid: harus kelipatan dari ${e.divisor}`;case"unrecognized_keys":return`Kunci tidak dikenali ${e.keys.length>1?"s":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Kunci tidak valid di ${e.origin}`;case"invalid_union":return"Input tidak valid";case"invalid_element":return`Nilai tidak valid di ${e.origin}`;default:return"Input tidak valid"}}};function ss(){return{localeError:rs()}}const ms=_=>{const a=typeof _;switch(a){case"number":return Number.isNaN(_)?"NaN":"númer";case"object":{if(Array.isArray(_))return"fylki";if(_===null)return"null";if(Object.getPrototypeOf(_)!==Object.prototype&&_.constructor)return _.constructor.name}}return a},Es=()=>{const _={string:{unit:"stafi",verb:"að hafa"},file:{unit:"bæti",verb:"að hafa"},array:{unit:"hluti",verb:"að hafa"},set:{unit:"hluti",verb:"að hafa"}};function a(n){return _[n]??null}const t={regex:"gildi",email:"netfang",url:"vefslóð",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO dagsetning og tími",date:"ISO dagsetning",time:"ISO tími",duration:"ISO tímalengd",ipv4:"IPv4 address",ipv6:"IPv6 address",cidrv4:"IPv4 range",cidrv6:"IPv6 range",base64:"base64-encoded strengur",base64url:"base64url-encoded strengur",json_string:"JSON strengur",e164:"E.164 tölugildi",jwt:"JWT",template_literal:"gildi"};return n=>{switch(n.code){case"invalid_type":return`Rangt gildi: Þú slóst inn ${ms(n.input)} þar sem á að vera ${n.expected}`;case"invalid_value":return n.values.length===1?`Rangt gildi: gert ráð fyrir ${c(n.values[0])}`:`Ógilt val: má vera eitt af eftirfarandi ${s(n.values,"|")}`;case"too_big":{const e=n.inclusive?"<=":"<",l=a(n.origin);return l?`Of stórt: gert er ráð fyrir að ${n.origin??"gildi"} hafi ${e}${n.maximum.toString()} ${l.unit??"hluti"}`:`Of stórt: gert er ráð fyrir að ${n.origin??"gildi"} sé ${e}${n.maximum.toString()}`}case"too_small":{const e=n.inclusive?">=":">",l=a(n.origin);return l?`Of lítið: gert er ráð fyrir að ${n.origin} hafi ${e}${n.minimum.toString()} ${l.unit}`:`Of lítið: gert er ráð fyrir að ${n.origin} sé ${e}${n.minimum.toString()}`}case"invalid_format":{const e=n;return e.format==="starts_with"?`Ógildur strengur: verður að byrja á "${e.prefix}"`:e.format==="ends_with"?`Ógildur strengur: verður að enda á "${e.suffix}"`:e.format==="includes"?`Ógildur strengur: verður að innihalda "${e.includes}"`:e.format==="regex"?`Ógildur strengur: verður að fylgja mynstri ${e.pattern}`:`Rangt ${t[e.format]??n.format}`}case"not_multiple_of":return`Röng tala: verður að vera margfeldi af ${n.divisor}`;case"unrecognized_keys":return`Óþekkt ${n.keys.length>1?"ir lyklar":"ur lykill"}: ${s(n.keys,", ")}`;case"invalid_key":return`Rangur lykill í ${n.origin}`;case"invalid_union":return"Rangt gildi";case"invalid_element":return`Rangt gildi í ${n.origin}`;default:return"Rangt gildi"}}};function vs(){return{localeError:Es()}}const os=()=>{const _={string:{unit:"caratteri",verb:"avere"},file:{unit:"byte",verb:"avere"},array:{unit:"elementi",verb:"avere"},set:{unit:"elementi",verb:"avere"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"numero";case"object":{if(Array.isArray(e))return"vettore";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"input",email:"indirizzo email",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"data e ora ISO",date:"data ISO",time:"ora ISO",duration:"durata ISO",ipv4:"indirizzo IPv4",ipv6:"indirizzo IPv6",cidrv4:"intervallo IPv4",cidrv6:"intervallo IPv6",base64:"stringa codificata in base64",base64url:"URL codificata in base64",json_string:"stringa JSON",e164:"numero E.164",jwt:"JWT",template_literal:"input"};return e=>{switch(e.code){case"invalid_type":return`Input non valido: atteso ${e.expected}, ricevuto ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Input non valido: atteso ${c(e.values[0])}`:`Opzione non valida: atteso uno tra ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Troppo grande: ${e.origin??"valore"} deve avere ${l}${e.maximum.toString()} ${i.unit??"elementi"}`:`Troppo grande: ${e.origin??"valore"} deve essere ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Troppo piccolo: ${e.origin} deve avere ${l}${e.minimum.toString()} ${i.unit}`:`Troppo piccolo: ${e.origin} deve essere ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Stringa non valida: deve iniziare con "${l.prefix}"`:l.format==="ends_with"?`Stringa non valida: deve terminare con "${l.suffix}"`:l.format==="includes"?`Stringa non valida: deve includere "${l.includes}"`:l.format==="regex"?`Stringa non valida: deve corrispondere al pattern ${l.pattern}`:`Invalid ${n[l.format]??e.format}`}case"not_multiple_of":return`Numero non valido: deve essere un multiplo di ${e.divisor}`;case"unrecognized_keys":return`Chiav${e.keys.length>1?"i":"e"} non riconosciut${e.keys.length>1?"e":"a"}: ${s(e.keys,", ")}`;case"invalid_key":return`Chiave non valida in ${e.origin}`;case"invalid_union":return"Input non valido";case"invalid_element":return`Valore non valido in ${e.origin}`;default:return"Input non valido"}}};function cs(){return{localeError:os()}}const Ss=()=>{const _={string:{unit:"文字",verb:"である"},file:{unit:"バイト",verb:"である"},array:{unit:"要素",verb:"である"},set:{unit:"要素",verb:"である"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"数値";case"object":{if(Array.isArray(e))return"配列";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"入力値",email:"メールアドレス",url:"URL",emoji:"絵文字",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO日時",date:"ISO日付",time:"ISO時刻",duration:"ISO期間",ipv4:"IPv4アドレス",ipv6:"IPv6アドレス",cidrv4:"IPv4範囲",cidrv6:"IPv6範囲",base64:"base64エンコード文字列",base64url:"base64urlエンコード文字列",json_string:"JSON文字列",e164:"E.164番号",jwt:"JWT",template_literal:"入力値"};return e=>{switch(e.code){case"invalid_type":return`無効な入力: ${e.expected}が期待されましたが、${t(e.input)}が入力されました`;case"invalid_value":return e.values.length===1?`無効な入力: ${c(e.values[0])}が期待されました`:`無効な選択: ${s(e.values,"、")}のいずれかである必要があります`;case"too_big":{const l=e.inclusive?"以下である":"より小さい",i=a(e.origin);return i?`大きすぎる値: ${e.origin??"値"}は${e.maximum.toString()}${i.unit??"要素"}${l}必要があります`:`大きすぎる値: ${e.origin??"値"}は${e.maximum.toString()}${l}必要があります`}case"too_small":{const l=e.inclusive?"以上である":"より大きい",i=a(e.origin);return i?`小さすぎる値: ${e.origin}は${e.minimum.toString()}${i.unit}${l}必要があります`:`小さすぎる値: ${e.origin}は${e.minimum.toString()}${l}必要があります`}case"invalid_format":{const l=e;return l.format==="starts_with"?`無効な文字列: "${l.prefix}"で始まる必要があります`:l.format==="ends_with"?`無効な文字列: "${l.suffix}"で終わる必要があります`:l.format==="includes"?`無効な文字列: "${l.includes}"を含む必要があります`:l.format==="regex"?`無効な文字列: パターン${l.pattern}に一致する必要があります`:`無効な${n[l.format]??e.format}`}case"not_multiple_of":return`無効な数値: ${e.divisor}の倍数である必要があります`;case"unrecognized_keys":return`認識されていないキー${e.keys.length>1?"群":""}: ${s(e.keys,"、")}`;case"invalid_key":return`${e.origin}内の無効なキー`;case"invalid_union":return"無効な入力";case"invalid_element":return`${e.origin}内の無効な値`;default:return"無効な入力"}}};function us(){return{localeError:Ss()}}const Is=()=>{const _={string:{unit:"តួអក្សរ",verb:"គួរមាន"},file:{unit:"បៃ",verb:"គួរមាន"},array:{unit:"ធាតុ",verb:"គួរមាន"},set:{unit:"ធាតុ",verb:"គួរមាន"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"មិនមែនជាលេខ (NaN)":"លេខ";case"object":{if(Array.isArray(e))return"អារេ (Array)";if(e===null)return"គ្មានតម្លៃ (null)";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"ទិន្នន័យបញ្ចូល",email:"អាសយដ្ឋានអ៊ីមែល",url:"URL",emoji:"សញ្ញាអារម្មណ៍",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"កាលបរិច្ឆេទ និងម៉ោង ISO",date:"កាលបរិច្ឆេទ ISO",time:"ម៉ោង ISO",duration:"រយៈពេល ISO",ipv4:"អាសយដ្ឋាន IPv4",ipv6:"អាសយដ្ឋាន IPv6",cidrv4:"ដែនអាសយដ្ឋាន IPv4",cidrv6:"ដែនអាសយដ្ឋាន IPv6",base64:"ខ្សែអក្សរអ៊ិកូដ base64",base64url:"ខ្សែអក្សរអ៊ិកូដ base64url",json_string:"ខ្សែអក្សរ JSON",e164:"លេខ E.164",jwt:"JWT",template_literal:"ទិន្នន័យបញ្ចូល"};return e=>{switch(e.code){case"invalid_type":return`ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${e.expected} ប៉ុន្តែទទួលបាន ${t(e.input)}`;case"invalid_value":return e.values.length===1?`ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${c(e.values[0])}`:`ជម្រើសមិនត្រឹមត្រូវ៖ ត្រូវជាមួយក្នុងចំណោម ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`ធំពេក៖ ត្រូវការ ${e.origin??"តម្លៃ"} ${l} ${e.maximum.toString()} ${i.unit??"ធាតុ"}`:`ធំពេក៖ ត្រូវការ ${e.origin??"តម្លៃ"} ${l} ${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`តូចពេក៖ ត្រូវការ ${e.origin} ${l} ${e.minimum.toString()} ${i.unit}`:`តូចពេក៖ ត្រូវការ ${e.origin} ${l} ${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវចាប់ផ្តើមដោយ "${l.prefix}"`:l.format==="ends_with"?`ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវបញ្ចប់ដោយ "${l.suffix}"`:l.format==="includes"?`ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវមាន "${l.includes}"`:l.format==="regex"?`ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវតែផ្គូផ្គងនឹងទម្រង់ដែលបានកំណត់ ${l.pattern}`:`មិនត្រឹមត្រូវ៖ ${n[l.format]??e.format}`}case"not_multiple_of":return`លេខមិនត្រឹមត្រូវ៖ ត្រូវតែជាពហុគុណនៃ ${e.divisor}`;case"unrecognized_keys":return`រកឃើញសោមិនស្គាល់៖ ${s(e.keys,", ")}`;case"invalid_key":return`សោមិនត្រឹមត្រូវនៅក្នុង ${e.origin}`;case"invalid_union":return"ទិន្នន័យមិនត្រឹមត្រូវ";case"invalid_element":return`ទិន្នន័យមិនត្រឹមត្រូវនៅក្នុង ${e.origin}`;default:return"ទិន្នន័យមិនត្រឹមត្រូវ"}}};function ps(){return{localeError:Is()}}const Ps=()=>{const _={string:{unit:"문자",verb:"to have"},file:{unit:"바이트",verb:"to have"},array:{unit:"개",verb:"to have"},set:{unit:"개",verb:"to have"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"입력",email:"이메일 주소",url:"URL",emoji:"이모지",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO 날짜시간",date:"ISO 날짜",time:"ISO 시간",duration:"ISO 기간",ipv4:"IPv4 주소",ipv6:"IPv6 주소",cidrv4:"IPv4 범위",cidrv6:"IPv6 범위",base64:"base64 인코딩 문자열",base64url:"base64url 인코딩 문자열",json_string:"JSON 문자열",e164:"E.164 번호",jwt:"JWT",template_literal:"입력"};return e=>{switch(e.code){case"invalid_type":return`잘못된 입력: 예상 타입은 ${e.expected}, 받은 타입은 ${t(e.input)}입니다`;case"invalid_value":return e.values.length===1?`잘못된 입력: 값은 ${c(e.values[0])} 이어야 합니다`:`잘못된 옵션: ${s(e.values,"또는 ")} 중 하나여야 합니다`;case"too_big":{const l=e.inclusive?"이하":"미만",i=l==="미만"?"이어야 합니다":"여야 합니다",m=a(e.origin),S=(m==null?void 0:m.unit)??"요소";return m?`${e.origin??"값"}이 너무 큽니다: ${e.maximum.toString()}${S} ${l}${i}`:`${e.origin??"값"}이 너무 큽니다: ${e.maximum.toString()} ${l}${i}`}case"too_small":{const l=e.inclusive?"이상":"초과",i=l==="이상"?"이어야 합니다":"여야 합니다",m=a(e.origin),S=(m==null?void 0:m.unit)??"요소";return m?`${e.origin??"값"}이 너무 작습니다: ${e.minimum.toString()}${S} ${l}${i}`:`${e.origin??"값"}이 너무 작습니다: ${e.minimum.toString()} ${l}${i}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`잘못된 문자열: "${l.prefix}"(으)로 시작해야 합니다`:l.format==="ends_with"?`잘못된 문자열: "${l.suffix}"(으)로 끝나야 합니다`:l.format==="includes"?`잘못된 문자열: "${l.includes}"을(를) 포함해야 합니다`:l.format==="regex"?`잘못된 문자열: 정규식 ${l.pattern} 패턴과 일치해야 합니다`:`잘못된 ${n[l.format]??e.format}`}case"not_multiple_of":return`잘못된 숫자: ${e.divisor}의 배수여야 합니다`;case"unrecognized_keys":return`인식할 수 없는 키: ${s(e.keys,", ")}`;case"invalid_key":return`잘못된 키: ${e.origin}`;case"invalid_union":return"잘못된 입력";case"invalid_element":return`잘못된 값: ${e.origin}`;default:return"잘못된 입력"}}};function ds(){return{localeError:Ps()}}const Cs=()=>{const _={string:{unit:"знаци",verb:"да имаат"},file:{unit:"бајти",verb:"да имаат"},array:{unit:"ставки",verb:"да имаат"},set:{unit:"ставки",verb:"да имаат"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"број";case"object":{if(Array.isArray(e))return"низа";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"внес",email:"адреса на е-пошта",url:"URL",emoji:"емоџи",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO датум и време",date:"ISO датум",time:"ISO време",duration:"ISO времетраење",ipv4:"IPv4 адреса",ipv6:"IPv6 адреса",cidrv4:"IPv4 опсег",cidrv6:"IPv6 опсег",base64:"base64-енкодирана низа",base64url:"base64url-енкодирана низа",json_string:"JSON низа",e164:"E.164 број",jwt:"JWT",template_literal:"внес"};return e=>{switch(e.code){case"invalid_type":return`Грешен внес: се очекува ${e.expected}, примено ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Invalid input: expected ${c(e.values[0])}`:`Грешана опција: се очекува една ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Премногу голем: се очекува ${e.origin??"вредноста"} да има ${l}${e.maximum.toString()} ${i.unit??"елементи"}`:`Премногу голем: се очекува ${e.origin??"вредноста"} да биде ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Премногу мал: се очекува ${e.origin} да има ${l}${e.minimum.toString()} ${i.unit}`:`Премногу мал: се очекува ${e.origin} да биде ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Неважечка низа: мора да започнува со "${l.prefix}"`:l.format==="ends_with"?`Неважечка низа: мора да завршува со "${l.suffix}"`:l.format==="includes"?`Неважечка низа: мора да вклучува "${l.includes}"`:l.format==="regex"?`Неважечка низа: мора да одгоара на патернот ${l.pattern}`:`Invalid ${n[l.format]??e.format}`}case"not_multiple_of":return`Грешен број: мора да биде делив со ${e.divisor}`;case"unrecognized_keys":return`${e.keys.length>1?"Непрепознаени клучеви":"Непрепознаен клуч"}: ${s(e.keys,", ")}`;case"invalid_key":return`Грешен клуч во ${e.origin}`;case"invalid_union":return"Грешен внес";case"invalid_element":return`Грешна вредност во ${e.origin}`;default:return"Грешен внес"}}};function xs(){return{localeError:Cs()}}const gs=()=>{const _={string:{unit:"aksara",verb:"mempunyai"},file:{unit:"bait",verb:"mempunyai"},array:{unit:"elemen",verb:"mempunyai"},set:{unit:"elemen",verb:"mempunyai"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"nombor";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"input",email:"alamat e-mel",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"tarikh masa ISO",date:"tarikh ISO",time:"masa ISO",duration:"tempoh ISO",ipv4:"alamat IPv4",ipv6:"alamat IPv6",cidrv4:"julat IPv4",cidrv6:"julat IPv6",base64:"string dikodkan base64",base64url:"string dikodkan base64url",json_string:"string JSON",e164:"nombor E.164",jwt:"JWT",template_literal:"input"};return e=>{switch(e.code){case"invalid_type":return`Input tidak sah: dijangka ${e.expected}, diterima ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Input tidak sah: dijangka ${c(e.values[0])}`:`Pilihan tidak sah: dijangka salah satu daripada ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Terlalu besar: dijangka ${e.origin??"nilai"} ${i.verb} ${l}${e.maximum.toString()} ${i.unit??"elemen"}`:`Terlalu besar: dijangka ${e.origin??"nilai"} adalah ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Terlalu kecil: dijangka ${e.origin} ${i.verb} ${l}${e.minimum.toString()} ${i.unit}`:`Terlalu kecil: dijangka ${e.origin} adalah ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`String tidak sah: mesti bermula dengan "${l.prefix}"`:l.format==="ends_with"?`String tidak sah: mesti berakhir dengan "${l.suffix}"`:l.format==="includes"?`String tidak sah: mesti mengandungi "${l.includes}"`:l.format==="regex"?`String tidak sah: mesti sepadan dengan corak ${l.pattern}`:`${n[l.format]??e.format} tidak sah`}case"not_multiple_of":return`Nombor tidak sah: perlu gandaan ${e.divisor}`;case"unrecognized_keys":return`Kunci tidak dikenali: ${s(e.keys,", ")}`;case"invalid_key":return`Kunci tidak sah dalam ${e.origin}`;case"invalid_union":return"Input tidak sah";case"invalid_element":return`Nilai tidak sah dalam ${e.origin}`;default:return"Input tidak sah"}}};function As(){return{localeError:gs()}}const fs=()=>{const _={string:{unit:"tekens"},file:{unit:"bytes"},array:{unit:"elementen"},set:{unit:"elementen"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"getal";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"invoer",email:"emailadres",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datum en tijd",date:"ISO datum",time:"ISO tijd",duration:"ISO duur",ipv4:"IPv4-adres",ipv6:"IPv6-adres",cidrv4:"IPv4-bereik",cidrv6:"IPv6-bereik",base64:"base64-gecodeerde tekst",base64url:"base64 URL-gecodeerde tekst",json_string:"JSON string",e164:"E.164-nummer",jwt:"JWT",template_literal:"invoer"};return e=>{switch(e.code){case"invalid_type":return`Ongeldige invoer: verwacht ${e.expected}, ontving ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Ongeldige invoer: verwacht ${c(e.values[0])}`:`Ongeldige optie: verwacht één van ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Te lang: verwacht dat ${e.origin??"waarde"} ${l}${e.maximum.toString()} ${i.unit??"elementen"} bevat`:`Te lang: verwacht dat ${e.origin??"waarde"} ${l}${e.maximum.toString()} is`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Te kort: verwacht dat ${e.origin} ${l}${e.minimum.toString()} ${i.unit} bevat`:`Te kort: verwacht dat ${e.origin} ${l}${e.minimum.toString()} is`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Ongeldige tekst: moet met "${l.prefix}" beginnen`:l.format==="ends_with"?`Ongeldige tekst: moet op "${l.suffix}" eindigen`:l.format==="includes"?`Ongeldige tekst: moet "${l.includes}" bevatten`:l.format==="regex"?`Ongeldige tekst: moet overeenkomen met patroon ${l.pattern}`:`Ongeldig: ${n[l.format]??e.format}`}case"not_multiple_of":return`Ongeldig getal: moet een veelvoud van ${e.divisor} zijn`;case"unrecognized_keys":return`Onbekende key${e.keys.length>1?"s":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Ongeldige key in ${e.origin}`;case"invalid_union":return"Ongeldige invoer";case"invalid_element":return`Ongeldige waarde in ${e.origin}`;default:return"Ongeldige invoer"}}};function Os(){return{localeError:fs()}}const Rs=()=>{const _={string:{unit:"tegn",verb:"å ha"},file:{unit:"bytes",verb:"å ha"},array:{unit:"elementer",verb:"å inneholde"},set:{unit:"elementer",verb:"å inneholde"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"tall";case"object":{if(Array.isArray(e))return"liste";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"input",email:"e-postadresse",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO dato- og klokkeslett",date:"ISO-dato",time:"ISO-klokkeslett",duration:"ISO-varighet",ipv4:"IPv4-område",ipv6:"IPv6-område",cidrv4:"IPv4-spekter",cidrv6:"IPv6-spekter",base64:"base64-enkodet streng",base64url:"base64url-enkodet streng",json_string:"JSON-streng",e164:"E.164-nummer",jwt:"JWT",template_literal:"input"};return e=>{switch(e.code){case"invalid_type":return`Ugyldig input: forventet ${e.expected}, fikk ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Ugyldig verdi: forventet ${c(e.values[0])}`:`Ugyldig valg: forventet en av ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`For stor(t): forventet ${e.origin??"value"} til å ha ${l}${e.maximum.toString()} ${i.unit??"elementer"}`:`For stor(t): forventet ${e.origin??"value"} til å ha ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`For lite(n): forventet ${e.origin} til å ha ${l}${e.minimum.toString()} ${i.unit}`:`For lite(n): forventet ${e.origin} til å ha ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Ugyldig streng: må starte med "${l.prefix}"`:l.format==="ends_with"?`Ugyldig streng: må ende med "${l.suffix}"`:l.format==="includes"?`Ugyldig streng: må inneholde "${l.includes}"`:l.format==="regex"?`Ugyldig streng: må matche mønsteret ${l.pattern}`:`Ugyldig ${n[l.format]??e.format}`}case"not_multiple_of":return`Ugyldig tall: må være et multiplum av ${e.divisor}`;case"unrecognized_keys":return`${e.keys.length>1?"Ukjente nøkler":"Ukjent nøkkel"}: ${s(e.keys,", ")}`;case"invalid_key":return`Ugyldig nøkkel i ${e.origin}`;case"invalid_union":return"Ugyldig input";case"invalid_element":return`Ugyldig verdi i ${e.origin}`;default:return"Ugyldig input"}}};function Ls(){return{localeError:Rs()}}const bs=()=>{const _={string:{unit:"harf",verb:"olmalıdır"},file:{unit:"bayt",verb:"olmalıdır"},array:{unit:"unsur",verb:"olmalıdır"},set:{unit:"unsur",verb:"olmalıdır"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"numara";case"object":{if(Array.isArray(e))return"saf";if(e===null)return"gayb";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"giren",email:"epostagâh",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO hengâmı",date:"ISO tarihi",time:"ISO zamanı",duration:"ISO müddeti",ipv4:"IPv4 nişânı",ipv6:"IPv6 nişânı",cidrv4:"IPv4 menzili",cidrv6:"IPv6 menzili",base64:"base64-şifreli metin",base64url:"base64url-şifreli metin",json_string:"JSON metin",e164:"E.164 sayısı",jwt:"JWT",template_literal:"giren"};return e=>{switch(e.code){case"invalid_type":return`Fâsit giren: umulan ${e.expected}, alınan ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Fâsit giren: umulan ${c(e.values[0])}`:`Fâsit tercih: mûteberler ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Fazla büyük: ${e.origin??"value"}, ${l}${e.maximum.toString()} ${i.unit??"elements"} sahip olmalıydı.`:`Fazla büyük: ${e.origin??"value"}, ${l}${e.maximum.toString()} olmalıydı.`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Fazla küçük: ${e.origin}, ${l}${e.minimum.toString()} ${i.unit} sahip olmalıydı.`:`Fazla küçük: ${e.origin}, ${l}${e.minimum.toString()} olmalıydı.`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Fâsit metin: "${l.prefix}" ile başlamalı.`:l.format==="ends_with"?`Fâsit metin: "${l.suffix}" ile bitmeli.`:l.format==="includes"?`Fâsit metin: "${l.includes}" ihtivâ etmeli.`:l.format==="regex"?`Fâsit metin: ${l.pattern} nakşına uymalı.`:`Fâsit ${n[l.format]??e.format}`}case"not_multiple_of":return`Fâsit sayı: ${e.divisor} katı olmalıydı.`;case"unrecognized_keys":return`Tanınmayan anahtar ${e.keys.length>1?"s":""}: ${s(e.keys,", ")}`;case"invalid_key":return`${e.origin} için tanınmayan anahtar var.`;case"invalid_union":return"Giren tanınamadı.";case"invalid_element":return`${e.origin} için tanınmayan kıymet var.`;default:return"Kıymet tanınamadı."}}};function $s(){return{localeError:bs()}}const Us=()=>{const _={string:{unit:"توکي",verb:"ولري"},file:{unit:"بایټس",verb:"ولري"},array:{unit:"توکي",verb:"ولري"},set:{unit:"توکي",verb:"ولري"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"عدد";case"object":{if(Array.isArray(e))return"ارې";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"ورودي",email:"بریښنالیک",url:"یو آر ال",emoji:"ایموجي",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"نیټه او وخت",date:"نېټه",time:"وخت",duration:"موده",ipv4:"د IPv4 پته",ipv6:"د IPv6 پته",cidrv4:"د IPv4 ساحه",cidrv6:"د IPv6 ساحه",base64:"base64-encoded متن",base64url:"base64url-encoded متن",json_string:"JSON متن",e164:"د E.164 شمېره",jwt:"JWT",template_literal:"ورودي"};return e=>{switch(e.code){case"invalid_type":return`ناسم ورودي: باید ${e.expected} وای, مګر ${t(e.input)} ترلاسه شو`;case"invalid_value":return e.values.length===1?`ناسم ورودي: باید ${c(e.values[0])} وای`:`ناسم انتخاب: باید یو له ${s(e.values,"|")} څخه وای`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`ډیر لوی: ${e.origin??"ارزښت"} باید ${l}${e.maximum.toString()} ${i.unit??"عنصرونه"} ولري`:`ډیر لوی: ${e.origin??"ارزښت"} باید ${l}${e.maximum.toString()} وي`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`ډیر کوچنی: ${e.origin} باید ${l}${e.minimum.toString()} ${i.unit} ولري`:`ډیر کوچنی: ${e.origin} باید ${l}${e.minimum.toString()} وي`}case"invalid_format":{const l=e;return l.format==="starts_with"?`ناسم متن: باید د "${l.prefix}" سره پیل شي`:l.format==="ends_with"?`ناسم متن: باید د "${l.suffix}" سره پای ته ورسيږي`:l.format==="includes"?`ناسم متن: باید "${l.includes}" ولري`:l.format==="regex"?`ناسم متن: باید د ${l.pattern} سره مطابقت ولري`:`${n[l.format]??e.format} ناسم دی`}case"not_multiple_of":return`ناسم عدد: باید د ${e.divisor} مضرب وي`;case"unrecognized_keys":return`ناسم ${e.keys.length>1?"کلیډونه":"کلیډ"}: ${s(e.keys,", ")}`;case"invalid_key":return`ناسم کلیډ په ${e.origin} کې`;case"invalid_union":return"ناسمه ورودي";case"invalid_element":return`ناسم عنصر په ${e.origin} کې`;default:return"ناسمه ورودي"}}};function Ts(){return{localeError:Us()}}const Ns=()=>{const _={string:{unit:"znaków",verb:"mieć"},file:{unit:"bajtów",verb:"mieć"},array:{unit:"elementów",verb:"mieć"},set:{unit:"elementów",verb:"mieć"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"liczba";case"object":{if(Array.isArray(e))return"tablica";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"wyrażenie",email:"adres email",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"data i godzina w formacie ISO",date:"data w formacie ISO",time:"godzina w formacie ISO",duration:"czas trwania ISO",ipv4:"adres IPv4",ipv6:"adres IPv6",cidrv4:"zakres IPv4",cidrv6:"zakres IPv6",base64:"ciąg znaków zakodowany w formacie base64",base64url:"ciąg znaków zakodowany w formacie base64url",json_string:"ciąg znaków w formacie JSON",e164:"liczba E.164",jwt:"JWT",template_literal:"wejście"};return e=>{switch(e.code){case"invalid_type":return`Nieprawidłowe dane wejściowe: oczekiwano ${e.expected}, otrzymano ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Nieprawidłowe dane wejściowe: oczekiwano ${c(e.values[0])}`:`Nieprawidłowa opcja: oczekiwano jednej z wartości ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Za duża wartość: oczekiwano, że ${e.origin??"wartość"} będzie mieć ${l}${e.maximum.toString()} ${i.unit??"elementów"}`:`Zbyt duż(y/a/e): oczekiwano, że ${e.origin??"wartość"} będzie wynosić ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Za mała wartość: oczekiwano, że ${e.origin??"wartość"} będzie mieć ${l}${e.minimum.toString()} ${i.unit??"elementów"}`:`Zbyt mał(y/a/e): oczekiwano, że ${e.origin??"wartość"} będzie wynosić ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Nieprawidłowy ciąg znaków: musi zaczynać się od "${l.prefix}"`:l.format==="ends_with"?`Nieprawidłowy ciąg znaków: musi kończyć się na "${l.suffix}"`:l.format==="includes"?`Nieprawidłowy ciąg znaków: musi zawierać "${l.includes}"`:l.format==="regex"?`Nieprawidłowy ciąg znaków: musi odpowiadać wzorcowi ${l.pattern}`:`Nieprawidłow(y/a/e) ${n[l.format]??e.format}`}case"not_multiple_of":return`Nieprawidłowa liczba: musi być wielokrotnością ${e.divisor}`;case"unrecognized_keys":return`Nierozpoznane klucze${e.keys.length>1?"s":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Nieprawidłowy klucz w ${e.origin}`;case"invalid_union":return"Nieprawidłowe dane wejściowe";case"invalid_element":return`Nieprawidłowa wartość w ${e.origin}`;default:return"Nieprawidłowe dane wejściowe"}}};function ys(){return{localeError:Ns()}}const hs=()=>{const _={string:{unit:"caracteres",verb:"ter"},file:{unit:"bytes",verb:"ter"},array:{unit:"itens",verb:"ter"},set:{unit:"itens",verb:"ter"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"número";case"object":{if(Array.isArray(e))return"array";if(e===null)return"nulo";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"padrão",email:"endereço de e-mail",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"data e hora ISO",date:"data ISO",time:"hora ISO",duration:"duração ISO",ipv4:"endereço IPv4",ipv6:"endereço IPv6",cidrv4:"faixa de IPv4",cidrv6:"faixa de IPv6",base64:"texto codificado em base64",base64url:"URL codificada em base64",json_string:"texto JSON",e164:"número E.164",jwt:"JWT",template_literal:"entrada"};return e=>{switch(e.code){case"invalid_type":return`Tipo inválido: esperado ${e.expected}, recebido ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Entrada inválida: esperado ${c(e.values[0])}`:`Opção inválida: esperada uma das ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Muito grande: esperado que ${e.origin??"valor"} tivesse ${l}${e.maximum.toString()} ${i.unit??"elementos"}`:`Muito grande: esperado que ${e.origin??"valor"} fosse ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Muito pequeno: esperado que ${e.origin} tivesse ${l}${e.minimum.toString()} ${i.unit}`:`Muito pequeno: esperado que ${e.origin} fosse ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Texto inválido: deve começar com "${l.prefix}"`:l.format==="ends_with"?`Texto inválido: deve terminar com "${l.suffix}"`:l.format==="includes"?`Texto inválido: deve incluir "${l.includes}"`:l.format==="regex"?`Texto inválido: deve corresponder ao padrão ${l.pattern}`:`${n[l.format]??e.format} inválido`}case"not_multiple_of":return`Número inválido: deve ser múltiplo de ${e.divisor}`;case"unrecognized_keys":return`Chave${e.keys.length>1?"s":""} desconhecida${e.keys.length>1?"s":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Chave inválida em ${e.origin}`;case"invalid_union":return"Entrada inválida";case"invalid_element":return`Valor inválido em ${e.origin}`;default:return"Campo inválido"}}};function Ms(){return{localeError:hs()}}function Q(_,a,t,n){const e=Math.abs(_),l=e%10,i=e%100;return i>=11&&i<=19?n:l===1?a:l>=2&&l<=4?t:n}const Ds=()=>{const _={string:{unit:{one:"символ",few:"символа",many:"символов"},verb:"иметь"},file:{unit:{one:"байт",few:"байта",many:"байт"},verb:"иметь"},array:{unit:{one:"элемент",few:"элемента",many:"элементов"},verb:"иметь"},set:{unit:{one:"элемент",few:"элемента",many:"элементов"},verb:"иметь"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"число";case"object":{if(Array.isArray(e))return"массив";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"ввод",email:"email адрес",url:"URL",emoji:"эмодзи",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO дата и время",date:"ISO дата",time:"ISO время",duration:"ISO длительность",ipv4:"IPv4 адрес",ipv6:"IPv6 адрес",cidrv4:"IPv4 диапазон",cidrv6:"IPv6 диапазон",base64:"строка в формате base64",base64url:"строка в формате base64url",json_string:"JSON строка",e164:"номер E.164",jwt:"JWT",template_literal:"ввод"};return e=>{switch(e.code){case"invalid_type":return`Неверный ввод: ожидалось ${e.expected}, получено ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Неверный ввод: ожидалось ${c(e.values[0])}`:`Неверный вариант: ожидалось одно из ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);if(i){const m=Number(e.maximum),S=Q(m,i.unit.one,i.unit.few,i.unit.many);return`Слишком большое значение: ожидалось, что ${e.origin??"значение"} будет иметь ${l}${e.maximum.toString()} ${S}`}return`Слишком большое значение: ожидалось, что ${e.origin??"значение"} будет ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);if(i){const m=Number(e.minimum),S=Q(m,i.unit.one,i.unit.few,i.unit.many);return`Слишком маленькое значение: ожидалось, что ${e.origin} будет иметь ${l}${e.minimum.toString()} ${S}`}return`Слишком маленькое значение: ожидалось, что ${e.origin} будет ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Неверная строка: должна начинаться с "${l.prefix}"`:l.format==="ends_with"?`Неверная строка: должна заканчиваться на "${l.suffix}"`:l.format==="includes"?`Неверная строка: должна содержать "${l.includes}"`:l.format==="regex"?`Неверная строка: должна соответствовать шаблону ${l.pattern}`:`Неверный ${n[l.format]??e.format}`}case"not_multiple_of":return`Неверное число: должно быть кратным ${e.divisor}`;case"unrecognized_keys":return`Нераспознанн${e.keys.length>1?"ые":"ый"} ключ${e.keys.length>1?"и":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Неверный ключ в ${e.origin}`;case"invalid_union":return"Неверные входные данные";case"invalid_element":return`Неверное значение в ${e.origin}`;default:return"Неверные входные данные"}}};function Gs(){return{localeError:Ds()}}const ks=()=>{const _={string:{unit:"znakov",verb:"imeti"},file:{unit:"bajtov",verb:"imeti"},array:{unit:"elementov",verb:"imeti"},set:{unit:"elementov",verb:"imeti"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"število";case"object":{if(Array.isArray(e))return"tabela";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"vnos",email:"e-poštni naslov",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datum in čas",date:"ISO datum",time:"ISO čas",duration:"ISO trajanje",ipv4:"IPv4 naslov",ipv6:"IPv6 naslov",cidrv4:"obseg IPv4",cidrv6:"obseg IPv6",base64:"base64 kodiran niz",base64url:"base64url kodiran niz",json_string:"JSON niz",e164:"E.164 številka",jwt:"JWT",template_literal:"vnos"};return e=>{switch(e.code){case"invalid_type":return`Neveljaven vnos: pričakovano ${e.expected}, prejeto ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Neveljaven vnos: pričakovano ${c(e.values[0])}`:`Neveljavna možnost: pričakovano eno izmed ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Preveliko: pričakovano, da bo ${e.origin??"vrednost"} imelo ${l}${e.maximum.toString()} ${i.unit??"elementov"}`:`Preveliko: pričakovano, da bo ${e.origin??"vrednost"} ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Premajhno: pričakovano, da bo ${e.origin} imelo ${l}${e.minimum.toString()} ${i.unit}`:`Premajhno: pričakovano, da bo ${e.origin} ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Neveljaven niz: mora se začeti z "${l.prefix}"`:l.format==="ends_with"?`Neveljaven niz: mora se končati z "${l.suffix}"`:l.format==="includes"?`Neveljaven niz: mora vsebovati "${l.includes}"`:l.format==="regex"?`Neveljaven niz: mora ustrezati vzorcu ${l.pattern}`:`Neveljaven ${n[l.format]??e.format}`}case"not_multiple_of":return`Neveljavno število: mora biti večkratnik ${e.divisor}`;case"unrecognized_keys":return`Neprepoznan${e.keys.length>1?"i ključi":" ključ"}: ${s(e.keys,", ")}`;case"invalid_key":return`Neveljaven ključ v ${e.origin}`;case"invalid_union":return"Neveljaven vnos";case"invalid_element":return`Neveljavna vrednost v ${e.origin}`;default:return"Neveljaven vnos"}}};function ws(){return{localeError:ks()}}const Bs=()=>{const _={string:{unit:"tecken",verb:"att ha"},file:{unit:"bytes",verb:"att ha"},array:{unit:"objekt",verb:"att innehålla"},set:{unit:"objekt",verb:"att innehålla"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"antal";case"object":{if(Array.isArray(e))return"lista";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"reguljärt uttryck",email:"e-postadress",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO-datum och tid",date:"ISO-datum",time:"ISO-tid",duration:"ISO-varaktighet",ipv4:"IPv4-intervall",ipv6:"IPv6-intervall",cidrv4:"IPv4-spektrum",cidrv6:"IPv6-spektrum",base64:"base64-kodad sträng",base64url:"base64url-kodad sträng",json_string:"JSON-sträng",e164:"E.164-nummer",jwt:"JWT",template_literal:"mall-literal"};return e=>{switch(e.code){case"invalid_type":return`Ogiltig inmatning: förväntat ${e.expected}, fick ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Ogiltig inmatning: förväntat ${c(e.values[0])}`:`Ogiltigt val: förväntade en av ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`För stor(t): förväntade ${e.origin??"värdet"} att ha ${l}${e.maximum.toString()} ${i.unit??"element"}`:`För stor(t): förväntat ${e.origin??"värdet"} att ha ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`För lite(t): förväntade ${e.origin??"värdet"} att ha ${l}${e.minimum.toString()} ${i.unit}`:`För lite(t): förväntade ${e.origin??"värdet"} att ha ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Ogiltig sträng: måste börja med "${l.prefix}"`:l.format==="ends_with"?`Ogiltig sträng: måste sluta med "${l.suffix}"`:l.format==="includes"?`Ogiltig sträng: måste innehålla "${l.includes}"`:l.format==="regex"?`Ogiltig sträng: måste matcha mönstret "${l.pattern}"`:`Ogiltig(t) ${n[l.format]??e.format}`}case"not_multiple_of":return`Ogiltigt tal: måste vara en multipel av ${e.divisor}`;case"unrecognized_keys":return`${e.keys.length>1?"Okända nycklar":"Okänd nyckel"}: ${s(e.keys,", ")}`;case"invalid_key":return`Ogiltig nyckel i ${e.origin??"värdet"}`;case"invalid_union":return"Ogiltig input";case"invalid_element":return`Ogiltigt värde i ${e.origin??"värdet"}`;default:return"Ogiltig input"}}};function Ws(){return{localeError:Bs()}}const Hs=()=>{const _={string:{unit:"எழுத்துக்கள்",verb:"கொண்டிருக்க வேண்டும்"},file:{unit:"பைட்டுகள்",verb:"கொண்டிருக்க வேண்டும்"},array:{unit:"உறுப்புகள்",verb:"கொண்டிருக்க வேண்டும்"},set:{unit:"உறுப்புகள்",verb:"கொண்டிருக்க வேண்டும்"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"எண் அல்லாதது":"எண்";case"object":{if(Array.isArray(e))return"அணி";if(e===null)return"வெறுமை";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"உள்ளீடு",email:"மின்னஞ்சல் முகவரி",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO தேதி நேரம்",date:"ISO தேதி",time:"ISO நேரம்",duration:"ISO கால அளவு",ipv4:"IPv4 முகவரி",ipv6:"IPv6 முகவரி",cidrv4:"IPv4 வரம்பு",cidrv6:"IPv6 வரம்பு",base64:"base64-encoded சரம்",base64url:"base64url-encoded சரம்",json_string:"JSON சரம்",e164:"E.164 எண்",jwt:"JWT",template_literal:"input"};return e=>{switch(e.code){case"invalid_type":return`தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${e.expected}, பெறப்பட்டது ${t(e.input)}`;case"invalid_value":return e.values.length===1?`தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${c(e.values[0])}`:`தவறான விருப்பம்: எதிர்பார்க்கப்பட்டது ${s(e.values,"|")} இல் ஒன்று`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`மிக பெரியது: எதிர்பார்க்கப்பட்டது ${e.origin??"மதிப்பு"} ${l}${e.maximum.toString()} ${i.unit??"உறுப்புகள்"} ஆக இருக்க வேண்டும்`:`மிக பெரியது: எதிர்பார்க்கப்பட்டது ${e.origin??"மதிப்பு"} ${l}${e.maximum.toString()} ஆக இருக்க வேண்டும்`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${e.origin} ${l}${e.minimum.toString()} ${i.unit} ஆக இருக்க வேண்டும்`:`மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${e.origin} ${l}${e.minimum.toString()} ஆக இருக்க வேண்டும்`}case"invalid_format":{const l=e;return l.format==="starts_with"?`தவறான சரம்: "${l.prefix}" இல் தொடங்க வேண்டும்`:l.format==="ends_with"?`தவறான சரம்: "${l.suffix}" இல் முடிவடைய வேண்டும்`:l.format==="includes"?`தவறான சரம்: "${l.includes}" ஐ உள்ளடக்க வேண்டும்`:l.format==="regex"?`தவறான சரம்: ${l.pattern} முறைபாட்டுடன் பொருந்த வேண்டும்`:`தவறான ${n[l.format]??e.format}`}case"not_multiple_of":return`தவறான எண்: ${e.divisor} இன் பலமாக இருக்க வேண்டும்`;case"unrecognized_keys":return`அடையாளம் தெரியாத விசை${e.keys.length>1?"கள்":""}: ${s(e.keys,", ")}`;case"invalid_key":return`${e.origin} இல் தவறான விசை`;case"invalid_union":return"தவறான உள்ளீடு";case"invalid_element":return`${e.origin} இல் தவறான மதிப்பு`;default:return"தவறான உள்ளீடு"}}};function js(){return{localeError:Hs()}}const zs=()=>{const _={string:{unit:"ตัวอักษร",verb:"ควรมี"},file:{unit:"ไบต์",verb:"ควรมี"},array:{unit:"รายการ",verb:"ควรมี"},set:{unit:"รายการ",verb:"ควรมี"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"ไม่ใช่ตัวเลข (NaN)":"ตัวเลข";case"object":{if(Array.isArray(e))return"อาร์เรย์ (Array)";if(e===null)return"ไม่มีค่า (null)";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"ข้อมูลที่ป้อน",email:"ที่อยู่อีเมล",url:"URL",emoji:"อิโมจิ",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"วันที่เวลาแบบ ISO",date:"วันที่แบบ ISO",time:"เวลาแบบ ISO",duration:"ช่วงเวลาแบบ ISO",ipv4:"ที่อยู่ IPv4",ipv6:"ที่อยู่ IPv6",cidrv4:"ช่วง IP แบบ IPv4",cidrv6:"ช่วง IP แบบ IPv6",base64:"ข้อความแบบ Base64",base64url:"ข้อความแบบ Base64 สำหรับ URL",json_string:"ข้อความแบบ JSON",e164:"เบอร์โทรศัพท์ระหว่างประเทศ (E.164)",jwt:"โทเคน JWT",template_literal:"ข้อมูลที่ป้อน"};return e=>{switch(e.code){case"invalid_type":return`ประเภทข้อมูลไม่ถูกต้อง: ควรเป็น ${e.expected} แต่ได้รับ ${t(e.input)}`;case"invalid_value":return e.values.length===1?`ค่าไม่ถูกต้อง: ควรเป็น ${c(e.values[0])}`:`ตัวเลือกไม่ถูกต้อง: ควรเป็นหนึ่งใน ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"ไม่เกิน":"น้อยกว่า",i=a(e.origin);return i?`เกินกำหนด: ${e.origin??"ค่า"} ควรมี${l} ${e.maximum.toString()} ${i.unit??"รายการ"}`:`เกินกำหนด: ${e.origin??"ค่า"} ควรมี${l} ${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?"อย่างน้อย":"มากกว่า",i=a(e.origin);return i?`น้อยกว่ากำหนด: ${e.origin} ควรมี${l} ${e.minimum.toString()} ${i.unit}`:`น้อยกว่ากำหนด: ${e.origin} ควรมี${l} ${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`รูปแบบไม่ถูกต้อง: ข้อความต้องขึ้นต้นด้วย "${l.prefix}"`:l.format==="ends_with"?`รูปแบบไม่ถูกต้อง: ข้อความต้องลงท้ายด้วย "${l.suffix}"`:l.format==="includes"?`รูปแบบไม่ถูกต้อง: ข้อความต้องมี "${l.includes}" อยู่ในข้อความ`:l.format==="regex"?`รูปแบบไม่ถูกต้อง: ต้องตรงกับรูปแบบที่กำหนด ${l.pattern}`:`รูปแบบไม่ถูกต้อง: ${n[l.format]??e.format}`}case"not_multiple_of":return`ตัวเลขไม่ถูกต้อง: ต้องเป็นจำนวนที่หารด้วย ${e.divisor} ได้ลงตัว`;case"unrecognized_keys":return`พบคีย์ที่ไม่รู้จัก: ${s(e.keys,", ")}`;case"invalid_key":return`คีย์ไม่ถูกต้องใน ${e.origin}`;case"invalid_union":return"ข้อมูลไม่ถูกต้อง: ไม่ตรงกับรูปแบบยูเนียนที่กำหนดไว้";case"invalid_element":return`ข้อมูลไม่ถูกต้องใน ${e.origin}`;default:return"ข้อมูลไม่ถูกต้อง"}}};function Zs(){return{localeError:zs()}}const Fs=_=>{const a=typeof _;switch(a){case"number":return Number.isNaN(_)?"NaN":"number";case"object":{if(Array.isArray(_))return"array";if(_===null)return"null";if(Object.getPrototypeOf(_)!==Object.prototype&&_.constructor)return _.constructor.name}}return a},Ks=()=>{const _={string:{unit:"karakter",verb:"olmalı"},file:{unit:"bayt",verb:"olmalı"},array:{unit:"öğe",verb:"olmalı"},set:{unit:"öğe",verb:"olmalı"}};function a(n){return _[n]??null}const t={regex:"girdi",email:"e-posta adresi",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO tarih ve saat",date:"ISO tarih",time:"ISO saat",duration:"ISO süre",ipv4:"IPv4 adresi",ipv6:"IPv6 adresi",cidrv4:"IPv4 aralığı",cidrv6:"IPv6 aralığı",base64:"base64 ile şifrelenmiş metin",base64url:"base64url ile şifrelenmiş metin",json_string:"JSON dizesi",e164:"E.164 sayısı",jwt:"JWT",template_literal:"Şablon dizesi"};return n=>{switch(n.code){case"invalid_type":return`Geçersiz değer: beklenen ${n.expected}, alınan ${Fs(n.input)}`;case"invalid_value":return n.values.length===1?`Geçersiz değer: beklenen ${c(n.values[0])}`:`Geçersiz seçenek: aşağıdakilerden biri olmalı: ${s(n.values,"|")}`;case"too_big":{const e=n.inclusive?"<=":"<",l=a(n.origin);return l?`Çok büyük: beklenen ${n.origin??"değer"} ${e}${n.maximum.toString()} ${l.unit??"öğe"}`:`Çok büyük: beklenen ${n.origin??"değer"} ${e}${n.maximum.toString()}`}case"too_small":{const e=n.inclusive?">=":">",l=a(n.origin);return l?`Çok küçük: beklenen ${n.origin} ${e}${n.minimum.toString()} ${l.unit}`:`Çok küçük: beklenen ${n.origin} ${e}${n.minimum.toString()}`}case"invalid_format":{const e=n;return e.format==="starts_with"?`Geçersiz metin: "${e.prefix}" ile başlamalı`:e.format==="ends_with"?`Geçersiz metin: "${e.suffix}" ile bitmeli`:e.format==="includes"?`Geçersiz metin: "${e.includes}" içermeli`:e.format==="regex"?`Geçersiz metin: ${e.pattern} desenine uymalı`:`Geçersiz ${t[e.format]??n.format}`}case"not_multiple_of":return`Geçersiz sayı: ${n.divisor} ile tam bölünebilmeli`;case"unrecognized_keys":return`Tanınmayan anahtar${n.keys.length>1?"lar":""}: ${s(n.keys,", ")}`;case"invalid_key":return`${n.origin} içinde geçersiz anahtar`;case"invalid_union":return"Geçersiz değer";case"invalid_element":return`${n.origin} içinde geçersiz değer`;default:return"Geçersiz değer"}}};function Vs(){return{localeError:Ks()}}const Ys=()=>{const _={string:{unit:"символів",verb:"матиме"},file:{unit:"байтів",verb:"матиме"},array:{unit:"елементів",verb:"матиме"},set:{unit:"елементів",verb:"матиме"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"число";case"object":{if(Array.isArray(e))return"масив";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"вхідні дані",email:"адреса електронної пошти",url:"URL",emoji:"емодзі",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"дата та час ISO",date:"дата ISO",time:"час ISO",duration:"тривалість ISO",ipv4:"адреса IPv4",ipv6:"адреса IPv6",cidrv4:"діапазон IPv4",cidrv6:"діапазон IPv6",base64:"рядок у кодуванні base64",base64url:"рядок у кодуванні base64url",json_string:"рядок JSON",e164:"номер E.164",jwt:"JWT",template_literal:"вхідні дані"};return e=>{switch(e.code){case"invalid_type":return`Неправильні вхідні дані: очікується ${e.expected}, отримано ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Неправильні вхідні дані: очікується ${c(e.values[0])}`:`Неправильна опція: очікується одне з ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Занадто велике: очікується, що ${e.origin??"значення"} ${i.verb} ${l}${e.maximum.toString()} ${i.unit??"елементів"}`:`Занадто велике: очікується, що ${e.origin??"значення"} буде ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Занадто мале: очікується, що ${e.origin} ${i.verb} ${l}${e.minimum.toString()} ${i.unit}`:`Занадто мале: очікується, що ${e.origin} буде ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Неправильний рядок: повинен починатися з "${l.prefix}"`:l.format==="ends_with"?`Неправильний рядок: повинен закінчуватися на "${l.suffix}"`:l.format==="includes"?`Неправильний рядок: повинен містити "${l.includes}"`:l.format==="regex"?`Неправильний рядок: повинен відповідати шаблону ${l.pattern}`:`Неправильний ${n[l.format]??e.format}`}case"not_multiple_of":return`Неправильне число: повинно бути кратним ${e.divisor}`;case"unrecognized_keys":return`Нерозпізнаний ключ${e.keys.length>1?"і":""}: ${s(e.keys,", ")}`;case"invalid_key":return`Неправильний ключ у ${e.origin}`;case"invalid_union":return"Неправильні вхідні дані";case"invalid_element":return`Неправильне значення у ${e.origin}`;default:return"Неправильні вхідні дані"}}};function Js(){return{localeError:Ys()}}const Xs=()=>{const _={string:{unit:"حروف",verb:"ہونا"},file:{unit:"بائٹس",verb:"ہونا"},array:{unit:"آئٹمز",verb:"ہونا"},set:{unit:"آئٹمز",verb:"ہونا"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"نمبر";case"object":{if(Array.isArray(e))return"آرے";if(e===null)return"نل";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"ان پٹ",email:"ای میل ایڈریس",url:"یو آر ایل",emoji:"ایموجی",uuid:"یو یو آئی ڈی",uuidv4:"یو یو آئی ڈی وی 4",uuidv6:"یو یو آئی ڈی وی 6",nanoid:"نینو آئی ڈی",guid:"جی یو آئی ڈی",cuid:"سی یو آئی ڈی",cuid2:"سی یو آئی ڈی 2",ulid:"یو ایل آئی ڈی",xid:"ایکس آئی ڈی",ksuid:"کے ایس یو آئی ڈی",datetime:"آئی ایس او ڈیٹ ٹائم",date:"آئی ایس او تاریخ",time:"آئی ایس او وقت",duration:"آئی ایس او مدت",ipv4:"آئی پی وی 4 ایڈریس",ipv6:"آئی پی وی 6 ایڈریس",cidrv4:"آئی پی وی 4 رینج",cidrv6:"آئی پی وی 6 رینج",base64:"بیس 64 ان کوڈڈ سٹرنگ",base64url:"بیس 64 یو آر ایل ان کوڈڈ سٹرنگ",json_string:"جے ایس او این سٹرنگ",e164:"ای 164 نمبر",jwt:"جے ڈبلیو ٹی",template_literal:"ان پٹ"};return e=>{switch(e.code){case"invalid_type":return`غلط ان پٹ: ${e.expected} متوقع تھا، ${t(e.input)} موصول ہوا`;case"invalid_value":return e.values.length===1?`غلط ان پٹ: ${c(e.values[0])} متوقع تھا`:`غلط آپشن: ${s(e.values,"|")} میں سے ایک متوقع تھا`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`بہت بڑا: ${e.origin??"ویلیو"} کے ${l}${e.maximum.toString()} ${i.unit??"عناصر"} ہونے متوقع تھے`:`بہت بڑا: ${e.origin??"ویلیو"} کا ${l}${e.maximum.toString()} ہونا متوقع تھا`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`بہت چھوٹا: ${e.origin} کے ${l}${e.minimum.toString()} ${i.unit} ہونے متوقع تھے`:`بہت چھوٹا: ${e.origin} کا ${l}${e.minimum.toString()} ہونا متوقع تھا`}case"invalid_format":{const l=e;return l.format==="starts_with"?`غلط سٹرنگ: "${l.prefix}" سے شروع ہونا چاہیے`:l.format==="ends_with"?`غلط سٹرنگ: "${l.suffix}" پر ختم ہونا چاہیے`:l.format==="includes"?`غلط سٹرنگ: "${l.includes}" شامل ہونا چاہیے`:l.format==="regex"?`غلط سٹرنگ: پیٹرن ${l.pattern} سے میچ ہونا چاہیے`:`غلط ${n[l.format]??e.format}`}case"not_multiple_of":return`غلط نمبر: ${e.divisor} کا مضاعف ہونا چاہیے`;case"unrecognized_keys":return`غیر تسلیم شدہ کی${e.keys.length>1?"ز":""}: ${s(e.keys,"، ")}`;case"invalid_key":return`${e.origin} میں غلط کی`;case"invalid_union":return"غلط ان پٹ";case"invalid_element":return`${e.origin} میں غلط ویلیو`;default:return"غلط ان پٹ"}}};function qs(){return{localeError:Xs()}}const Qs=()=>{const _={string:{unit:"ký tự",verb:"có"},file:{unit:"byte",verb:"có"},array:{unit:"phần tử",verb:"có"},set:{unit:"phần tử",verb:"có"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"số";case"object":{if(Array.isArray(e))return"mảng";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"đầu vào",email:"địa chỉ email",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ngày giờ ISO",date:"ngày ISO",time:"giờ ISO",duration:"khoảng thời gian ISO",ipv4:"địa chỉ IPv4",ipv6:"địa chỉ IPv6",cidrv4:"dải IPv4",cidrv6:"dải IPv6",base64:"chuỗi mã hóa base64",base64url:"chuỗi mã hóa base64url",json_string:"chuỗi JSON",e164:"số E.164",jwt:"JWT",template_literal:"đầu vào"};return e=>{switch(e.code){case"invalid_type":return`Đầu vào không hợp lệ: mong đợi ${e.expected}, nhận được ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Đầu vào không hợp lệ: mong đợi ${c(e.values[0])}`:`Tùy chọn không hợp lệ: mong đợi một trong các giá trị ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Quá lớn: mong đợi ${e.origin??"giá trị"} ${i.verb} ${l}${e.maximum.toString()} ${i.unit??"phần tử"}`:`Quá lớn: mong đợi ${e.origin??"giá trị"} ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Quá nhỏ: mong đợi ${e.origin} ${i.verb} ${l}${e.minimum.toString()} ${i.unit}`:`Quá nhỏ: mong đợi ${e.origin} ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Chuỗi không hợp lệ: phải bắt đầu bằng "${l.prefix}"`:l.format==="ends_with"?`Chuỗi không hợp lệ: phải kết thúc bằng "${l.suffix}"`:l.format==="includes"?`Chuỗi không hợp lệ: phải bao gồm "${l.includes}"`:l.format==="regex"?`Chuỗi không hợp lệ: phải khớp với mẫu ${l.pattern}`:`${n[l.format]??e.format} không hợp lệ`}case"not_multiple_of":return`Số không hợp lệ: phải là bội số của ${e.divisor}`;case"unrecognized_keys":return`Khóa không được nhận dạng: ${s(e.keys,", ")}`;case"invalid_key":return`Khóa không hợp lệ trong ${e.origin}`;case"invalid_union":return"Đầu vào không hợp lệ";case"invalid_element":return`Giá trị không hợp lệ trong ${e.origin}`;default:return"Đầu vào không hợp lệ"}}};function em(){return{localeError:Qs()}}const lm=()=>{const _={string:{unit:"字符",verb:"包含"},file:{unit:"字节",verb:"包含"},array:{unit:"项",verb:"包含"},set:{unit:"项",verb:"包含"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"非数字(NaN)":"数字";case"object":{if(Array.isArray(e))return"数组";if(e===null)return"空值(null)";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"输入",email:"电子邮件",url:"URL",emoji:"表情符号",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO日期时间",date:"ISO日期",time:"ISO时间",duration:"ISO时长",ipv4:"IPv4地址",ipv6:"IPv6地址",cidrv4:"IPv4网段",cidrv6:"IPv6网段",base64:"base64编码字符串",base64url:"base64url编码字符串",json_string:"JSON字符串",e164:"E.164号码",jwt:"JWT",template_literal:"输入"};return e=>{switch(e.code){case"invalid_type":return`无效输入：期望 ${e.expected}，实际接收 ${t(e.input)}`;case"invalid_value":return e.values.length===1?`无效输入：期望 ${c(e.values[0])}`:`无效选项：期望以下之一 ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`数值过大：期望 ${e.origin??"值"} ${l}${e.maximum.toString()} ${i.unit??"个元素"}`:`数值过大：期望 ${e.origin??"值"} ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`数值过小：期望 ${e.origin} ${l}${e.minimum.toString()} ${i.unit}`:`数值过小：期望 ${e.origin} ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`无效字符串：必须以 "${l.prefix}" 开头`:l.format==="ends_with"?`无效字符串：必须以 "${l.suffix}" 结尾`:l.format==="includes"?`无效字符串：必须包含 "${l.includes}"`:l.format==="regex"?`无效字符串：必须满足正则表达式 ${l.pattern}`:`无效${n[l.format]??e.format}`}case"not_multiple_of":return`无效数字：必须是 ${e.divisor} 的倍数`;case"unrecognized_keys":return`出现未知的键(key): ${s(e.keys,", ")}`;case"invalid_key":return`${e.origin} 中的键(key)无效`;case"invalid_union":return"无效输入";case"invalid_element":return`${e.origin} 中包含无效值(value)`;default:return"无效输入"}}};function im(){return{localeError:lm()}}const nm=()=>{const _={string:{unit:"字元",verb:"擁有"},file:{unit:"位元組",verb:"擁有"},array:{unit:"項目",verb:"擁有"},set:{unit:"項目",verb:"擁有"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"number";case"object":{if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"輸入",email:"郵件地址",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO 日期時間",date:"ISO 日期",time:"ISO 時間",duration:"ISO 期間",ipv4:"IPv4 位址",ipv6:"IPv6 位址",cidrv4:"IPv4 範圍",cidrv6:"IPv6 範圍",base64:"base64 編碼字串",base64url:"base64url 編碼字串",json_string:"JSON 字串",e164:"E.164 數值",jwt:"JWT",template_literal:"輸入"};return e=>{switch(e.code){case"invalid_type":return`無效的輸入值：預期為 ${e.expected}，但收到 ${t(e.input)}`;case"invalid_value":return e.values.length===1?`無效的輸入值：預期為 ${c(e.values[0])}`:`無效的選項：預期為以下其中之一 ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`數值過大：預期 ${e.origin??"值"} 應為 ${l}${e.maximum.toString()} ${i.unit??"個元素"}`:`數值過大：預期 ${e.origin??"值"} 應為 ${l}${e.maximum.toString()}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`數值過小：預期 ${e.origin} 應為 ${l}${e.minimum.toString()} ${i.unit}`:`數值過小：預期 ${e.origin} 應為 ${l}${e.minimum.toString()}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`無效的字串：必須以 "${l.prefix}" 開頭`:l.format==="ends_with"?`無效的字串：必須以 "${l.suffix}" 結尾`:l.format==="includes"?`無效的字串：必須包含 "${l.includes}"`:l.format==="regex"?`無效的字串：必須符合格式 ${l.pattern}`:`無效的 ${n[l.format]??e.format}`}case"not_multiple_of":return`無效的數字：必須為 ${e.divisor} 的倍數`;case"unrecognized_keys":return`無法識別的鍵值${e.keys.length>1?"們":""}：${s(e.keys,"、")}`;case"invalid_key":return`${e.origin} 中有無效的鍵值`;case"invalid_union":return"無效的輸入值";case"invalid_element":return`${e.origin} 中有無效的值`;default:return"無效的輸入值"}}};function am(){return{localeError:nm()}}const _m=()=>{const _={string:{unit:"àmi",verb:"ní"},file:{unit:"bytes",verb:"ní"},array:{unit:"nkan",verb:"ní"},set:{unit:"nkan",verb:"ní"}};function a(e){return _[e]??null}const t=e=>{const l=typeof e;switch(l){case"number":return Number.isNaN(e)?"NaN":"nọ́mbà";case"object":{if(Array.isArray(e))return"akopọ";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}}return l},n={regex:"ẹ̀rọ ìbáwọlé",email:"àdírẹ́sì ìmẹ́lì",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"àkókò ISO",date:"ọjọ́ ISO",time:"àkókò ISO",duration:"àkókò tó pé ISO",ipv4:"àdírẹ́sì IPv4",ipv6:"àdírẹ́sì IPv6",cidrv4:"àgbègbè IPv4",cidrv6:"àgbègbè IPv6",base64:"ọ̀rọ̀ tí a kọ́ ní base64",base64url:"ọ̀rọ̀ base64url",json_string:"ọ̀rọ̀ JSON",e164:"nọ́mbà E.164",jwt:"JWT",template_literal:"ẹ̀rọ ìbáwọlé"};return e=>{switch(e.code){case"invalid_type":return`Ìbáwọlé aṣìṣe: a ní láti fi ${e.expected}, àmọ̀ a rí ${t(e.input)}`;case"invalid_value":return e.values.length===1?`Ìbáwọlé aṣìṣe: a ní láti fi ${c(e.values[0])}`:`Àṣàyàn aṣìṣe: yan ọ̀kan lára ${s(e.values,"|")}`;case"too_big":{const l=e.inclusive?"<=":"<",i=a(e.origin);return i?`Tó pọ̀ jù: a ní láti jẹ́ pé ${e.origin??"iye"} ${i.verb} ${l}${e.maximum} ${i.unit}`:`Tó pọ̀ jù: a ní láti jẹ́ ${l}${e.maximum}`}case"too_small":{const l=e.inclusive?">=":">",i=a(e.origin);return i?`Kéré ju: a ní láti jẹ́ pé ${e.origin} ${i.verb} ${l}${e.minimum} ${i.unit}`:`Kéré ju: a ní láti jẹ́ ${l}${e.minimum}`}case"invalid_format":{const l=e;return l.format==="starts_with"?`Ọ̀rọ̀ aṣìṣe: gbọ́dọ̀ bẹ̀rẹ̀ pẹ̀lú "${l.prefix}"`:l.format==="ends_with"?`Ọ̀rọ̀ aṣìṣe: gbọ́dọ̀ parí pẹ̀lú "${l.suffix}"`:l.format==="includes"?`Ọ̀rọ̀ aṣìṣe: gbọ́dọ̀ ní "${l.includes}"`:l.format==="regex"?`Ọ̀rọ̀ aṣìṣe: gbọ́dọ̀ bá àpẹẹrẹ mu ${l.pattern}`:`Aṣìṣe: ${n[l.format]??e.format}`}case"not_multiple_of":return`Nọ́mbà aṣìṣe: gbọ́dọ̀ jẹ́ èyà pípín ti ${e.divisor}`;case"unrecognized_keys":return`Bọtìnì àìmọ̀: ${s(e.keys,", ")}`;case"invalid_key":return`Bọtìnì aṣìṣe nínú ${e.origin}`;case"invalid_union":return"Ìbáwọlé aṣìṣe";case"invalid_element":return`Iye aṣìṣe nínú ${e.origin}`;default:return"Ìbáwọlé aṣìṣe"}}};function tm(){return{localeError:_m()}}const _l=Object.freeze(Object.defineProperty({__proto__:null,ar:$r,az:Tr,be:yr,ca:Mr,cs:Gr,da:wr,de:Wr,en:al,eo:Fr,es:Vr,fa:Jr,fi:qr,fr:es,frCA:is,he:as,hu:ts,id:ss,is:vs,it:cs,ja:us,kh:ps,ko:ds,mk:xs,ms:As,nl:Os,no:Ls,ota:$s,pl:ys,ps:Ts,pt:Ms,ru:Gs,sl:ws,sv:Ws,ta:js,th:Zs,tr:Vs,ua:Js,ur:qs,vi:em,yo:tm,zhCN:im,zhTW:am},Symbol.toStringTag,{value:"Module"}));class tl{constructor(a){this._def=a,this.def=a}implement(a){if(typeof a!="function")throw new Error("implement() must be called with a function");const t=(...n)=>{const e=this._def.input?G(this._def.input,n,void 0,{callee:t}):n;if(!Array.isArray(e))throw new Error("Invalid arguments schema: not an array or tuple schema.");const l=a(...e);return this._def.output?G(this._def.output,l,void 0,{callee:t}):l};return t}implementAsync(a){if(typeof a!="function")throw new Error("implement() must be called with a function");const t=async(...n)=>{const e=this._def.input?await k(this._def.input,n,void 0,{callee:t}):n;if(!Array.isArray(e))throw new Error("Invalid arguments schema: not an array or tuple schema.");const l=await a(...e);return this._def.output?k(this._def.output,l,void 0,{callee:t}):l};return t}input(...a){const t=this.constructor;return Array.isArray(a[0])?new t({type:"function",input:new F({type:"tuple",items:a[0],rest:a[1]}),output:this._def.output}):new t({type:"function",input:a[0],output:this._def.output})}output(a){const t=this.constructor;return new t({type:"function",input:this._def.input,output:a})}}function rl(_){return new tl({type:"function",input:Array.isArray(_==null?void 0:_.input)?_e(F,_==null?void 0:_.input):(_==null?void 0:_.input)??te(re,M(D)),output:(_==null?void 0:_.output)??M(D)})}class z{constructor(a){this.counter=0,this.metadataRegistry=(a==null?void 0:a.metadata)??K,this.target=(a==null?void 0:a.target)??"draft-2020-12",this.unrepresentable=(a==null?void 0:a.unrepresentable)??"throw",this.override=(a==null?void 0:a.override)??(()=>{}),this.io=(a==null?void 0:a.io)??"output",this.seen=new Map}process(a,t={path:[],schemaPath:[]}){var f,d,R;var n;const e=a._zod.def,l={guid:"uuid",url:"uri",datetime:"date-time",json_string:"json-string",regex:""},i=this.seen.get(a);if(i)return i.count++,t.schemaPath.includes(a)&&(i.cycle=t.path),i.schema;const m={schema:{},count:1,cycle:void 0,path:t.path};this.seen.set(a,m);const S=(d=(f=a._zod).toJSONSchema)==null?void 0:d.call(f);if(S)m.schema=S;else{const u={...t,schemaPath:[...t.schemaPath,a],path:t.path},x=a._zod.parent;if(x)m.ref=x,this.process(x,u),this.seen.get(x).isParent=!0;else{const o=m.schema;switch(e.type){case"string":{const r=o;r.type="string";const{minimum:v,maximum:E,format:p,patterns:I,contentEncoding:P}=a._zod.bag;if(typeof v=="number"&&(r.minLength=v),typeof E=="number"&&(r.maxLength=E),p&&(r.format=l[p]??p,r.format===""&&delete r.format),P&&(r.contentEncoding=P),I&&I.size>0){const O=[...I];O.length===1?r.pattern=O[0].source:O.length>1&&(m.schema.allOf=[...O.map(b=>({...this.target==="draft-7"||this.target==="draft-4"?{type:"string"}:{},pattern:b.source}))])}break}case"number":{const r=o,{minimum:v,maximum:E,format:p,multipleOf:I,exclusiveMaximum:P,exclusiveMinimum:O}=a._zod.bag;typeof p=="string"&&p.includes("int")?r.type="integer":r.type="number",typeof O=="number"&&(this.target==="draft-4"?(r.minimum=O,r.exclusiveMinimum=!0):r.exclusiveMinimum=O),typeof v=="number"&&(r.minimum=v,typeof O=="number"&&this.target!=="draft-4"&&(O>=v?delete r.minimum:delete r.exclusiveMinimum)),typeof P=="number"&&(this.target==="draft-4"?(r.maximum=P,r.exclusiveMaximum=!0):r.exclusiveMaximum=P),typeof E=="number"&&(r.maximum=E,typeof P=="number"&&this.target!=="draft-4"&&(P<=E?delete r.maximum:delete r.exclusiveMaximum)),typeof I=="number"&&(r.multipleOf=I);break}case"boolean":{const r=o;r.type="boolean";break}case"bigint":{if(this.unrepresentable==="throw")throw new Error("BigInt cannot be represented in JSON Schema");break}case"symbol":{if(this.unrepresentable==="throw")throw new Error("Symbols cannot be represented in JSON Schema");break}case"null":{o.type="null";break}case"any":break;case"unknown":break;case"undefined":{if(this.unrepresentable==="throw")throw new Error("Undefined cannot be represented in JSON Schema");break}case"void":{if(this.unrepresentable==="throw")throw new Error("Void cannot be represented in JSON Schema");break}case"never":{o.not={};break}case"date":{if(this.unrepresentable==="throw")throw new Error("Date cannot be represented in JSON Schema");break}case"array":{const r=o,{minimum:v,maximum:E}=a._zod.bag;typeof v=="number"&&(r.minItems=v),typeof E=="number"&&(r.maxItems=E),r.type="array",r.items=this.process(e.element,{...u,path:[...u.path,"items"]});break}case"object":{const r=o;r.type="object",r.properties={};const v=e.shape;for(const I in v)r.properties[I]=this.process(v[I],{...u,path:[...u.path,"properties",I]});const E=new Set(Object.keys(v)),p=new Set([...E].filter(I=>{const P=e.shape[I]._zod;return this.io==="input"?P.optin===void 0:P.optout===void 0}));p.size>0&&(r.required=Array.from(p)),((R=e.catchall)==null?void 0:R._zod.def.type)==="never"?r.additionalProperties=!1:e.catchall?e.catchall&&(r.additionalProperties=this.process(e.catchall,{...u,path:[...u.path,"additionalProperties"]})):this.io==="output"&&(r.additionalProperties=!1);break}case"union":{const r=o;r.anyOf=e.options.map((v,E)=>this.process(v,{...u,path:[...u.path,"anyOf",E]}));break}case"intersection":{const r=o,v=this.process(e.left,{...u,path:[...u.path,"allOf",0]}),E=this.process(e.right,{...u,path:[...u.path,"allOf",1]}),p=P=>"allOf"in P&&Object.keys(P).length===1,I=[...p(v)?v.allOf:[v],...p(E)?E.allOf:[E]];r.allOf=I;break}case"tuple":{const r=o;r.type="array";const v=e.items.map((I,P)=>this.process(I,{...u,path:[...u.path,"prefixItems",P]}));if(this.target==="draft-2020-12"?r.prefixItems=v:r.items=v,e.rest){const I=this.process(e.rest,{...u,path:[...u.path,"items"]});this.target==="draft-2020-12"?r.items=I:r.additionalItems=I}e.rest&&(r.items=this.process(e.rest,{...u,path:[...u.path,"items"]}));const{minimum:E,maximum:p}=a._zod.bag;typeof E=="number"&&(r.minItems=E),typeof p=="number"&&(r.maxItems=p);break}case"record":{const r=o;r.type="object",this.target!=="draft-4"&&(r.propertyNames=this.process(e.keyType,{...u,path:[...u.path,"propertyNames"]})),r.additionalProperties=this.process(e.valueType,{...u,path:[...u.path,"additionalProperties"]});break}case"map":{if(this.unrepresentable==="throw")throw new Error("Map cannot be represented in JSON Schema");break}case"set":{if(this.unrepresentable==="throw")throw new Error("Set cannot be represented in JSON Schema");break}case"enum":{const r=o,v=vl(e.entries);v.every(E=>typeof E=="number")&&(r.type="number"),v.every(E=>typeof E=="string")&&(r.type="string"),r.enum=v;break}case"literal":{const r=o,v=[];for(const E of e.values)if(E===void 0){if(this.unrepresentable==="throw")throw new Error("Literal `undefined` cannot be represented in JSON Schema")}else if(typeof E=="bigint"){if(this.unrepresentable==="throw")throw new Error("BigInt literals cannot be represented in JSON Schema");v.push(Number(E))}else v.push(E);if(v.length!==0)if(v.length===1){const E=v[0];r.type=E===null?"null":typeof E,this.target==="draft-4"?r.enum=[E]:r.const=E}else v.every(E=>typeof E=="number")&&(r.type="number"),v.every(E=>typeof E=="string")&&(r.type="string"),v.every(E=>typeof E=="boolean")&&(r.type="string"),v.every(E=>E===null)&&(r.type="null"),r.enum=v;break}case"file":{const r=o,v={type:"string",format:"binary",contentEncoding:"binary"},{minimum:E,maximum:p,mime:I}=a._zod.bag;E!==void 0&&(v.minLength=E),p!==void 0&&(v.maxLength=p),I?I.length===1?(v.contentMediaType=I[0],Object.assign(r,v)):r.anyOf=I.map(P=>({...v,contentMediaType:P})):Object.assign(r,v);break}case"transform":{if(this.unrepresentable==="throw")throw new Error("Transforms cannot be represented in JSON Schema");break}case"nullable":{const r=this.process(e.innerType,u);o.anyOf=[r,{type:"null"}];break}case"nonoptional":{this.process(e.innerType,u),m.ref=e.innerType;break}case"success":{const r=o;r.type="boolean";break}case"default":{this.process(e.innerType,u),m.ref=e.innerType,o.default=JSON.parse(JSON.stringify(e.defaultValue));break}case"prefault":{this.process(e.innerType,u),m.ref=e.innerType,this.io==="input"&&(o._prefault=JSON.parse(JSON.stringify(e.defaultValue)));break}case"catch":{this.process(e.innerType,u),m.ref=e.innerType;let r;try{r=e.catchValue(void 0)}catch{throw new Error("Dynamic catch values are not supported in JSON Schema")}o.default=r;break}case"nan":{if(this.unrepresentable==="throw")throw new Error("NaN cannot be represented in JSON Schema");break}case"template_literal":{const r=o,v=a._zod.pattern;if(!v)throw new Error("Pattern not found in template literal");r.type="string",r.pattern=v.source;break}case"pipe":{const r=this.io==="input"?e.in._zod.def.type==="transform"?e.out:e.in:e.out;this.process(r,u),m.ref=r;break}case"readonly":{this.process(e.innerType,u),m.ref=e.innerType,o.readOnly=!0;break}case"promise":{this.process(e.innerType,u),m.ref=e.innerType;break}case"optional":{this.process(e.innerType,u),m.ref=e.innerType;break}case"lazy":{const r=a._zod.innerType;this.process(r,u),m.ref=r;break}case"custom":{if(this.unrepresentable==="throw")throw new Error("Custom types cannot be represented in JSON Schema");break}}}}const C=this.metadataRegistry.get(a);return C&&Object.assign(m.schema,C),this.io==="input"&&g(a)&&(delete m.schema.examples,delete m.schema.default),this.io==="input"&&m.schema._prefault&&((n=m.schema).default??(n.default=m.schema._prefault)),delete m.schema._prefault,this.seen.get(a).schema}emit(a,t){var A,f,d,R,u,x;const n={cycles:(t==null?void 0:t.cycles)??"ref",reused:(t==null?void 0:t.reused)??"inline",external:(t==null?void 0:t.external)??void 0},e=this.seen.get(a);if(!e)throw new Error("Unprocessed schema. This is a bug in Zod.");const l=o=>{var I;const r=this.target==="draft-2020-12"?"$defs":"definitions";if(n.external){const P=(I=n.external.registry.get(o[0]))==null?void 0:I.id,O=n.external.uri??(El=>El);if(P)return{ref:O(P)};const b=o[1].defId??o[1].schema.id??`schema${this.counter++}`;return o[1].defId=b,{defId:b,ref:`${O("__shared")}#/${r}/${b}`}}if(o[1]===e)return{ref:"#"};const E=`#/${r}/`,p=o[1].schema.id??`__schema${this.counter++}`;return{defId:p,ref:E+p}},i=o=>{if(o[1].schema.$ref)return;const r=o[1],{ref:v,defId:E}=l(o);r.def={...r.schema},E&&(r.defId=E);const p=r.schema;for(const I in p)delete p[I];p.$ref=v};if(n.cycles==="throw")for(const o of this.seen.entries()){const r=o[1];if(r.cycle)throw new Error(`Cycle detected: #/${(A=r.cycle)==null?void 0:A.join("/")}/<root>

Set the \`cycles\` parameter to \`"ref"\` to resolve cyclical schemas with defs.`)}for(const o of this.seen.entries()){const r=o[1];if(a===o[0]){i(o);continue}if(n.external){const E=(f=n.external.registry.get(o[0]))==null?void 0:f.id;if(a!==o[0]&&E){i(o);continue}}if((d=this.metadataRegistry.get(o[0]))==null?void 0:d.id){i(o);continue}if(r.cycle){i(o);continue}if(r.count>1&&n.reused==="ref"){i(o);continue}}const m=(o,r)=>{const v=this.seen.get(o),E=v.def??v.schema,p={...E};if(v.ref===null)return;const I=v.ref;if(v.ref=null,I){m(I,r);const P=this.seen.get(I).schema;P.$ref&&(r.target==="draft-7"||r.target==="draft-4")?(E.allOf=E.allOf??[],E.allOf.push(P)):(Object.assign(E,P),Object.assign(E,p))}v.isParent||this.override({zodSchema:o,jsonSchema:E,path:v.path??[]})};for(const o of[...this.seen.entries()].reverse())m(o[0],{target:this.target});const S={};if(this.target==="draft-2020-12"?S.$schema="https://json-schema.org/draft/2020-12/schema":this.target==="draft-7"?S.$schema="http://json-schema.org/draft-07/schema#":this.target==="draft-4"?S.$schema="http://json-schema.org/draft-04/schema#":console.warn(`Invalid target: ${this.target}`),(R=n.external)!=null&&R.uri){const o=(u=n.external.registry.get(a))==null?void 0:u.id;if(!o)throw new Error("Schema is missing an `id` property");S.$id=n.external.uri(o)}Object.assign(S,e.def);const C=((x=n.external)==null?void 0:x.defs)??{};for(const o of this.seen.entries()){const r=o[1];r.def&&r.defId&&(C[r.defId]=r.def)}n.external||Object.keys(C).length>0&&(this.target==="draft-2020-12"?S.$defs=C:S.definitions=C);try{return JSON.parse(JSON.stringify(S))}catch{throw new Error("Error converting schema to JSON.")}}}function sl(_,a){if(_ instanceof se){const n=new z(a),e={};for(const m of _._idmap.entries()){const[S,C]=m;n.process(C)}const l={},i={registry:_,uri:a==null?void 0:a.uri,defs:e};for(const m of _._idmap.entries()){const[S,C]=m;l[S]=n.emit(C,{...a,external:i})}if(Object.keys(e).length>0){const m=n.target==="draft-2020-12"?"$defs":"definitions";l.__shared={[m]:e}}return{schemas:l}}const t=new z(a);return t.process(_),t.emit(_,a)}function g(_,a){const t=a??{seen:new Set};if(t.seen.has(_))return!1;t.seen.add(_);const e=_._zod.def;switch(e.type){case"string":case"number":case"bigint":case"boolean":case"date":case"symbol":case"undefined":case"null":case"any":case"unknown":case"never":case"void":case"literal":case"enum":case"nan":case"file":case"template_literal":return!1;case"array":return g(e.element,t);case"object":{for(const l in e.shape)if(g(e.shape[l],t))return!0;return!1}case"union":{for(const l of e.options)if(g(l,t))return!0;return!1}case"intersection":return g(e.left,t)||g(e.right,t);case"tuple":{for(const l of e.items)if(g(l,t))return!0;return!!(e.rest&&g(e.rest,t))}case"record":return g(e.keyType,t)||g(e.valueType,t);case"map":return g(e.keyType,t)||g(e.valueType,t);case"set":return g(e.valueType,t);case"promise":case"optional":case"nonoptional":case"nullable":case"readonly":return g(e.innerType,t);case"lazy":return g(e.getter(),t);case"default":return g(e.innerType,t);case"prefault":return g(e.innerType,t);case"custom":return!1;case"transform":return!0;case"pipe":return g(e.in,t)||g(e.out,t);case"success":return!1;case"catch":return!1}throw new Error(`Unknown schema type: ${e.type}`)}const rm=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),sm=Object.freeze(Object.defineProperty({__proto__:null,$ZodAny:ol,$ZodArray:re,$ZodAsyncError:cl,$ZodBase64:Sl,$ZodBase64URL:ul,$ZodBigInt:Il,$ZodBigIntFormat:pl,$ZodBoolean:Pl,$ZodCIDRv4:dl,$ZodCIDRv6:Cl,$ZodCUID:xl,$ZodCUID2:gl,$ZodCatch:Al,$ZodCheck:fl,$ZodCheckBigIntFormat:Ol,$ZodCheckEndsWith:Rl,$ZodCheckGreaterThan:Ll,$ZodCheckIncludes:bl,$ZodCheckLengthEquals:$l,$ZodCheckLessThan:Ul,$ZodCheckLowerCase:Tl,$ZodCheckMaxLength:Nl,$ZodCheckMaxSize:yl,$ZodCheckMimeType:hl,$ZodCheckMinLength:Ml,$ZodCheckMinSize:Dl,$ZodCheckMultipleOf:Gl,$ZodCheckNumberFormat:kl,$ZodCheckOverwrite:wl,$ZodCheckProperty:Bl,$ZodCheckRegex:Wl,$ZodCheckSizeEquals:Hl,$ZodCheckStartsWith:jl,$ZodCheckStringFormat:zl,$ZodCheckUpperCase:Zl,$ZodCustom:Fl,$ZodCustomStringFormat:Kl,$ZodDate:Vl,$ZodDefault:Yl,$ZodDiscriminatedUnion:Jl,$ZodE164:Xl,$ZodEmail:ql,$ZodEmoji:Ql,$ZodEnum:ei,$ZodError:li,$ZodFile:ii,$ZodFunction:tl,$ZodGUID:ni,$ZodIPv4:ai,$ZodIPv6:_i,$ZodISODate:ti,$ZodISODateTime:ri,$ZodISODuration:si,$ZodISOTime:mi,$ZodIntersection:Ei,$ZodJWT:vi,$ZodKSUID:oi,$ZodLazy:ci,$ZodLiteral:Si,$ZodMap:ui,$ZodNaN:Ii,$ZodNanoID:pi,$ZodNever:Pi,$ZodNonOptional:di,$ZodNull:Ci,$ZodNullable:xi,$ZodNumber:gi,$ZodNumberFormat:Ai,$ZodObject:fi,$ZodOptional:Oi,$ZodPipe:Ri,$ZodPrefault:Li,$ZodPromise:bi,$ZodReadonly:$i,$ZodRealError:Ui,$ZodRecord:Ti,$ZodRegistry:se,$ZodSet:Ni,$ZodString:yi,$ZodStringFormat:hi,$ZodSuccess:Mi,$ZodSymbol:Di,$ZodTemplateLiteral:Gi,$ZodTransform:ki,$ZodTuple:F,$ZodType:wi,$ZodULID:Bi,$ZodURL:Wi,$ZodUUID:Hi,$ZodUndefined:ji,$ZodUnion:zi,$ZodUnknown:D,$ZodVoid:Zi,$ZodXID:Fi,$brand:me,$constructor:Ki,$input:Ee,$output:ve,Doc:Vi,JSONSchema:rm,JSONSchemaGenerator:z,NEVER:oe,TimePrecision:ce,_any:Yi,_array:te,_base64:Ji,_base64url:Xi,_bigint:qi,_boolean:Qi,_catch:en,_check:ln,_cidrv4:nn,_cidrv6:an,_coercedBigint:Se,_coercedBoolean:ue,_coercedDate:Ie,_coercedNumber:pe,_coercedString:Pe,_cuid:_n,_cuid2:tn,_custom:rn,_date:sn,_default:mn,_discriminatedUnion:En,_e164:vn,_email:on,_emoji:cn,_endsWith:de,_enum:Sn,_file:un,_float32:In,_float64:pn,_gt:Ce,_gte:w,_guid:Pn,_includes:xe,_int:dn,_int32:Cn,_int64:xn,_intersection:gn,_ipv4:An,_ipv6:fn,_isoDate:On,_isoDateTime:Rn,_isoDuration:Ln,_isoTime:bn,_jwt:$n,_ksuid:Un,_lazy:Tn,_length:ge,_literal:Nn,_lowercase:Ae,_lt:fe,_lte:B,_map:yn,_max:B,_maxLength:Oe,_maxSize:Re,_mime:Le,_min:w,_minLength:be,_minSize:$e,_multipleOf:Ue,_nan:hn,_nanoid:Mn,_nativeEnum:Dn,_negative:Te,_never:Gn,_nonnegative:Ne,_nonoptional:kn,_nonpositive:ye,_normalize:he,_null:wn,_nullable:Bn,_number:Wn,_optional:Hn,_overwrite:Me,_parse:jn,_parseAsync:zn,_pipe:Zn,_positive:De,_promise:Fn,_property:Ge,_readonly:Kn,_record:Vn,_refine:Yn,_regex:ke,_safeParse:Jn,_safeParseAsync:Xn,_set:qn,_size:we,_startsWith:Be,_string:Qn,_stringFormat:ea,_stringbool:la,_success:ia,_superRefine:na,_symbol:aa,_templateLiteral:_a,_toLowerCase:We,_toUpperCase:He,_transform:ta,_trim:je,_tuple:_e,_uint32:ra,_uint64:sa,_ulid:ma,_undefined:Ea,_union:va,_unknown:M,_uppercase:ze,_url:oa,_uuid:ca,_uuidv4:Sa,_uuidv6:ua,_uuidv7:Ia,_void:pa,_xid:Pa,clone:Ze,config:$,flattenError:Fe,formatError:Ke,function:rl,globalConfig:da,globalRegistry:K,isValidBase64:Ca,isValidBase64URL:xa,isValidJWT:ga,locales:_l,parse:G,parseAsync:k,prettifyError:Ve,regexes:Ye,registry:Je,safeParse:Aa,safeParseAsync:fa,toDotPath:Oa,toJSONSchema:sl,treeifyError:Xe,util:Ra,version:La},Symbol.toStringTag,{value:"Module"})),mm={invalid_type:"invalid_type",too_big:"too_big",too_small:"too_small",invalid_format:"invalid_format",not_multiple_of:"not_multiple_of",unrecognized_keys:"unrecognized_keys",invalid_union:"invalid_union",invalid_key:"invalid_key",invalid_element:"invalid_element",invalid_value:"invalid_value",custom:"custom"};function Em(_){$({customError:_})}function vm(){return $().customError}var Z;Z||(Z={});function om(_){return Pe(qe,_)}function cm(_){return pe(Qe,_)}function Sm(_){return ue(el,_)}function um(_){return Se(ll,_)}function Im(_){return Ie(il,_)}const pm=Object.freeze(Object.defineProperty({__proto__:null,bigint:um,boolean:Sm,date:Im,number:cm,string:om},Symbol.toStringTag,{value:"Module"}));$(al());const ee=Object.freeze(Object.defineProperty({__proto__:null,$brand:me,$input:Ee,$output:ve,NEVER:oe,TimePrecision:ce,ZodAny:ba,ZodArray:$a,ZodBase64:Ua,ZodBase64URL:Ta,ZodBigInt:ll,ZodBigIntFormat:Na,ZodBoolean:el,ZodCIDRv4:ya,ZodCIDRv6:ha,ZodCUID:Ma,ZodCUID2:Da,ZodCatch:Ga,ZodCustom:ka,ZodCustomStringFormat:wa,ZodDate:il,ZodDefault:Ba,ZodDiscriminatedUnion:Wa,ZodE164:Ha,ZodEmail:ja,ZodEmoji:za,ZodEnum:Za,ZodError:Fa,ZodFile:Ka,get ZodFirstPartyTypeKind(){return Z},ZodGUID:Va,ZodIPv4:Ya,ZodIPv6:Ja,ZodISODate:Xa,ZodISODateTime:qa,ZodISODuration:Qa,ZodISOTime:e_,ZodIntersection:l_,ZodIssueCode:mm,ZodJWT:i_,ZodKSUID:n_,ZodLazy:a_,ZodLiteral:__,ZodMap:t_,ZodNaN:r_,ZodNanoID:s_,ZodNever:m_,ZodNonOptional:E_,ZodNull:v_,ZodNullable:o_,ZodNumber:Qe,ZodNumberFormat:c_,ZodObject:S_,ZodOptional:u_,ZodPipe:I_,ZodPrefault:p_,ZodPromise:P_,ZodReadonly:d_,ZodRealError:C_,ZodRecord:x_,ZodSet:g_,ZodString:qe,ZodStringFormat:A_,ZodSuccess:f_,ZodSymbol:O_,ZodTemplateLiteral:R_,ZodTransform:L_,ZodTuple:b_,ZodType:$_,ZodULID:U_,ZodURL:T_,ZodUUID:N_,ZodUndefined:y_,ZodUnion:h_,ZodUnknown:M_,ZodVoid:D_,ZodXID:G_,_ZodString:k_,_default:w_,any:B_,array:W_,base64:H_,base64url:j_,bigint:z_,boolean:W,catch:Z_,check:F_,cidrv4:K_,cidrv6:V_,clone:Ze,coerce:pm,config:$,core:sm,cuid:Y_,cuid2:J_,custom:X_,date:q_,discriminatedUnion:Q_,e164:et,email:lt,emoji:it,endsWith:de,enum:nt,file:at,flattenError:Fe,float32:_t,float64:tt,formatError:Ke,function:rl,getErrorMap:vm,globalRegistry:K,gt:Ce,gte:w,guid:rt,hostname:st,includes:xe,instanceof:mt,int:Et,int32:vt,int64:ot,intersection:ct,ipv4:St,ipv6:ut,iso:It,json:pt,jwt:Pt,keyof:dt,ksuid:Ct,lazy:xt,length:ge,literal:gt,locales:_l,looseObject:At,lowercase:Ae,lt:fe,lte:B,map:ft,maxLength:Oe,maxSize:Re,mime:Le,minLength:be,minSize:$e,multipleOf:Ue,nan:Ot,nanoid:Rt,nativeEnum:Lt,negative:Te,never:bt,nonnegative:Ne,nonoptional:$t,nonpositive:ye,normalize:he,null:Ut,nullable:Tt,nullish:Nt,number:H,object:j,optional:yt,overwrite:Me,parse:ht,parseAsync:Mt,partialRecord:Dt,pipe:Gt,positive:De,prefault:kt,preprocess:wt,prettifyError:Ve,promise:Bt,property:Ge,readonly:Wt,record:Ht,refine:jt,regex:ke,regexes:Ye,registry:Je,safeParse:zt,safeParseAsync:Zt,set:Ft,setErrorMap:Em,size:we,startsWith:Be,strictObject:Kt,string:Vt,stringFormat:Yt,stringbool:Jt,success:Xt,superRefine:qt,symbol:Qt,templateLiteral:er,toJSONSchema:sl,toLowerCase:We,toUpperCase:He,transform:lr,treeifyError:Xe,trim:je,tuple:ir,uint32:nr,uint64:ar,ulid:_r,undefined:tr,union:rr,unknown:sr,uppercase:ze,url:mr,uuid:Er,uuidv4:vr,uuidv6:or,uuidv7:cr,void:Sr,xid:ur},Symbol.toStringTag,{value:"Module"}));function Pm(_){return Ir(_)&&pr(_)}var T=Pr(function(_){return nl(dr(_,1,Pm,!0))});function dm(_){return _&&_.length?nl(_):[]}const Cm=({name:_})=>{const[{value:a}]=Cr(`${_}.active`),t=xr.useMemo(()=>[{label:"Min cycle count",input:L.jsx(V,{name:"filter_pid_speed.min_cycle_count",numType:"decimal"})},{label:"Max cycle count",input:L.jsx(V,{name:"filter_pid_speed.max_cycle_count",numType:"decimal"})}],[]);return a===!0?L.jsx(gr,{fields:t}):null},Mm=j({filter_max_size:W(),filter_pid_speed:j({active:W(),min_cycle_count:H().min(18).max(900),max_cycle_count:H().min(18).max(900)})}),Dm=(_,a)=>({max_size:_.filter_max_size,pid_speed:_.filter_pid_speed,species:a}),Gm=()=>({filter_max_size:!1,filter_pid_speed:{active:!1,min_cycle_count:18,max_cycle_count:900}}),xm=(_={})=>[Ar(_==null?void 0:_.max_size,{label:"Max size",input:L.jsx(J,{name:"filter_max_size"})}),Y(_==null?void 0:_.pid_speed,{label:"PID cycle speed",input:L.jsx(J,{name:"filter_pid_speed.active"})}),Y(_==null?void 0:_.pid_speed,{label:"",key:"_getGen3PkmFilterFields.pid_speed",direction:"column",input:L.jsx(Cm,{name:"filter_pid_speed"})})].filter(a=>a!==null),km=_=>xm(_),wm=_=>_.split("_").map(a=>a.match(/(?:B)?\d+F/)!=null?a:Or(a.toLowerCase())).join(" ").replace(/^Map /,""),ml=["SweetScentLand","SweetScentWater","OldRod","GoodRod","SuperRod","RockSmash"],Bm=_=>U(_).with("SweetScentLand",()=>"Sweet Scent on Land").with("SweetScentWater",()=>"Sweet Scent on Water").with("OldRod",()=>"Old Rod").with("GoodRod",()=>"Good Rod").with("SuperRod",()=>"Super Rod").with("RockSmash",()=>"Rock Smash").exhaustive(),gm=["Male","Female"],Wm=["NotInMap","OnFeebasTile","InMapButNotOnFeebasTile"],Hm=_=>U(_).with("NotInMap",()=>"Not in Route 119").with("OnFeebasTile",()=>"On Feebas tile").with("InMapButNotOnFeebasTile",()=>"In Route 119 but not on Feebas tile").exhaustive(),Am=["Inactive","ActiveNotInMap","ActiveInMapLatios","ActiveInMapLatias"],jm=_=>U(_).with("Inactive",()=>"Inactive").with("ActiveNotInMap",()=>"Roaming in another map").with("ActiveInMapLatios",()=>"Roaming in map (Latios)").with("ActiveInMapLatias",()=>"Roaming in map (Latias)").exhaustive(),fm=["Vanilla","Egg","MagnetPull","Static","HustleVitalSpiritPressure",...gm.map(_=>({CuteCharm:_})),...fr.map(_=>({Synchronize:_}))],Om=_=>U(_).with("Vanilla",()=>"Ordinary lead").with({Synchronize:X.string},a=>`Synchronize (${a.Synchronize})`).with({CuteCharm:X.string},a=>`Cute Charm (${a.CuteCharm})`).with("Egg",()=>"Egg lead").with("MagnetPull",()=>"Magnet Pull").with("Static",()=>"Static").with("HustleVitalSpiritPressure",()=>"Hustle, Vital Spirit or Pressure").exhaustive(),zm=fm.map((_,a)=>({label:Om(_),value:a})),Rm=["Inactive","ActiveNotInMap","Route102Seedot","Route114Nuzleaf","Route117Seedot","Route120Seedot","Route116SkittyLvl8","Route116SkittyLvl15","Route102Surkit","Route114Surkit","Route117Surkit","Route120Surkit"],Zm=_=>U(_).with("Inactive",()=>"Inactive").with("ActiveNotInMap",()=>"Mass outbreak in another map").with("Route102Seedot",()=>"Seedot Route 102").with("Route114Nuzleaf",()=>"Nuzleaf Route 114)").with("Route117Seedot",()=>"Seedot Route 117)").with("Route120Seedot",()=>"Seedot Route 120)").with("Route116SkittyLvl8",()=>"Skitty Route 116 (Lvl 8)").with("Route116SkittyLvl15",()=>"Skitty Route 116 (Lvl 15)").with("Route102Surkit",()=>"Surkit Route 102)").with("Route114Surkit",()=>"Surkit Route 114)").with("Route117Surkit",()=>"Surkit Route 117)").with("Route120Surkit",()=>"Surkit Route 120)").exhaustive(),le={Bulbasaur:["Grass","Poison"],Ivysaur:["Grass","Poison"],Venusaur:["Grass","Poison"],Charmander:["Fire"],Charmeleon:["Fire"],Charizard:["Fire","Flying"],Squirtle:["Water"],Wartortle:["Water"],Blastoise:["Water"],Caterpie:["Bug"],Metapod:["Bug"],Butterfree:["Bug","Flying"],Weedle:["Bug","Poison"],Kakuna:["Bug","Poison"],Beedrill:["Bug","Poison"],Pidgey:["Normal","Flying"],Pidgeotto:["Normal","Flying"],Pidgeot:["Normal","Flying"],Rattata:["Normal"],Raticate:["Normal"],Spearow:["Normal","Flying"],Fearow:["Normal","Flying"],Ekans:["Poison"],Arbok:["Poison"],Pikachu:["Electric"],Raichu:["Electric"],Sandshrew:["Ground"],Sandslash:["Ground"],NidoranF:["Poison"],Nidorina:["Poison"],Nidoqueen:["Poison","Ground"],NidoranM:["Poison"],Nidorino:["Poison"],Nidoking:["Poison","Ground"],Clefairy:["Normal"],Clefable:["Normal"],Vulpix:["Fire"],Ninetales:["Fire"],Jigglypuff:["Normal"],Wigglytuff:["Normal"],Zubat:["Poison","Flying"],Golbat:["Poison","Flying"],Oddish:["Grass","Poison"],Gloom:["Grass","Poison"],Vileplume:["Grass","Poison"],Paras:["Bug","Grass"],Parasect:["Bug","Grass"],Venonat:["Bug","Poison"],Venomoth:["Bug","Poison"],Diglett:["Ground"],Dugtrio:["Ground"],Meowth:["Normal"],Persian:["Normal"],Psyduck:["Water"],Golduck:["Water"],Mankey:["Fighting"],Primeape:["Fighting"],Growlithe:["Fire"],Arcanine:["Fire"],Poliwag:["Water"],Poliwhirl:["Water"],Poliwrath:["Water","Fighting"],Abra:["Psychic"],Kadabra:["Psychic"],Alakazam:["Psychic"],Machop:["Fighting"],Machoke:["Fighting"],Machamp:["Fighting"],Bellsprout:["Grass","Poison"],Weepinbell:["Grass","Poison"],Victreebel:["Grass","Poison"],Tentacool:["Water","Poison"],Tentacruel:["Water","Poison"],Geodude:["Rock","Ground"],Graveler:["Rock","Ground"],Golem:["Rock","Ground"],Ponyta:["Fire"],Rapidash:["Fire"],Slowpoke:["Water","Psychic"],Slowbro:["Water","Psychic"],Magnemite:["Electric","Steel"],Magneton:["Electric","Steel"],FarfetchD:["Normal","Flying"],Doduo:["Normal","Flying"],Dodrio:["Normal","Flying"],Seel:["Water"],Dewgong:["Water","Ice"],Grimer:["Poison"],Muk:["Poison"],Shellder:["Water"],Cloyster:["Water","Ice"],Gastly:["Ghost","Poison"],Haunter:["Ghost","Poison"],Gengar:["Ghost","Poison"],Onix:["Rock","Ground"],Drowzee:["Psychic"],Hypno:["Psychic"],Krabby:["Water"],Kingler:["Water"],Voltorb:["Electric"],Electrode:["Electric"],Exeggcute:["Grass","Psychic"],Exeggutor:["Grass","Psychic"],Cubone:["Ground"],Marowak:["Ground"],Hitmonlee:["Fighting"],Hitmonchan:["Fighting"],Lickitung:["Normal"],Koffing:["Poison"],Weezing:["Poison"],Rhyhorn:["Ground","Rock"],Rhydon:["Ground","Rock"],Chansey:["Normal"],Tangela:["Grass"],Kangaskhan:["Normal"],Horsea:["Water"],Seadra:["Water"],Goldeen:["Water"],Seaking:["Water"],Staryu:["Water"],Starmie:["Water","Psychic"],MrMime:["Psychic"],Scyther:["Bug","Flying"],Jynx:["Ice","Psychic"],Electabuzz:["Electric"],Magmar:["Fire"],Pinsir:["Bug"],Tauros:["Normal"],Magikarp:["Water"],Gyarados:["Water","Flying"],Lapras:["Water","Ice"],Ditto:["Normal"],Eevee:["Normal"],Vaporeon:["Water"],Jolteon:["Electric"],Flareon:["Fire"],Porygon:["Normal"],Omanyte:["Rock","Water"],Omastar:["Rock","Water"],Kabuto:["Rock","Water"],Kabutops:["Rock","Water"],Aerodactyl:["Rock","Flying"],Snorlax:["Normal"],Articuno:["Ice","Flying"],Zapdos:["Electric","Flying"],Moltres:["Fire","Flying"],Dratini:["Dragon"],Dragonair:["Dragon"],Dragonite:["Dragon","Flying"],Mewtwo:["Psychic"],Mew:["Psychic"],Chikorita:["Grass"],Bayleef:["Grass"],Meganium:["Grass"],Cyndaquil:["Fire"],Quilava:["Fire"],Typhlosion:["Fire"],Totodile:["Water"],Croconaw:["Water"],Feraligatr:["Water"],Sentret:["Normal"],Furret:["Normal"],Hoothoot:["Normal","Flying"],Noctowl:["Normal","Flying"],Ledyba:["Bug","Flying"],Ledian:["Bug","Flying"],Spinarak:["Bug","Poison"],Ariados:["Bug","Poison"],Crobat:["Poison","Flying"],Chinchou:["Water","Electric"],Lanturn:["Water","Electric"],Pichu:["Electric"],Cleffa:["Normal"],Igglybuff:["Normal"],Togepi:["Normal"],Togetic:["Normal","Flying"],Natu:["Psychic","Flying"],Xatu:["Psychic","Flying"],Mareep:["Electric"],Flaaffy:["Electric"],Ampharos:["Electric"],Bellossom:["Grass"],Marill:["Water"],Azumarill:["Water"],Sudowoodo:["Rock"],Politoed:["Water"],Hoppip:["Grass","Flying"],Skiploom:["Grass","Flying"],Jumpluff:["Grass","Flying"],Aipom:["Normal"],Sunkern:["Grass"],Sunflora:["Grass"],Yanma:["Bug","Flying"],Wooper:["Water","Ground"],Quagsire:["Water","Ground"],Espeon:["Psychic"],Umbreon:["Dark"],Murkrow:["Dark","Flying"],Slowking:["Water","Psychic"],Misdreavus:["Ghost"],Unown:["Psychic"],Wobbuffet:["Psychic"],Girafarig:["Normal","Psychic"],Pineco:["Bug"],Forretress:["Bug","Steel"],Dunsparce:["Normal"],Gligar:["Ground","Flying"],Steelix:["Steel","Ground"],Snubbull:["Normal"],Granbull:["Normal"],Qwilfish:["Water","Poison"],Scizor:["Bug","Steel"],Shuckle:["Bug","Rock"],Heracross:["Bug","Fighting"],Sneasel:["Dark","Ice"],Teddiursa:["Normal"],Ursaring:["Normal"],Slugma:["Fire"],Magcargo:["Fire","Rock"],Swinub:["Ice","Ground"],Piloswine:["Ice","Ground"],Corsola:["Water","Rock"],Remoraid:["Water"],Octillery:["Water"],Delibird:["Ice","Flying"],Mantine:["Water","Flying"],Skarmory:["Steel","Flying"],Houndour:["Dark","Fire"],Houndoom:["Dark","Fire"],Kingdra:["Water","Dragon"],Phanpy:["Ground"],Donphan:["Ground"],Porygon2:["Normal"],Stantler:["Normal"],Smeargle:["Normal"],Tyrogue:["Fighting"],Hitmontop:["Fighting"],Smoochum:["Ice","Psychic"],Elekid:["Electric"],Magby:["Fire"],Miltank:["Normal"],Blissey:["Normal"],Raikou:["Electric"],Entei:["Fire"],Suicune:["Water"],Larvitar:["Rock","Ground"],Pupitar:["Rock","Ground"],Tyranitar:["Rock","Dark"],Lugia:["Psychic","Flying"],HoOh:["Fire","Flying"],Celebi:["Psychic","Grass"],Treecko:["Grass"],Grovyle:["Grass"],Sceptile:["Grass"],Torchic:["Fire"],Combusken:["Fire","Fighting"],Blaziken:["Fire","Fighting"],Mudkip:["Water"],Marshtomp:["Water","Ground"],Swampert:["Water","Ground"],Poochyena:["Dark"],Mightyena:["Dark"],Zigzagoon:["Normal"],Linoone:["Normal"],Wurmple:["Bug"],Silcoon:["Bug"],Beautifly:["Bug","Flying"],Cascoon:["Bug"],Dustox:["Bug","Poison"],Lotad:["Water","Grass"],Lombre:["Water","Grass"],Ludicolo:["Water","Grass"],Seedot:["Grass"],Nuzleaf:["Grass","Dark"],Shiftry:["Grass","Dark"],Taillow:["Normal","Flying"],Swellow:["Normal","Flying"],Wingull:["Water","Flying"],Pelipper:["Water","Flying"],Ralts:["Psychic"],Kirlia:["Psychic"],Gardevoir:["Psychic"],Surskit:["Bug","Water"],Masquerain:["Bug","Flying"],Shroomish:["Grass"],Breloom:["Grass","Fighting"],Slakoth:["Normal"],Vigoroth:["Normal"],Slaking:["Normal"],Nincada:["Bug","Ground"],Ninjask:["Bug","Flying"],Shedinja:["Bug","Ghost"],Whismur:["Normal"],Loudred:["Normal"],Exploud:["Normal"],Makuhita:["Fighting"],Hariyama:["Fighting"],Azurill:["Normal"],Nosepass:["Rock"],Skitty:["Normal"],Delcatty:["Normal"],Sableye:["Dark","Ghost"],Mawile:["Steel"],Aron:["Steel","Rock"],Lairon:["Steel","Rock"],Aggron:["Steel","Rock"],Meditite:["Fighting","Psychic"],Medicham:["Fighting","Psychic"],Electrike:["Electric"],Manectric:["Electric"],Plusle:["Electric"],Minun:["Electric"],Volbeat:["Bug"],Illumise:["Bug"],Roselia:["Grass","Poison"],Gulpin:["Poison"],Swalot:["Poison"],Carvanha:["Water","Dark"],Sharpedo:["Water","Dark"],Wailmer:["Water"],Wailord:["Water"],Numel:["Fire","Ground"],Camerupt:["Fire","Ground"],Torkoal:["Fire"],Spoink:["Psychic"],Grumpig:["Psychic"],Spinda:["Normal"],Trapinch:["Ground"],Vibrava:["Ground","Dragon"],Flygon:["Ground","Dragon"],Cacnea:["Grass"],Cacturne:["Grass","Dark"],Swablu:["Normal","Flying"],Altaria:["Dragon","Flying"],Zangoose:["Normal"],Seviper:["Poison"],Lunatone:["Rock","Psychic"],Solrock:["Rock","Psychic"],Barboach:["Water","Ground"],Whiscash:["Water","Ground"],Corphish:["Water"],Crawdaunt:["Water","Dark"],Baltoy:["Ground","Psychic"],Claydol:["Ground","Psychic"],Lileep:["Rock","Grass"],Cradily:["Rock","Grass"],Anorith:["Rock","Bug"],Armaldo:["Rock","Bug"],Feebas:["Water"],Milotic:["Water"],Castform:["Normal"],Kecleon:["Normal"],Shuppet:["Ghost"],Banette:["Ghost"],Duskull:["Ghost"],Dusclops:["Ghost"],Tropius:["Grass","Flying"],Chimecho:["Psychic"],Absol:["Dark"],Wynaut:["Psychic"],Snorunt:["Ice"],Glalie:["Ice"],Spheal:["Ice","Water"],Sealeo:["Ice","Water"],Walrein:["Ice","Water"],Clamperl:["Water"],Huntail:["Water"],Gorebyss:["Water"],Relicanth:["Water","Rock"],Luvdisc:["Water"],Bagon:["Dragon"],Shelgon:["Dragon"],Salamence:["Dragon","Flying"],Beldum:["Steel","Psychic"],Metang:["Steel","Psychic"],Metagross:["Steel","Psychic"],Regirock:["Rock"],Regice:["Ice"],Registeel:["Steel"],Latias:["Dragon","Psychic"],Latios:["Dragon","Psychic"],Kyogre:["Water"],Groudon:["Ground"],Rayquaza:["Dragon","Flying"],Jirachi:["Steel","Psychic"],Deoxys:["Psychic"]},ie=(_,a,t)=>a in le?le[a].includes(t):!1,Lm={wild_encounter_groups:[{label:"gWildMonHeaders",for_maps:!0,fields:[{type:"land_mons",encounter_rates:[20,20,10,10,10,10,5,5,4,4,1,1]},{type:"water_mons",encounter_rates:[60,30,5,4,1]},{type:"rock_smash_mons",encounter_rates:[60,30,5,4,1]},{type:"fishing_mons",encounter_rates:[70,30,60,20,20,40,40,15,4,1],groups:{old_rod:[0,1],good_rod:[2,3,4],super_rod:[5,6,7,8,9]}}],encounters:[{map:"MAP_ROUTE101",base_label:"gRoute101",land_mons:{encounter_rate:20,mons:[{min_level:2,max_level:2,species:"SPECIES_WURMPLE"},{min_level:2,max_level:2,species:"SPECIES_POOCHYENA"},{min_level:2,max_level:2,species:"SPECIES_WURMPLE"},{min_level:3,max_level:3,species:"SPECIES_WURMPLE"},{min_level:3,max_level:3,species:"SPECIES_POOCHYENA"},{min_level:3,max_level:3,species:"SPECIES_POOCHYENA"},{min_level:3,max_level:3,species:"SPECIES_WURMPLE"},{min_level:3,max_level:3,species:"SPECIES_POOCHYENA"},{min_level:2,max_level:2,species:"SPECIES_ZIGZAGOON"},{min_level:2,max_level:2,species:"SPECIES_ZIGZAGOON"},{min_level:3,max_level:3,species:"SPECIES_ZIGZAGOON"},{min_level:3,max_level:3,species:"SPECIES_ZIGZAGOON"}]}},{map:"MAP_ROUTE102",base_label:"gRoute102",land_mons:{encounter_rate:20,mons:[{min_level:3,max_level:3,species:"SPECIES_POOCHYENA"},{min_level:3,max_level:3,species:"SPECIES_WURMPLE"},{min_level:4,max_level:4,species:"SPECIES_POOCHYENA"},{min_level:4,max_level:4,species:"SPECIES_WURMPLE"},{min_level:3,max_level:3,species:"SPECIES_LOTAD"},{min_level:4,max_level:4,species:"SPECIES_LOTAD"},{min_level:3,max_level:3,species:"SPECIES_ZIGZAGOON"},{min_level:3,max_level:3,species:"SPECIES_ZIGZAGOON"},{min_level:4,max_level:4,species:"SPECIES_ZIGZAGOON"},{min_level:4,max_level:4,species:"SPECIES_RALTS"},{min_level:4,max_level:4,species:"SPECIES_ZIGZAGOON"},{min_level:3,max_level:3,species:"SPECIES_SEEDOT"}]},water_mons:{encounter_rate:4,mons:[{min_level:20,max_level:30,species:"SPECIES_MARILL"},{min_level:10,max_level:20,species:"SPECIES_MARILL"},{min_level:30,max_level:35,species:"SPECIES_MARILL"},{min_level:5,max_level:10,species:"SPECIES_MARILL"},{min_level:20,max_level:30,species:"SPECIES_GOLDEEN"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_CORPHISH"},{min_level:25,max_level:30,species:"SPECIES_CORPHISH"},{min_level:30,max_level:35,species:"SPECIES_CORPHISH"},{min_level:20,max_level:25,species:"SPECIES_CORPHISH"},{min_level:35,max_level:40,species:"SPECIES_CORPHISH"},{min_level:40,max_level:45,species:"SPECIES_CORPHISH"}]}},{map:"MAP_ROUTE103",base_label:"gRoute103",land_mons:{encounter_rate:20,mons:[{min_level:2,max_level:2,species:"SPECIES_POOCHYENA"},{min_level:3,max_level:3,species:"SPECIES_POOCHYENA"},{min_level:3,max_level:3,species:"SPECIES_POOCHYENA"},{min_level:4,max_level:4,species:"SPECIES_POOCHYENA"},{min_level:2,max_level:2,species:"SPECIES_WINGULL"},{min_level:3,max_level:3,species:"SPECIES_ZIGZAGOON"},{min_level:3,max_level:3,species:"SPECIES_ZIGZAGOON"},{min_level:4,max_level:4,species:"SPECIES_ZIGZAGOON"},{min_level:3,max_level:3,species:"SPECIES_WINGULL"},{min_level:3,max_level:3,species:"SPECIES_WINGULL"},{min_level:2,max_level:2,species:"SPECIES_WINGULL"},{min_level:4,max_level:4,species:"SPECIES_WINGULL"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE104",base_label:"gRoute104",land_mons:{encounter_rate:20,mons:[{min_level:4,max_level:4,species:"SPECIES_POOCHYENA"},{min_level:4,max_level:4,species:"SPECIES_WURMPLE"},{min_level:5,max_level:5,species:"SPECIES_POOCHYENA"},{min_level:5,max_level:5,species:"SPECIES_MARILL"},{min_level:4,max_level:4,species:"SPECIES_MARILL"},{min_level:5,max_level:5,species:"SPECIES_POOCHYENA"},{min_level:4,max_level:4,species:"SPECIES_TAILLOW"},{min_level:5,max_level:5,species:"SPECIES_TAILLOW"},{min_level:4,max_level:4,species:"SPECIES_WINGULL"},{min_level:4,max_level:4,species:"SPECIES_WINGULL"},{min_level:3,max_level:3,species:"SPECIES_WINGULL"},{min_level:5,max_level:5,species:"SPECIES_WINGULL"}]},water_mons:{encounter_rate:4,mons:[{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:25,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:30,max_level:35,species:"SPECIES_MAGIKARP"},{min_level:20,max_level:25,species:"SPECIES_MAGIKARP"},{min_level:35,max_level:40,species:"SPECIES_MAGIKARP"},{min_level:40,max_level:45,species:"SPECIES_MAGIKARP"}]}},{map:"MAP_ROUTE105",base_label:"gRoute105",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE110",base_label:"gRoute110",land_mons:{encounter_rate:20,mons:[{min_level:12,max_level:12,species:"SPECIES_POOCHYENA"},{min_level:12,max_level:12,species:"SPECIES_ELECTRIKE"},{min_level:12,max_level:12,species:"SPECIES_GULPIN"},{min_level:13,max_level:13,species:"SPECIES_ELECTRIKE"},{min_level:13,max_level:13,species:"SPECIES_MINUN"},{min_level:13,max_level:13,species:"SPECIES_ODDISH"},{min_level:13,max_level:13,species:"SPECIES_MINUN"},{min_level:13,max_level:13,species:"SPECIES_GULPIN"},{min_level:12,max_level:12,species:"SPECIES_WINGULL"},{min_level:12,max_level:12,species:"SPECIES_WINGULL"},{min_level:12,max_level:12,species:"SPECIES_PLUSLE"},{min_level:13,max_level:13,species:"SPECIES_PLUSLE"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE111",base_label:"gRoute111",land_mons:{encounter_rate:10,mons:[{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:21,max_level:21,species:"SPECIES_SANDSHREW"},{min_level:21,max_level:21,species:"SPECIES_TRAPINCH"},{min_level:19,max_level:19,species:"SPECIES_BALTOY"},{min_level:21,max_level:21,species:"SPECIES_BALTOY"},{min_level:19,max_level:19,species:"SPECIES_SANDSHREW"},{min_level:19,max_level:19,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_BALTOY"},{min_level:20,max_level:20,species:"SPECIES_CACNEA"},{min_level:22,max_level:22,species:"SPECIES_CACNEA"},{min_level:22,max_level:22,species:"SPECIES_CACNEA"}]},water_mons:{encounter_rate:4,mons:[{min_level:20,max_level:30,species:"SPECIES_MARILL"},{min_level:10,max_level:20,species:"SPECIES_MARILL"},{min_level:30,max_level:35,species:"SPECIES_MARILL"},{min_level:5,max_level:10,species:"SPECIES_MARILL"},{min_level:20,max_level:30,species:"SPECIES_GOLDEEN"}]},rock_smash_mons:{encounter_rate:20,mons:[{min_level:10,max_level:15,species:"SPECIES_GEODUDE"},{min_level:5,max_level:10,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_BARBOACH"},{min_level:25,max_level:30,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_BARBOACH"},{min_level:20,max_level:25,species:"SPECIES_BARBOACH"},{min_level:35,max_level:40,species:"SPECIES_BARBOACH"},{min_level:40,max_level:45,species:"SPECIES_BARBOACH"}]}},{map:"MAP_ROUTE112",base_label:"gRoute112",land_mons:{encounter_rate:20,mons:[{min_level:15,max_level:15,species:"SPECIES_NUMEL"},{min_level:15,max_level:15,species:"SPECIES_NUMEL"},{min_level:15,max_level:15,species:"SPECIES_MARILL"},{min_level:14,max_level:14,species:"SPECIES_NUMEL"},{min_level:14,max_level:14,species:"SPECIES_NUMEL"},{min_level:14,max_level:14,species:"SPECIES_MARILL"},{min_level:16,max_level:16,species:"SPECIES_NUMEL"},{min_level:16,max_level:16,species:"SPECIES_MARILL"},{min_level:16,max_level:16,species:"SPECIES_NUMEL"},{min_level:16,max_level:16,species:"SPECIES_NUMEL"},{min_level:16,max_level:16,species:"SPECIES_NUMEL"},{min_level:16,max_level:16,species:"SPECIES_NUMEL"}]}},{map:"MAP_ROUTE113",base_label:"gRoute113",land_mons:{encounter_rate:20,mons:[{min_level:15,max_level:15,species:"SPECIES_SPINDA"},{min_level:15,max_level:15,species:"SPECIES_SPINDA"},{min_level:15,max_level:15,species:"SPECIES_SLUGMA"},{min_level:14,max_level:14,species:"SPECIES_SPINDA"},{min_level:14,max_level:14,species:"SPECIES_SPINDA"},{min_level:14,max_level:14,species:"SPECIES_SLUGMA"},{min_level:16,max_level:16,species:"SPECIES_SPINDA"},{min_level:16,max_level:16,species:"SPECIES_SLUGMA"},{min_level:16,max_level:16,species:"SPECIES_SPINDA"},{min_level:16,max_level:16,species:"SPECIES_SKARMORY"},{min_level:16,max_level:16,species:"SPECIES_SPINDA"},{min_level:16,max_level:16,species:"SPECIES_SKARMORY"}]}},{map:"MAP_ROUTE114",base_label:"gRoute114",land_mons:{encounter_rate:20,mons:[{min_level:16,max_level:16,species:"SPECIES_SWABLU"},{min_level:16,max_level:16,species:"SPECIES_LOTAD"},{min_level:17,max_level:17,species:"SPECIES_SWABLU"},{min_level:15,max_level:15,species:"SPECIES_SWABLU"},{min_level:15,max_level:15,species:"SPECIES_LOTAD"},{min_level:16,max_level:16,species:"SPECIES_LOMBRE"},{min_level:16,max_level:16,species:"SPECIES_LOMBRE"},{min_level:18,max_level:18,species:"SPECIES_LOMBRE"},{min_level:17,max_level:17,species:"SPECIES_SEVIPER"},{min_level:15,max_level:15,species:"SPECIES_SEVIPER"},{min_level:17,max_level:17,species:"SPECIES_SEVIPER"},{min_level:15,max_level:15,species:"SPECIES_NUZLEAF"}]},water_mons:{encounter_rate:4,mons:[{min_level:20,max_level:30,species:"SPECIES_MARILL"},{min_level:10,max_level:20,species:"SPECIES_MARILL"},{min_level:30,max_level:35,species:"SPECIES_MARILL"},{min_level:5,max_level:10,species:"SPECIES_MARILL"},{min_level:20,max_level:30,species:"SPECIES_GOLDEEN"}]},rock_smash_mons:{encounter_rate:20,mons:[{min_level:10,max_level:15,species:"SPECIES_GEODUDE"},{min_level:5,max_level:10,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_BARBOACH"},{min_level:25,max_level:30,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_BARBOACH"},{min_level:20,max_level:25,species:"SPECIES_BARBOACH"},{min_level:35,max_level:40,species:"SPECIES_BARBOACH"},{min_level:40,max_level:45,species:"SPECIES_BARBOACH"}]}},{map:"MAP_ROUTE116",base_label:"gRoute116",land_mons:{encounter_rate:20,mons:[{min_level:6,max_level:6,species:"SPECIES_POOCHYENA"},{min_level:6,max_level:6,species:"SPECIES_WHISMUR"},{min_level:6,max_level:6,species:"SPECIES_NINCADA"},{min_level:7,max_level:7,species:"SPECIES_ABRA"},{min_level:7,max_level:7,species:"SPECIES_NINCADA"},{min_level:6,max_level:6,species:"SPECIES_TAILLOW"},{min_level:7,max_level:7,species:"SPECIES_TAILLOW"},{min_level:8,max_level:8,species:"SPECIES_TAILLOW"},{min_level:7,max_level:7,species:"SPECIES_POOCHYENA"},{min_level:8,max_level:8,species:"SPECIES_POOCHYENA"},{min_level:7,max_level:7,species:"SPECIES_SKITTY"},{min_level:8,max_level:8,species:"SPECIES_SKITTY"}]}},{map:"MAP_ROUTE117",base_label:"gRoute117",land_mons:{encounter_rate:20,mons:[{min_level:13,max_level:13,species:"SPECIES_POOCHYENA"},{min_level:13,max_level:13,species:"SPECIES_ODDISH"},{min_level:14,max_level:14,species:"SPECIES_POOCHYENA"},{min_level:14,max_level:14,species:"SPECIES_ODDISH"},{min_level:13,max_level:13,species:"SPECIES_MARILL"},{min_level:13,max_level:13,species:"SPECIES_ODDISH"},{min_level:13,max_level:13,species:"SPECIES_ILLUMISE"},{min_level:13,max_level:13,species:"SPECIES_ILLUMISE"},{min_level:14,max_level:14,species:"SPECIES_ILLUMISE"},{min_level:14,max_level:14,species:"SPECIES_ILLUMISE"},{min_level:13,max_level:13,species:"SPECIES_VOLBEAT"},{min_level:13,max_level:13,species:"SPECIES_SEEDOT"}]},water_mons:{encounter_rate:4,mons:[{min_level:20,max_level:30,species:"SPECIES_MARILL"},{min_level:10,max_level:20,species:"SPECIES_MARILL"},{min_level:30,max_level:35,species:"SPECIES_MARILL"},{min_level:5,max_level:10,species:"SPECIES_MARILL"},{min_level:20,max_level:30,species:"SPECIES_GOLDEEN"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_CORPHISH"},{min_level:25,max_level:30,species:"SPECIES_CORPHISH"},{min_level:30,max_level:35,species:"SPECIES_CORPHISH"},{min_level:20,max_level:25,species:"SPECIES_CORPHISH"},{min_level:35,max_level:40,species:"SPECIES_CORPHISH"},{min_level:40,max_level:45,species:"SPECIES_CORPHISH"}]}},{map:"MAP_ROUTE118",base_label:"gRoute118",land_mons:{encounter_rate:20,mons:[{min_level:24,max_level:24,species:"SPECIES_ZIGZAGOON"},{min_level:24,max_level:24,species:"SPECIES_ELECTRIKE"},{min_level:26,max_level:26,species:"SPECIES_ZIGZAGOON"},{min_level:26,max_level:26,species:"SPECIES_ELECTRIKE"},{min_level:26,max_level:26,species:"SPECIES_LINOONE"},{min_level:26,max_level:26,species:"SPECIES_MANECTRIC"},{min_level:25,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:25,species:"SPECIES_WINGULL"},{min_level:26,max_level:26,species:"SPECIES_WINGULL"},{min_level:26,max_level:26,species:"SPECIES_WINGULL"},{min_level:27,max_level:27,species:"SPECIES_WINGULL"},{min_level:25,max_level:25,species:"SPECIES_KECLEON"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_CARVANHA"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_CARVANHA"},{min_level:20,max_level:25,species:"SPECIES_CARVANHA"},{min_level:35,max_level:40,species:"SPECIES_CARVANHA"},{min_level:40,max_level:45,species:"SPECIES_CARVANHA"}]}},{map:"MAP_ROUTE124",base_label:"gRoute124",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_PETALBURG_WOODS",base_label:"gPetalburgWoods",land_mons:{encounter_rate:20,mons:[{min_level:5,max_level:5,species:"SPECIES_POOCHYENA"},{min_level:5,max_level:5,species:"SPECIES_WURMPLE"},{min_level:5,max_level:5,species:"SPECIES_SHROOMISH"},{min_level:6,max_level:6,species:"SPECIES_POOCHYENA"},{min_level:5,max_level:5,species:"SPECIES_SILCOON"},{min_level:5,max_level:5,species:"SPECIES_CASCOON"},{min_level:6,max_level:6,species:"SPECIES_WURMPLE"},{min_level:6,max_level:6,species:"SPECIES_SHROOMISH"},{min_level:5,max_level:5,species:"SPECIES_TAILLOW"},{min_level:5,max_level:5,species:"SPECIES_SLAKOTH"},{min_level:6,max_level:6,species:"SPECIES_TAILLOW"},{min_level:6,max_level:6,species:"SPECIES_SLAKOTH"}]}},{map:"MAP_RUSTURF_TUNNEL",base_label:"gRusturfTunnel",land_mons:{encounter_rate:10,mons:[{min_level:6,max_level:6,species:"SPECIES_WHISMUR"},{min_level:7,max_level:7,species:"SPECIES_WHISMUR"},{min_level:6,max_level:6,species:"SPECIES_WHISMUR"},{min_level:6,max_level:6,species:"SPECIES_WHISMUR"},{min_level:7,max_level:7,species:"SPECIES_WHISMUR"},{min_level:7,max_level:7,species:"SPECIES_WHISMUR"},{min_level:5,max_level:5,species:"SPECIES_WHISMUR"},{min_level:8,max_level:8,species:"SPECIES_WHISMUR"},{min_level:5,max_level:5,species:"SPECIES_WHISMUR"},{min_level:8,max_level:8,species:"SPECIES_WHISMUR"},{min_level:5,max_level:5,species:"SPECIES_WHISMUR"},{min_level:8,max_level:8,species:"SPECIES_WHISMUR"}]}},{map:"MAP_GRANITE_CAVE_1F",base_label:"gGraniteCave_1F",land_mons:{encounter_rate:10,mons:[{min_level:7,max_level:7,species:"SPECIES_ZUBAT"},{min_level:8,max_level:8,species:"SPECIES_MAKUHITA"},{min_level:7,max_level:7,species:"SPECIES_MAKUHITA"},{min_level:8,max_level:8,species:"SPECIES_ZUBAT"},{min_level:9,max_level:9,species:"SPECIES_MAKUHITA"},{min_level:8,max_level:8,species:"SPECIES_ABRA"},{min_level:10,max_level:10,species:"SPECIES_MAKUHITA"},{min_level:6,max_level:6,species:"SPECIES_MAKUHITA"},{min_level:7,max_level:7,species:"SPECIES_GEODUDE"},{min_level:8,max_level:8,species:"SPECIES_GEODUDE"},{min_level:6,max_level:6,species:"SPECIES_GEODUDE"},{min_level:9,max_level:9,species:"SPECIES_GEODUDE"}]}},{map:"MAP_GRANITE_CAVE_B1F",base_label:"gGraniteCave_B1F",land_mons:{encounter_rate:10,mons:[{min_level:9,max_level:9,species:"SPECIES_ZUBAT"},{min_level:10,max_level:10,species:"SPECIES_ARON"},{min_level:9,max_level:9,species:"SPECIES_ARON"},{min_level:11,max_level:11,species:"SPECIES_ARON"},{min_level:10,max_level:10,species:"SPECIES_ZUBAT"},{min_level:9,max_level:9,species:"SPECIES_ABRA"},{min_level:10,max_level:10,species:"SPECIES_MAKUHITA"},{min_level:11,max_level:11,species:"SPECIES_MAKUHITA"},{min_level:10,max_level:10,species:"SPECIES_SABLEYE"},{min_level:10,max_level:10,species:"SPECIES_SABLEYE"},{min_level:9,max_level:9,species:"SPECIES_SABLEYE"},{min_level:11,max_level:11,species:"SPECIES_SABLEYE"}]}},{map:"MAP_MT_PYRE_1F",base_label:"gMtPyre_1F",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:25,max_level:25,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:23,max_level:23,species:"SPECIES_SHUPPET"},{min_level:22,max_level:22,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"}]}},{map:"MAP_VICTORY_ROAD_1F",base_label:"gVictoryRoad_1F",land_mons:{encounter_rate:10,mons:[{min_level:40,max_level:40,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_HARIYAMA"},{min_level:40,max_level:40,species:"SPECIES_LAIRON"},{min_level:40,max_level:40,species:"SPECIES_LOUDRED"},{min_level:36,max_level:36,species:"SPECIES_ZUBAT"},{min_level:36,max_level:36,species:"SPECIES_MAKUHITA"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:38,max_level:38,species:"SPECIES_HARIYAMA"},{min_level:36,max_level:36,species:"SPECIES_ARON"},{min_level:36,max_level:36,species:"SPECIES_WHISMUR"},{min_level:36,max_level:36,species:"SPECIES_ARON"},{min_level:36,max_level:36,species:"SPECIES_WHISMUR"}]}},{map:"MAP_SAFARI_ZONE_SOUTH",base_label:"gSafariZone_South",land_mons:{encounter_rate:25,mons:[{min_level:25,max_level:25,species:"SPECIES_ODDISH"},{min_level:27,max_level:27,species:"SPECIES_ODDISH"},{min_level:25,max_level:25,species:"SPECIES_GIRAFARIG"},{min_level:27,max_level:27,species:"SPECIES_GIRAFARIG"},{min_level:25,max_level:25,species:"SPECIES_NATU"},{min_level:25,max_level:25,species:"SPECIES_DODUO"},{min_level:25,max_level:25,species:"SPECIES_GLOOM"},{min_level:27,max_level:27,species:"SPECIES_WOBBUFFET"},{min_level:25,max_level:25,species:"SPECIES_PIKACHU"},{min_level:27,max_level:27,species:"SPECIES_WOBBUFFET"},{min_level:27,max_level:27,species:"SPECIES_PIKACHU"},{min_level:29,max_level:29,species:"SPECIES_WOBBUFFET"}]}},{map:"MAP_UNDERWATER_ROUTE126",base_label:"gUnderwater_Route126",water_mons:{encounter_rate:4,mons:[{min_level:20,max_level:30,species:"SPECIES_CLAMPERL"},{min_level:20,max_level:30,species:"SPECIES_CHINCHOU"},{min_level:30,max_level:35,species:"SPECIES_CLAMPERL"},{min_level:30,max_level:35,species:"SPECIES_RELICANTH"},{min_level:30,max_level:35,species:"SPECIES_RELICANTH"}]}},{map:"MAP_ABANDONED_SHIP_ROOMS_B1F",base_label:"gAbandonedShip_Rooms_B1F",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:30,max_level:35,species:"SPECIES_TENTACRUEL"}]},fishing_mons:{encounter_rate:20,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:25,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:30,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:30,max_level:35,species:"SPECIES_TENTACRUEL"},{min_level:25,max_level:30,species:"SPECIES_TENTACRUEL"},{min_level:20,max_level:25,species:"SPECIES_TENTACRUEL"}]}},{map:"MAP_GRANITE_CAVE_B2F",base_label:"gGraniteCave_B2F",land_mons:{encounter_rate:10,mons:[{min_level:10,max_level:10,species:"SPECIES_ZUBAT"},{min_level:11,max_level:11,species:"SPECIES_ARON"},{min_level:10,max_level:10,species:"SPECIES_ARON"},{min_level:11,max_level:11,species:"SPECIES_ZUBAT"},{min_level:12,max_level:12,species:"SPECIES_ARON"},{min_level:10,max_level:10,species:"SPECIES_ABRA"},{min_level:10,max_level:10,species:"SPECIES_SABLEYE"},{min_level:11,max_level:11,species:"SPECIES_SABLEYE"},{min_level:12,max_level:12,species:"SPECIES_SABLEYE"},{min_level:10,max_level:10,species:"SPECIES_SABLEYE"},{min_level:12,max_level:12,species:"SPECIES_SABLEYE"},{min_level:10,max_level:10,species:"SPECIES_SABLEYE"}]},rock_smash_mons:{encounter_rate:20,mons:[{min_level:10,max_level:15,species:"SPECIES_GEODUDE"},{min_level:10,max_level:20,species:"SPECIES_NOSEPASS"},{min_level:5,max_level:10,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"}]}},{map:"MAP_FIERY_PATH",base_label:"gFieryPath",land_mons:{encounter_rate:10,mons:[{min_level:15,max_level:15,species:"SPECIES_NUMEL"},{min_level:15,max_level:15,species:"SPECIES_KOFFING"},{min_level:16,max_level:16,species:"SPECIES_NUMEL"},{min_level:15,max_level:15,species:"SPECIES_MACHOP"},{min_level:15,max_level:15,species:"SPECIES_TORKOAL"},{min_level:15,max_level:15,species:"SPECIES_SLUGMA"},{min_level:16,max_level:16,species:"SPECIES_KOFFING"},{min_level:16,max_level:16,species:"SPECIES_MACHOP"},{min_level:14,max_level:14,species:"SPECIES_TORKOAL"},{min_level:16,max_level:16,species:"SPECIES_TORKOAL"},{min_level:14,max_level:14,species:"SPECIES_GRIMER"},{min_level:14,max_level:14,species:"SPECIES_GRIMER"}]}},{map:"MAP_METEOR_FALLS_B1F_2R",base_label:"gMeteorFalls_B1F_2R",land_mons:{encounter_rate:10,mons:[{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:30,max_level:30,species:"SPECIES_BAGON"},{min_level:35,max_level:35,species:"SPECIES_SOLROCK"},{min_level:35,max_level:35,species:"SPECIES_BAGON"},{min_level:37,max_level:37,species:"SPECIES_SOLROCK"},{min_level:25,max_level:25,species:"SPECIES_BAGON"},{min_level:39,max_level:39,species:"SPECIES_SOLROCK"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_GOLBAT"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_GOLBAT"}]},water_mons:{encounter_rate:4,mons:[{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:25,max_level:35,species:"SPECIES_SOLROCK"},{min_level:15,max_level:25,species:"SPECIES_SOLROCK"},{min_level:5,max_level:15,species:"SPECIES_SOLROCK"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_BARBOACH"},{min_level:25,max_level:30,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_WHISCASH"},{min_level:35,max_level:40,species:"SPECIES_WHISCASH"},{min_level:40,max_level:45,species:"SPECIES_WHISCASH"}]}},{map:"MAP_JAGGED_PASS",base_label:"gJaggedPass",land_mons:{encounter_rate:20,mons:[{min_level:21,max_level:21,species:"SPECIES_NUMEL"},{min_level:21,max_level:21,species:"SPECIES_NUMEL"},{min_level:21,max_level:21,species:"SPECIES_MACHOP"},{min_level:20,max_level:20,species:"SPECIES_NUMEL"},{min_level:20,max_level:20,species:"SPECIES_SPOINK"},{min_level:20,max_level:20,species:"SPECIES_MACHOP"},{min_level:21,max_level:21,species:"SPECIES_SPOINK"},{min_level:22,max_level:22,species:"SPECIES_MACHOP"},{min_level:22,max_level:22,species:"SPECIES_NUMEL"},{min_level:22,max_level:22,species:"SPECIES_SPOINK"},{min_level:22,max_level:22,species:"SPECIES_NUMEL"},{min_level:22,max_level:22,species:"SPECIES_SPOINK"}]}},{map:"MAP_ROUTE106",base_label:"gRoute106",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE107",base_label:"gRoute107",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE108",base_label:"gRoute108",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE109",base_label:"gRoute109",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE115",base_label:"gRoute115",land_mons:{encounter_rate:20,mons:[{min_level:23,max_level:23,species:"SPECIES_SWABLU"},{min_level:23,max_level:23,species:"SPECIES_TAILLOW"},{min_level:25,max_level:25,species:"SPECIES_SWABLU"},{min_level:24,max_level:24,species:"SPECIES_TAILLOW"},{min_level:25,max_level:25,species:"SPECIES_TAILLOW"},{min_level:25,max_level:25,species:"SPECIES_SWELLOW"},{min_level:24,max_level:24,species:"SPECIES_JIGGLYPUFF"},{min_level:25,max_level:25,species:"SPECIES_JIGGLYPUFF"},{min_level:24,max_level:24,species:"SPECIES_WINGULL"},{min_level:24,max_level:24,species:"SPECIES_WINGULL"},{min_level:26,max_level:26,species:"SPECIES_WINGULL"},{min_level:25,max_level:25,species:"SPECIES_WINGULL"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_NEW_MAUVILLE_INSIDE",base_label:"gNewMauville_Inside",land_mons:{encounter_rate:10,mons:[{min_level:24,max_level:24,species:"SPECIES_VOLTORB"},{min_level:24,max_level:24,species:"SPECIES_MAGNEMITE"},{min_level:25,max_level:25,species:"SPECIES_VOLTORB"},{min_level:25,max_level:25,species:"SPECIES_MAGNEMITE"},{min_level:23,max_level:23,species:"SPECIES_VOLTORB"},{min_level:23,max_level:23,species:"SPECIES_MAGNEMITE"},{min_level:26,max_level:26,species:"SPECIES_VOLTORB"},{min_level:26,max_level:26,species:"SPECIES_MAGNEMITE"},{min_level:22,max_level:22,species:"SPECIES_VOLTORB"},{min_level:22,max_level:22,species:"SPECIES_MAGNEMITE"},{min_level:26,max_level:26,species:"SPECIES_ELECTRODE"},{min_level:26,max_level:26,species:"SPECIES_MAGNETON"}]}},{map:"MAP_ROUTE119",base_label:"gRoute119",land_mons:{encounter_rate:15,mons:[{min_level:25,max_level:25,species:"SPECIES_ZIGZAGOON"},{min_level:25,max_level:25,species:"SPECIES_LINOONE"},{min_level:27,max_level:27,species:"SPECIES_ZIGZAGOON"},{min_level:25,max_level:25,species:"SPECIES_ODDISH"},{min_level:27,max_level:27,species:"SPECIES_LINOONE"},{min_level:26,max_level:26,species:"SPECIES_ODDISH"},{min_level:27,max_level:27,species:"SPECIES_ODDISH"},{min_level:24,max_level:24,species:"SPECIES_ODDISH"},{min_level:25,max_level:25,species:"SPECIES_TROPIUS"},{min_level:26,max_level:26,species:"SPECIES_TROPIUS"},{min_level:27,max_level:27,species:"SPECIES_TROPIUS"},{min_level:25,max_level:25,species:"SPECIES_KECLEON"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_CARVANHA"},{min_level:25,max_level:30,species:"SPECIES_CARVANHA"},{min_level:30,max_level:35,species:"SPECIES_CARVANHA"},{min_level:20,max_level:25,species:"SPECIES_CARVANHA"},{min_level:35,max_level:40,species:"SPECIES_CARVANHA"},{min_level:40,max_level:45,species:"SPECIES_CARVANHA"}]}},{map:"MAP_ROUTE120",base_label:"gRoute120",land_mons:{encounter_rate:20,mons:[{min_level:25,max_level:25,species:"SPECIES_POOCHYENA"},{min_level:25,max_level:25,species:"SPECIES_MIGHTYENA"},{min_level:27,max_level:27,species:"SPECIES_MIGHTYENA"},{min_level:25,max_level:25,species:"SPECIES_ODDISH"},{min_level:25,max_level:25,species:"SPECIES_MARILL"},{min_level:26,max_level:26,species:"SPECIES_ODDISH"},{min_level:27,max_level:27,species:"SPECIES_ODDISH"},{min_level:27,max_level:27,species:"SPECIES_MARILL"},{min_level:25,max_level:25,species:"SPECIES_ABSOL"},{min_level:27,max_level:27,species:"SPECIES_ABSOL"},{min_level:25,max_level:25,species:"SPECIES_KECLEON"},{min_level:25,max_level:25,species:"SPECIES_SEEDOT"}]},water_mons:{encounter_rate:4,mons:[{min_level:20,max_level:30,species:"SPECIES_MARILL"},{min_level:10,max_level:20,species:"SPECIES_MARILL"},{min_level:30,max_level:35,species:"SPECIES_MARILL"},{min_level:5,max_level:10,species:"SPECIES_MARILL"},{min_level:20,max_level:30,species:"SPECIES_GOLDEEN"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_BARBOACH"},{min_level:25,max_level:30,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_BARBOACH"},{min_level:20,max_level:25,species:"SPECIES_BARBOACH"},{min_level:35,max_level:40,species:"SPECIES_BARBOACH"},{min_level:40,max_level:45,species:"SPECIES_BARBOACH"}]}},{map:"MAP_ROUTE121",base_label:"gRoute121",land_mons:{encounter_rate:20,mons:[{min_level:26,max_level:26,species:"SPECIES_POOCHYENA"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_MIGHTYENA"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_MIGHTYENA"},{min_level:26,max_level:26,species:"SPECIES_ODDISH"},{min_level:28,max_level:28,species:"SPECIES_ODDISH"},{min_level:28,max_level:28,species:"SPECIES_GLOOM"},{min_level:26,max_level:26,species:"SPECIES_WINGULL"},{min_level:27,max_level:27,species:"SPECIES_WINGULL"},{min_level:28,max_level:28,species:"SPECIES_WINGULL"},{min_level:25,max_level:25,species:"SPECIES_KECLEON"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE122",base_label:"gRoute122",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE123",base_label:"gRoute123",land_mons:{encounter_rate:20,mons:[{min_level:26,max_level:26,species:"SPECIES_POOCHYENA"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_MIGHTYENA"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_MIGHTYENA"},{min_level:26,max_level:26,species:"SPECIES_ODDISH"},{min_level:28,max_level:28,species:"SPECIES_ODDISH"},{min_level:28,max_level:28,species:"SPECIES_GLOOM"},{min_level:26,max_level:26,species:"SPECIES_WINGULL"},{min_level:27,max_level:27,species:"SPECIES_WINGULL"},{min_level:28,max_level:28,species:"SPECIES_WINGULL"},{min_level:25,max_level:25,species:"SPECIES_KECLEON"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_MT_PYRE_2F",base_label:"gMtPyre_2F",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:25,max_level:25,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:23,max_level:23,species:"SPECIES_SHUPPET"},{min_level:22,max_level:22,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"}]}},{map:"MAP_MT_PYRE_3F",base_label:"gMtPyre_3F",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:25,max_level:25,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:23,max_level:23,species:"SPECIES_SHUPPET"},{min_level:22,max_level:22,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"}]}},{map:"MAP_MT_PYRE_4F",base_label:"gMtPyre_4F",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:25,max_level:25,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:23,max_level:23,species:"SPECIES_SHUPPET"},{min_level:22,max_level:22,species:"SPECIES_SHUPPET"},{min_level:27,max_level:27,species:"SPECIES_DUSKULL"},{min_level:27,max_level:27,species:"SPECIES_DUSKULL"},{min_level:25,max_level:25,species:"SPECIES_DUSKULL"},{min_level:29,max_level:29,species:"SPECIES_DUSKULL"}]}},{map:"MAP_MT_PYRE_5F",base_label:"gMtPyre_5F",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:25,max_level:25,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:23,max_level:23,species:"SPECIES_SHUPPET"},{min_level:22,max_level:22,species:"SPECIES_SHUPPET"},{min_level:27,max_level:27,species:"SPECIES_DUSKULL"},{min_level:27,max_level:27,species:"SPECIES_DUSKULL"},{min_level:25,max_level:25,species:"SPECIES_DUSKULL"},{min_level:29,max_level:29,species:"SPECIES_DUSKULL"}]}},{map:"MAP_MT_PYRE_6F",base_label:"gMtPyre_6F",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:25,max_level:25,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:23,max_level:23,species:"SPECIES_SHUPPET"},{min_level:22,max_level:22,species:"SPECIES_SHUPPET"},{min_level:27,max_level:27,species:"SPECIES_DUSKULL"},{min_level:27,max_level:27,species:"SPECIES_DUSKULL"},{min_level:25,max_level:25,species:"SPECIES_DUSKULL"},{min_level:29,max_level:29,species:"SPECIES_DUSKULL"}]}},{map:"MAP_MT_PYRE_EXTERIOR",base_label:"gMtPyre_Exterior",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_VULPIX"},{min_level:27,max_level:27,species:"SPECIES_VULPIX"},{min_level:29,max_level:29,species:"SPECIES_VULPIX"},{min_level:25,max_level:25,species:"SPECIES_VULPIX"},{min_level:27,max_level:27,species:"SPECIES_WINGULL"},{min_level:27,max_level:27,species:"SPECIES_WINGULL"},{min_level:26,max_level:26,species:"SPECIES_WINGULL"},{min_level:28,max_level:28,species:"SPECIES_WINGULL"}]}},{map:"MAP_MT_PYRE_SUMMIT",base_label:"gMtPyre_Summit",land_mons:{encounter_rate:10,mons:[{min_level:28,max_level:28,species:"SPECIES_SHUPPET"},{min_level:29,max_level:29,species:"SPECIES_SHUPPET"},{min_level:27,max_level:27,species:"SPECIES_SHUPPET"},{min_level:26,max_level:26,species:"SPECIES_SHUPPET"},{min_level:30,max_level:30,species:"SPECIES_SHUPPET"},{min_level:25,max_level:25,species:"SPECIES_SHUPPET"},{min_level:24,max_level:24,species:"SPECIES_SHUPPET"},{min_level:28,max_level:28,species:"SPECIES_DUSKULL"},{min_level:26,max_level:26,species:"SPECIES_DUSKULL"},{min_level:30,max_level:30,species:"SPECIES_DUSKULL"},{min_level:28,max_level:28,species:"SPECIES_CHIMECHO"},{min_level:28,max_level:28,species:"SPECIES_CHIMECHO"}]}},{map:"MAP_GRANITE_CAVE_STEVENS_ROOM",base_label:"gGraniteCave_StevensRoom",land_mons:{encounter_rate:10,mons:[{min_level:7,max_level:7,species:"SPECIES_ZUBAT"},{min_level:8,max_level:8,species:"SPECIES_MAKUHITA"},{min_level:7,max_level:7,species:"SPECIES_MAKUHITA"},{min_level:8,max_level:8,species:"SPECIES_ZUBAT"},{min_level:9,max_level:9,species:"SPECIES_MAKUHITA"},{min_level:8,max_level:8,species:"SPECIES_ABRA"},{min_level:10,max_level:10,species:"SPECIES_MAKUHITA"},{min_level:6,max_level:6,species:"SPECIES_MAKUHITA"},{min_level:7,max_level:7,species:"SPECIES_ARON"},{min_level:8,max_level:8,species:"SPECIES_ARON"},{min_level:7,max_level:7,species:"SPECIES_ARON"},{min_level:8,max_level:8,species:"SPECIES_ARON"}]}},{map:"MAP_ROUTE125",base_label:"gRoute125",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE126",base_label:"gRoute126",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE127",base_label:"gRoute127",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE128",base_label:"gRoute128",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_LUVDISC"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_LUVDISC"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_CORSOLA"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE129",base_label:"gRoute129",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_WAILORD"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE130",base_label:"gRoute130",land_mons:{encounter_rate:20,mons:[{min_level:30,max_level:30,species:"SPECIES_WYNAUT"},{min_level:35,max_level:35,species:"SPECIES_WYNAUT"},{min_level:25,max_level:25,species:"SPECIES_WYNAUT"},{min_level:40,max_level:40,species:"SPECIES_WYNAUT"},{min_level:20,max_level:20,species:"SPECIES_WYNAUT"},{min_level:45,max_level:45,species:"SPECIES_WYNAUT"},{min_level:15,max_level:15,species:"SPECIES_WYNAUT"},{min_level:50,max_level:50,species:"SPECIES_WYNAUT"},{min_level:10,max_level:10,species:"SPECIES_WYNAUT"},{min_level:5,max_level:5,species:"SPECIES_WYNAUT"},{min_level:10,max_level:10,species:"SPECIES_WYNAUT"},{min_level:5,max_level:5,species:"SPECIES_WYNAUT"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE131",base_label:"gRoute131",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE132",base_label:"gRoute132",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_HORSEA"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE133",base_label:"gRoute133",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_HORSEA"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ROUTE134",base_label:"gRoute134",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_HORSEA"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_ABANDONED_SHIP_HIDDEN_FLOOR_CORRIDORS",base_label:"gAbandonedShip_HiddenFloorCorridors",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:30,max_level:35,species:"SPECIES_TENTACRUEL"}]},fishing_mons:{encounter_rate:20,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:25,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:30,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:30,max_level:35,species:"SPECIES_TENTACRUEL"},{min_level:25,max_level:30,species:"SPECIES_TENTACRUEL"},{min_level:20,max_level:25,species:"SPECIES_TENTACRUEL"}]}},{map:"MAP_SEAFLOOR_CAVERN_ROOM1",base_label:"gSeafloorCavern_Room1",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_SEAFLOOR_CAVERN_ROOM2",base_label:"gSeafloorCavern_Room2",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_SEAFLOOR_CAVERN_ROOM3",base_label:"gSeafloorCavern_Room3",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_SEAFLOOR_CAVERN_ROOM4",base_label:"gSeafloorCavern_Room4",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_SEAFLOOR_CAVERN_ROOM5",base_label:"gSeafloorCavern_Room5",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_SEAFLOOR_CAVERN_ROOM6",base_label:"gSeafloorCavern_Room6",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_ZUBAT"},{min_level:30,max_level:35,species:"SPECIES_ZUBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_SEAFLOOR_CAVERN_ROOM7",base_label:"gSeafloorCavern_Room7",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_ZUBAT"},{min_level:30,max_level:35,species:"SPECIES_ZUBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_SEAFLOOR_CAVERN_ROOM8",base_label:"gSeafloorCavern_Room8",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_SEAFLOOR_CAVERN_ENTRANCE",base_label:"gSeafloorCavern_Entrance",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_ZUBAT"},{min_level:30,max_level:35,species:"SPECIES_ZUBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_CAVE_OF_ORIGIN_ENTRANCE",base_label:"gCaveOfOrigin_Entrance",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:29,max_level:29,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:35,max_level:35,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_CAVE_OF_ORIGIN_1F",base_label:"gCaveOfOrigin_1F",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SABLEYE"},{min_level:32,max_level:32,species:"SPECIES_SABLEYE"},{min_level:34,max_level:34,species:"SPECIES_SABLEYE"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP1",base_label:"gCaveOfOrigin_UnusedRubySapphireMap1",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SABLEYE"},{min_level:32,max_level:32,species:"SPECIES_SABLEYE"},{min_level:34,max_level:34,species:"SPECIES_SABLEYE"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP2",base_label:"gCaveOfOrigin_UnusedRubySapphireMap2",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SABLEYE"},{min_level:32,max_level:32,species:"SPECIES_SABLEYE"},{min_level:34,max_level:34,species:"SPECIES_SABLEYE"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP3",base_label:"gCaveOfOrigin_UnusedRubySapphireMap3",land_mons:{encounter_rate:4,mons:[{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:31,max_level:31,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SABLEYE"},{min_level:32,max_level:32,species:"SPECIES_SABLEYE"},{min_level:34,max_level:34,species:"SPECIES_SABLEYE"},{min_level:33,max_level:33,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_ZUBAT"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:36,max_level:36,species:"SPECIES_GOLBAT"}]}},{map:"MAP_NEW_MAUVILLE_ENTRANCE",base_label:"gNewMauville_Entrance",land_mons:{encounter_rate:10,mons:[{min_level:24,max_level:24,species:"SPECIES_VOLTORB"},{min_level:24,max_level:24,species:"SPECIES_MAGNEMITE"},{min_level:25,max_level:25,species:"SPECIES_VOLTORB"},{min_level:25,max_level:25,species:"SPECIES_MAGNEMITE"},{min_level:23,max_level:23,species:"SPECIES_VOLTORB"},{min_level:23,max_level:23,species:"SPECIES_MAGNEMITE"},{min_level:26,max_level:26,species:"SPECIES_VOLTORB"},{min_level:26,max_level:26,species:"SPECIES_MAGNEMITE"},{min_level:22,max_level:22,species:"SPECIES_VOLTORB"},{min_level:22,max_level:22,species:"SPECIES_MAGNEMITE"},{min_level:22,max_level:22,species:"SPECIES_VOLTORB"},{min_level:22,max_level:22,species:"SPECIES_MAGNEMITE"}]}},{map:"MAP_SAFARI_ZONE_SOUTHWEST",base_label:"gSafariZone_Southwest",land_mons:{encounter_rate:25,mons:[{min_level:25,max_level:25,species:"SPECIES_ODDISH"},{min_level:27,max_level:27,species:"SPECIES_ODDISH"},{min_level:25,max_level:25,species:"SPECIES_GIRAFARIG"},{min_level:27,max_level:27,species:"SPECIES_GIRAFARIG"},{min_level:25,max_level:25,species:"SPECIES_NATU"},{min_level:27,max_level:27,species:"SPECIES_DODUO"},{min_level:25,max_level:25,species:"SPECIES_GLOOM"},{min_level:27,max_level:27,species:"SPECIES_WOBBUFFET"},{min_level:25,max_level:25,species:"SPECIES_PIKACHU"},{min_level:27,max_level:27,species:"SPECIES_WOBBUFFET"},{min_level:27,max_level:27,species:"SPECIES_PIKACHU"},{min_level:29,max_level:29,species:"SPECIES_WOBBUFFET"}]},water_mons:{encounter_rate:9,mons:[{min_level:20,max_level:30,species:"SPECIES_PSYDUCK"},{min_level:20,max_level:30,species:"SPECIES_PSYDUCK"},{min_level:30,max_level:35,species:"SPECIES_PSYDUCK"},{min_level:30,max_level:35,species:"SPECIES_PSYDUCK"},{min_level:30,max_level:35,species:"SPECIES_PSYDUCK"}]},fishing_mons:{encounter_rate:35,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:25,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:25,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:30,max_level:35,species:"SPECIES_GOLDEEN"},{min_level:30,max_level:35,species:"SPECIES_SEAKING"},{min_level:35,max_level:40,species:"SPECIES_SEAKING"},{min_level:25,max_level:30,species:"SPECIES_SEAKING"}]}},{map:"MAP_SAFARI_ZONE_NORTH",base_label:"gSafariZone_North",land_mons:{encounter_rate:25,mons:[{min_level:27,max_level:27,species:"SPECIES_PHANPY"},{min_level:27,max_level:27,species:"SPECIES_ODDISH"},{min_level:29,max_level:29,species:"SPECIES_PHANPY"},{min_level:29,max_level:29,species:"SPECIES_ODDISH"},{min_level:27,max_level:27,species:"SPECIES_NATU"},{min_level:29,max_level:29,species:"SPECIES_GLOOM"},{min_level:31,max_level:31,species:"SPECIES_GLOOM"},{min_level:29,max_level:29,species:"SPECIES_NATU"},{min_level:29,max_level:29,species:"SPECIES_XATU"},{min_level:27,max_level:27,species:"SPECIES_HERACROSS"},{min_level:31,max_level:31,species:"SPECIES_XATU"},{min_level:29,max_level:29,species:"SPECIES_HERACROSS"}]},rock_smash_mons:{encounter_rate:25,mons:[{min_level:10,max_level:15,species:"SPECIES_GEODUDE"},{min_level:5,max_level:10,species:"SPECIES_GEODUDE"},{min_level:15,max_level:20,species:"SPECIES_GEODUDE"},{min_level:20,max_level:25,species:"SPECIES_GEODUDE"},{min_level:25,max_level:30,species:"SPECIES_GEODUDE"}]}},{map:"MAP_SAFARI_ZONE_NORTHWEST",base_label:"gSafariZone_Northwest",land_mons:{encounter_rate:25,mons:[{min_level:27,max_level:27,species:"SPECIES_RHYHORN"},{min_level:27,max_level:27,species:"SPECIES_ODDISH"},{min_level:29,max_level:29,species:"SPECIES_RHYHORN"},{min_level:29,max_level:29,species:"SPECIES_ODDISH"},{min_level:27,max_level:27,species:"SPECIES_DODUO"},{min_level:29,max_level:29,species:"SPECIES_GLOOM"},{min_level:31,max_level:31,species:"SPECIES_GLOOM"},{min_level:29,max_level:29,species:"SPECIES_DODUO"},{min_level:29,max_level:29,species:"SPECIES_DODRIO"},{min_level:27,max_level:27,species:"SPECIES_PINSIR"},{min_level:31,max_level:31,species:"SPECIES_DODRIO"},{min_level:29,max_level:29,species:"SPECIES_PINSIR"}]},water_mons:{encounter_rate:9,mons:[{min_level:20,max_level:30,species:"SPECIES_PSYDUCK"},{min_level:20,max_level:30,species:"SPECIES_PSYDUCK"},{min_level:30,max_level:35,species:"SPECIES_PSYDUCK"},{min_level:30,max_level:35,species:"SPECIES_GOLDUCK"},{min_level:25,max_level:40,species:"SPECIES_GOLDUCK"}]},fishing_mons:{encounter_rate:35,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:25,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:25,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:30,max_level:35,species:"SPECIES_GOLDEEN"},{min_level:30,max_level:35,species:"SPECIES_SEAKING"},{min_level:35,max_level:40,species:"SPECIES_SEAKING"},{min_level:25,max_level:30,species:"SPECIES_SEAKING"}]}},{map:"MAP_VICTORY_ROAD_B1F",base_label:"gVictoryRoad_B1F",land_mons:{encounter_rate:10,mons:[{min_level:40,max_level:40,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_HARIYAMA"},{min_level:40,max_level:40,species:"SPECIES_LAIRON"},{min_level:40,max_level:40,species:"SPECIES_LAIRON"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:38,max_level:38,species:"SPECIES_HARIYAMA"},{min_level:42,max_level:42,species:"SPECIES_GOLBAT"},{min_level:42,max_level:42,species:"SPECIES_HARIYAMA"},{min_level:42,max_level:42,species:"SPECIES_LAIRON"},{min_level:38,max_level:38,species:"SPECIES_MAWILE"},{min_level:42,max_level:42,species:"SPECIES_LAIRON"},{min_level:38,max_level:38,species:"SPECIES_MAWILE"}]},rock_smash_mons:{encounter_rate:20,mons:[{min_level:30,max_level:40,species:"SPECIES_GRAVELER"},{min_level:30,max_level:40,species:"SPECIES_GEODUDE"},{min_level:35,max_level:40,species:"SPECIES_GRAVELER"},{min_level:35,max_level:40,species:"SPECIES_GRAVELER"},{min_level:35,max_level:40,species:"SPECIES_GRAVELER"}]}},{map:"MAP_VICTORY_ROAD_B2F",base_label:"gVictoryRoad_B2F",land_mons:{encounter_rate:10,mons:[{min_level:40,max_level:40,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_SABLEYE"},{min_level:40,max_level:40,species:"SPECIES_LAIRON"},{min_level:40,max_level:40,species:"SPECIES_LAIRON"},{min_level:42,max_level:42,species:"SPECIES_GOLBAT"},{min_level:42,max_level:42,species:"SPECIES_SABLEYE"},{min_level:44,max_level:44,species:"SPECIES_GOLBAT"},{min_level:44,max_level:44,species:"SPECIES_SABLEYE"},{min_level:42,max_level:42,species:"SPECIES_LAIRON"},{min_level:42,max_level:42,species:"SPECIES_MAWILE"},{min_level:44,max_level:44,species:"SPECIES_LAIRON"},{min_level:44,max_level:44,species:"SPECIES_MAWILE"}]},water_mons:{encounter_rate:4,mons:[{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:25,max_level:30,species:"SPECIES_GOLBAT"},{min_level:35,max_level:40,species:"SPECIES_GOLBAT"},{min_level:35,max_level:40,species:"SPECIES_GOLBAT"},{min_level:35,max_level:40,species:"SPECIES_GOLBAT"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_BARBOACH"},{min_level:25,max_level:30,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_WHISCASH"},{min_level:35,max_level:40,species:"SPECIES_WHISCASH"},{min_level:40,max_level:45,species:"SPECIES_WHISCASH"}]}},{map:"MAP_METEOR_FALLS_1F_1R",base_label:"gMeteorFalls_1F_1R",land_mons:{encounter_rate:10,mons:[{min_level:16,max_level:16,species:"SPECIES_ZUBAT"},{min_level:17,max_level:17,species:"SPECIES_ZUBAT"},{min_level:18,max_level:18,species:"SPECIES_ZUBAT"},{min_level:15,max_level:15,species:"SPECIES_ZUBAT"},{min_level:14,max_level:14,species:"SPECIES_ZUBAT"},{min_level:16,max_level:16,species:"SPECIES_SOLROCK"},{min_level:18,max_level:18,species:"SPECIES_SOLROCK"},{min_level:14,max_level:14,species:"SPECIES_SOLROCK"},{min_level:19,max_level:19,species:"SPECIES_ZUBAT"},{min_level:20,max_level:20,species:"SPECIES_ZUBAT"},{min_level:19,max_level:19,species:"SPECIES_ZUBAT"},{min_level:20,max_level:20,species:"SPECIES_ZUBAT"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_ZUBAT"},{min_level:30,max_level:35,species:"SPECIES_ZUBAT"},{min_level:25,max_level:35,species:"SPECIES_SOLROCK"},{min_level:15,max_level:25,species:"SPECIES_SOLROCK"},{min_level:5,max_level:15,species:"SPECIES_SOLROCK"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_BARBOACH"},{min_level:25,max_level:30,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_BARBOACH"},{min_level:20,max_level:25,species:"SPECIES_BARBOACH"},{min_level:35,max_level:40,species:"SPECIES_BARBOACH"},{min_level:40,max_level:45,species:"SPECIES_BARBOACH"}]}},{map:"MAP_METEOR_FALLS_1F_2R",base_label:"gMeteorFalls_1F_2R",land_mons:{encounter_rate:10,mons:[{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_SOLROCK"},{min_level:33,max_level:33,species:"SPECIES_SOLROCK"},{min_level:37,max_level:37,species:"SPECIES_SOLROCK"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:39,max_level:39,species:"SPECIES_SOLROCK"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_GOLBAT"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_GOLBAT"}]},water_mons:{encounter_rate:4,mons:[{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:25,max_level:35,species:"SPECIES_SOLROCK"},{min_level:15,max_level:25,species:"SPECIES_SOLROCK"},{min_level:5,max_level:15,species:"SPECIES_SOLROCK"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_BARBOACH"},{min_level:25,max_level:30,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_WHISCASH"},{min_level:35,max_level:40,species:"SPECIES_WHISCASH"},{min_level:40,max_level:45,species:"SPECIES_WHISCASH"}]}},{map:"MAP_METEOR_FALLS_B1F_1R",base_label:"gMeteorFalls_B1F_1R",land_mons:{encounter_rate:10,mons:[{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_SOLROCK"},{min_level:33,max_level:33,species:"SPECIES_SOLROCK"},{min_level:37,max_level:37,species:"SPECIES_SOLROCK"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:39,max_level:39,species:"SPECIES_SOLROCK"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_GOLBAT"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_GOLBAT"}]},water_mons:{encounter_rate:4,mons:[{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:30,max_level:35,species:"SPECIES_GOLBAT"},{min_level:25,max_level:35,species:"SPECIES_SOLROCK"},{min_level:15,max_level:25,species:"SPECIES_SOLROCK"},{min_level:5,max_level:15,species:"SPECIES_SOLROCK"}]},fishing_mons:{encounter_rate:30,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_BARBOACH"},{min_level:25,max_level:30,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_BARBOACH"},{min_level:30,max_level:35,species:"SPECIES_WHISCASH"},{min_level:35,max_level:40,species:"SPECIES_WHISCASH"},{min_level:40,max_level:45,species:"SPECIES_WHISCASH"}]}},{map:"MAP_SHOAL_CAVE_LOW_TIDE_STAIRS_ROOM",base_label:"gShoalCave_LowTideStairsRoom",land_mons:{encounter_rate:10,mons:[{min_level:26,max_level:26,species:"SPECIES_ZUBAT"},{min_level:26,max_level:26,species:"SPECIES_SPHEAL"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_SPHEAL"},{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"}]}},{map:"MAP_SHOAL_CAVE_LOW_TIDE_LOWER_ROOM",base_label:"gShoalCave_LowTideLowerRoom",land_mons:{encounter_rate:10,mons:[{min_level:26,max_level:26,species:"SPECIES_ZUBAT"},{min_level:26,max_level:26,species:"SPECIES_SPHEAL"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_SPHEAL"},{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"}]}},{map:"MAP_SHOAL_CAVE_LOW_TIDE_INNER_ROOM",base_label:"gShoalCave_LowTideInnerRoom",land_mons:{encounter_rate:10,mons:[{min_level:26,max_level:26,species:"SPECIES_ZUBAT"},{min_level:26,max_level:26,species:"SPECIES_SPHEAL"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_SPHEAL"},{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_ZUBAT"},{min_level:25,max_level:30,species:"SPECIES_SPHEAL"},{min_level:25,max_level:30,species:"SPECIES_SPHEAL"},{min_level:25,max_level:35,species:"SPECIES_SPHEAL"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_SHOAL_CAVE_LOW_TIDE_ENTRANCE_ROOM",base_label:"gShoalCave_LowTideEntranceRoom",land_mons:{encounter_rate:10,mons:[{min_level:26,max_level:26,species:"SPECIES_ZUBAT"},{min_level:26,max_level:26,species:"SPECIES_SPHEAL"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_SPHEAL"},{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_ZUBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"}]},water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:5,max_level:35,species:"SPECIES_ZUBAT"},{min_level:25,max_level:30,species:"SPECIES_SPHEAL"},{min_level:25,max_level:30,species:"SPECIES_SPHEAL"},{min_level:25,max_level:35,species:"SPECIES_SPHEAL"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_LILYCOVE_CITY",base_label:"gLilycoveCity",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_STARYU"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_DEWFORD_TOWN",base_label:"gDewfordTown",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_SLATEPORT_CITY",base_label:"gSlateportCity",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:20,max_level:25,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_MOSSDEEP_CITY",base_label:"gMossdeepCity",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_PACIFIDLOG_TOWN",base_label:"gPacifidlogTown",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_SHARPEDO"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:25,max_level:30,species:"SPECIES_WAILMER"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_EVER_GRANDE_CITY",base_label:"gEverGrandeCity",water_mons:{encounter_rate:4,mons:[{min_level:5,max_level:35,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_WINGULL"},{min_level:15,max_level:25,species:"SPECIES_WINGULL"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"},{min_level:25,max_level:30,species:"SPECIES_PELIPPER"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_LUVDISC"},{min_level:10,max_level:30,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_LUVDISC"},{min_level:30,max_level:35,species:"SPECIES_WAILMER"},{min_level:30,max_level:35,species:"SPECIES_CORSOLA"},{min_level:35,max_level:40,species:"SPECIES_WAILMER"},{min_level:40,max_level:45,species:"SPECIES_WAILMER"}]}},{map:"MAP_PETALBURG_CITY",base_label:"gPetalburgCity",water_mons:{encounter_rate:1,mons:[{min_level:20,max_level:30,species:"SPECIES_MARILL"},{min_level:10,max_level:20,species:"SPECIES_MARILL"},{min_level:30,max_level:35,species:"SPECIES_MARILL"},{min_level:5,max_level:10,species:"SPECIES_MARILL"},{min_level:5,max_level:10,species:"SPECIES_MARILL"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:10,max_level:30,species:"SPECIES_CORPHISH"},{min_level:25,max_level:30,species:"SPECIES_CORPHISH"},{min_level:30,max_level:35,species:"SPECIES_CORPHISH"},{min_level:20,max_level:25,species:"SPECIES_CORPHISH"},{min_level:35,max_level:40,species:"SPECIES_CORPHISH"},{min_level:40,max_level:45,species:"SPECIES_CORPHISH"}]}},{map:"MAP_UNDERWATER_ROUTE124",base_label:"gUnderwater_Route124",water_mons:{encounter_rate:4,mons:[{min_level:20,max_level:30,species:"SPECIES_CLAMPERL"},{min_level:20,max_level:30,species:"SPECIES_CHINCHOU"},{min_level:30,max_level:35,species:"SPECIES_CLAMPERL"},{min_level:30,max_level:35,species:"SPECIES_RELICANTH"},{min_level:30,max_level:35,species:"SPECIES_RELICANTH"}]}},{map:"MAP_SHOAL_CAVE_LOW_TIDE_ICE_ROOM",base_label:"gShoalCave_LowTideIceRoom",land_mons:{encounter_rate:10,mons:[{min_level:26,max_level:26,species:"SPECIES_ZUBAT"},{min_level:26,max_level:26,species:"SPECIES_SPHEAL"},{min_level:28,max_level:28,species:"SPECIES_ZUBAT"},{min_level:28,max_level:28,species:"SPECIES_SPHEAL"},{min_level:30,max_level:30,species:"SPECIES_ZUBAT"},{min_level:30,max_level:30,species:"SPECIES_SPHEAL"},{min_level:26,max_level:26,species:"SPECIES_SNORUNT"},{min_level:32,max_level:32,species:"SPECIES_SPHEAL"},{min_level:30,max_level:30,species:"SPECIES_GOLBAT"},{min_level:28,max_level:28,species:"SPECIES_SNORUNT"},{min_level:32,max_level:32,species:"SPECIES_GOLBAT"},{min_level:30,max_level:30,species:"SPECIES_SNORUNT"}]}},{map:"MAP_SKY_PILLAR_1F",base_label:"gSkyPillar_1F",land_mons:{encounter_rate:10,mons:[{min_level:33,max_level:33,species:"SPECIES_SABLEYE"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:34,max_level:34,species:"SPECIES_SABLEYE"},{min_level:36,max_level:36,species:"SPECIES_CLAYDOL"},{min_level:37,max_level:37,species:"SPECIES_BANETTE"},{min_level:38,max_level:38,species:"SPECIES_BANETTE"},{min_level:36,max_level:36,species:"SPECIES_CLAYDOL"},{min_level:37,max_level:37,species:"SPECIES_CLAYDOL"},{min_level:38,max_level:38,species:"SPECIES_CLAYDOL"},{min_level:37,max_level:37,species:"SPECIES_CLAYDOL"},{min_level:38,max_level:38,species:"SPECIES_CLAYDOL"}]}},{map:"MAP_SOOTOPOLIS_CITY",base_label:"gSootopolisCity",water_mons:{encounter_rate:1,mons:[{min_level:5,max_level:35,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:15,max_level:25,species:"SPECIES_MAGIKARP"},{min_level:25,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:25,max_level:30,species:"SPECIES_MAGIKARP"}]},fishing_mons:{encounter_rate:10,mons:[{min_level:5,max_level:10,species:"SPECIES_MAGIKARP"},{min_level:5,max_level:10,species:"SPECIES_TENTACOOL"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:10,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:30,max_level:35,species:"SPECIES_MAGIKARP"},{min_level:30,max_level:35,species:"SPECIES_MAGIKARP"},{min_level:35,max_level:40,species:"SPECIES_GYARADOS"},{min_level:35,max_level:45,species:"SPECIES_GYARADOS"},{min_level:5,max_level:45,species:"SPECIES_GYARADOS"}]}},{map:"MAP_SKY_PILLAR_3F",base_label:"gSkyPillar_3F",land_mons:{encounter_rate:10,mons:[{min_level:33,max_level:33,species:"SPECIES_SABLEYE"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:34,max_level:34,species:"SPECIES_SABLEYE"},{min_level:36,max_level:36,species:"SPECIES_CLAYDOL"},{min_level:37,max_level:37,species:"SPECIES_BANETTE"},{min_level:38,max_level:38,species:"SPECIES_BANETTE"},{min_level:36,max_level:36,species:"SPECIES_CLAYDOL"},{min_level:37,max_level:37,species:"SPECIES_CLAYDOL"},{min_level:38,max_level:38,species:"SPECIES_CLAYDOL"},{min_level:37,max_level:37,species:"SPECIES_CLAYDOL"},{min_level:38,max_level:38,species:"SPECIES_CLAYDOL"}]}},{map:"MAP_SKY_PILLAR_5F",base_label:"gSkyPillar_5F",land_mons:{encounter_rate:10,mons:[{min_level:33,max_level:33,species:"SPECIES_SABLEYE"},{min_level:34,max_level:34,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:34,max_level:34,species:"SPECIES_SABLEYE"},{min_level:36,max_level:36,species:"SPECIES_CLAYDOL"},{min_level:37,max_level:37,species:"SPECIES_BANETTE"},{min_level:38,max_level:38,species:"SPECIES_BANETTE"},{min_level:36,max_level:36,species:"SPECIES_CLAYDOL"},{min_level:37,max_level:37,species:"SPECIES_CLAYDOL"},{min_level:38,max_level:38,species:"SPECIES_ALTARIA"},{min_level:39,max_level:39,species:"SPECIES_ALTARIA"},{min_level:39,max_level:39,species:"SPECIES_ALTARIA"}]}},{map:"MAP_SAFARI_ZONE_SOUTHEAST",base_label:"gSafariZone_Southeast",land_mons:{encounter_rate:25,mons:[{min_level:33,max_level:33,species:"SPECIES_SUNKERN"},{min_level:34,max_level:34,species:"SPECIES_MAREEP"},{min_level:35,max_level:35,species:"SPECIES_SUNKERN"},{min_level:36,max_level:36,species:"SPECIES_MAREEP"},{min_level:34,max_level:34,species:"SPECIES_AIPOM"},{min_level:33,max_level:33,species:"SPECIES_SPINARAK"},{min_level:35,max_level:35,species:"SPECIES_HOOTHOOT"},{min_level:34,max_level:34,species:"SPECIES_SNUBBULL"},{min_level:36,max_level:36,species:"SPECIES_STANTLER"},{min_level:37,max_level:37,species:"SPECIES_GLIGAR"},{min_level:39,max_level:39,species:"SPECIES_STANTLER"},{min_level:40,max_level:40,species:"SPECIES_GLIGAR"}]},water_mons:{encounter_rate:9,mons:[{min_level:25,max_level:30,species:"SPECIES_WOOPER"},{min_level:25,max_level:30,species:"SPECIES_MARILL"},{min_level:25,max_level:30,species:"SPECIES_MARILL"},{min_level:30,max_level:35,species:"SPECIES_MARILL"},{min_level:35,max_level:40,species:"SPECIES_QUAGSIRE"}]},fishing_mons:{encounter_rate:35,mons:[{min_level:25,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:25,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:25,max_level:30,species:"SPECIES_MAGIKARP"},{min_level:25,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:30,max_level:35,species:"SPECIES_REMORAID"},{min_level:25,max_level:30,species:"SPECIES_GOLDEEN"},{min_level:25,max_level:30,species:"SPECIES_REMORAID"},{min_level:30,max_level:35,species:"SPECIES_REMORAID"},{min_level:30,max_level:35,species:"SPECIES_REMORAID"},{min_level:35,max_level:40,species:"SPECIES_OCTILLERY"}]}},{map:"MAP_SAFARI_ZONE_NORTHEAST",base_label:"gSafariZone_Northeast",land_mons:{encounter_rate:25,mons:[{min_level:33,max_level:33,species:"SPECIES_AIPOM"},{min_level:34,max_level:34,species:"SPECIES_TEDDIURSA"},{min_level:35,max_level:35,species:"SPECIES_AIPOM"},{min_level:36,max_level:36,species:"SPECIES_TEDDIURSA"},{min_level:34,max_level:34,species:"SPECIES_SUNKERN"},{min_level:33,max_level:33,species:"SPECIES_LEDYBA"},{min_level:35,max_level:35,species:"SPECIES_HOOTHOOT"},{min_level:34,max_level:34,species:"SPECIES_PINECO"},{min_level:36,max_level:36,species:"SPECIES_HOUNDOUR"},{min_level:37,max_level:37,species:"SPECIES_MILTANK"},{min_level:39,max_level:39,species:"SPECIES_HOUNDOUR"},{min_level:40,max_level:40,species:"SPECIES_MILTANK"}]},rock_smash_mons:{encounter_rate:25,mons:[{min_level:25,max_level:30,species:"SPECIES_SHUCKLE"},{min_level:20,max_level:25,species:"SPECIES_SHUCKLE"},{min_level:30,max_level:35,species:"SPECIES_SHUCKLE"},{min_level:30,max_level:35,species:"SPECIES_SHUCKLE"},{min_level:35,max_level:40,species:"SPECIES_SHUCKLE"}]}},{map:"MAP_MAGMA_HIDEOUT_1F",base_label:"gMagmaHideout_1F",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_GEODUDE"},{min_level:28,max_level:28,species:"SPECIES_TORKOAL"},{min_level:28,max_level:28,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_TORKOAL"},{min_level:29,max_level:29,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:31,max_level:31,species:"SPECIES_GRAVELER"},{min_level:32,max_level:32,species:"SPECIES_GRAVELER"},{min_level:33,max_level:33,species:"SPECIES_GRAVELER"}]}},{map:"MAP_MAGMA_HIDEOUT_2F_1R",base_label:"gMagmaHideout_2F_1R",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_GEODUDE"},{min_level:28,max_level:28,species:"SPECIES_TORKOAL"},{min_level:28,max_level:28,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_TORKOAL"},{min_level:29,max_level:29,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:31,max_level:31,species:"SPECIES_GRAVELER"},{min_level:32,max_level:32,species:"SPECIES_GRAVELER"},{min_level:33,max_level:33,species:"SPECIES_GRAVELER"}]}},{map:"MAP_MAGMA_HIDEOUT_2F_2R",base_label:"gMagmaHideout_2F_2R",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_GEODUDE"},{min_level:28,max_level:28,species:"SPECIES_TORKOAL"},{min_level:28,max_level:28,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_TORKOAL"},{min_level:29,max_level:29,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:31,max_level:31,species:"SPECIES_GRAVELER"},{min_level:32,max_level:32,species:"SPECIES_GRAVELER"},{min_level:33,max_level:33,species:"SPECIES_GRAVELER"}]}},{map:"MAP_MAGMA_HIDEOUT_3F_1R",base_label:"gMagmaHideout_3F_1R",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_GEODUDE"},{min_level:28,max_level:28,species:"SPECIES_TORKOAL"},{min_level:28,max_level:28,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_TORKOAL"},{min_level:29,max_level:29,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:31,max_level:31,species:"SPECIES_GRAVELER"},{min_level:32,max_level:32,species:"SPECIES_GRAVELER"},{min_level:33,max_level:33,species:"SPECIES_GRAVELER"}]}},{map:"MAP_MAGMA_HIDEOUT_3F_2R",base_label:"gMagmaHideout_3F_2R",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_GEODUDE"},{min_level:28,max_level:28,species:"SPECIES_TORKOAL"},{min_level:28,max_level:28,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_TORKOAL"},{min_level:29,max_level:29,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:31,max_level:31,species:"SPECIES_GRAVELER"},{min_level:32,max_level:32,species:"SPECIES_GRAVELER"},{min_level:33,max_level:33,species:"SPECIES_GRAVELER"}]}},{map:"MAP_MAGMA_HIDEOUT_4F",base_label:"gMagmaHideout_4F",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_GEODUDE"},{min_level:28,max_level:28,species:"SPECIES_TORKOAL"},{min_level:28,max_level:28,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_TORKOAL"},{min_level:29,max_level:29,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:31,max_level:31,species:"SPECIES_GRAVELER"},{min_level:32,max_level:32,species:"SPECIES_GRAVELER"},{min_level:33,max_level:33,species:"SPECIES_GRAVELER"}]}},{map:"MAP_MAGMA_HIDEOUT_3F_3R",base_label:"gMagmaHideout_3F_3R",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_GEODUDE"},{min_level:28,max_level:28,species:"SPECIES_TORKOAL"},{min_level:28,max_level:28,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_TORKOAL"},{min_level:29,max_level:29,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:31,max_level:31,species:"SPECIES_GRAVELER"},{min_level:32,max_level:32,species:"SPECIES_GRAVELER"},{min_level:33,max_level:33,species:"SPECIES_GRAVELER"}]}},{map:"MAP_MAGMA_HIDEOUT_2F_3R",base_label:"gMagmaHideout_2F_3R",land_mons:{encounter_rate:10,mons:[{min_level:27,max_level:27,species:"SPECIES_GEODUDE"},{min_level:28,max_level:28,species:"SPECIES_TORKOAL"},{min_level:28,max_level:28,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_TORKOAL"},{min_level:29,max_level:29,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GEODUDE"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:30,max_level:30,species:"SPECIES_GRAVELER"},{min_level:31,max_level:31,species:"SPECIES_GRAVELER"},{min_level:32,max_level:32,species:"SPECIES_GRAVELER"},{min_level:33,max_level:33,species:"SPECIES_GRAVELER"}]}},{map:"MAP_MIRAGE_TOWER_1F",base_label:"gMirageTower_1F",land_mons:{encounter_rate:10,mons:[{min_level:21,max_level:21,species:"SPECIES_SANDSHREW"},{min_level:21,max_level:21,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:22,max_level:22,species:"SPECIES_SANDSHREW"},{min_level:22,max_level:22,species:"SPECIES_TRAPINCH"},{min_level:23,max_level:23,species:"SPECIES_SANDSHREW"},{min_level:23,max_level:23,species:"SPECIES_TRAPINCH"},{min_level:24,max_level:24,species:"SPECIES_SANDSHREW"},{min_level:24,max_level:24,species:"SPECIES_TRAPINCH"}]}},{map:"MAP_MIRAGE_TOWER_2F",base_label:"gMirageTower_2F",land_mons:{encounter_rate:10,mons:[{min_level:21,max_level:21,species:"SPECIES_SANDSHREW"},{min_level:21,max_level:21,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:22,max_level:22,species:"SPECIES_SANDSHREW"},{min_level:22,max_level:22,species:"SPECIES_TRAPINCH"},{min_level:23,max_level:23,species:"SPECIES_SANDSHREW"},{min_level:23,max_level:23,species:"SPECIES_TRAPINCH"},{min_level:24,max_level:24,species:"SPECIES_SANDSHREW"},{min_level:24,max_level:24,species:"SPECIES_TRAPINCH"}]}},{map:"MAP_MIRAGE_TOWER_3F",base_label:"gMirageTower_3F",land_mons:{encounter_rate:10,mons:[{min_level:21,max_level:21,species:"SPECIES_SANDSHREW"},{min_level:21,max_level:21,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:22,max_level:22,species:"SPECIES_SANDSHREW"},{min_level:22,max_level:22,species:"SPECIES_TRAPINCH"},{min_level:23,max_level:23,species:"SPECIES_SANDSHREW"},{min_level:23,max_level:23,species:"SPECIES_TRAPINCH"},{min_level:24,max_level:24,species:"SPECIES_SANDSHREW"},{min_level:24,max_level:24,species:"SPECIES_TRAPINCH"}]}},{map:"MAP_MIRAGE_TOWER_4F",base_label:"gMirageTower_4F",land_mons:{encounter_rate:10,mons:[{min_level:21,max_level:21,species:"SPECIES_SANDSHREW"},{min_level:21,max_level:21,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:20,max_level:20,species:"SPECIES_SANDSHREW"},{min_level:20,max_level:20,species:"SPECIES_TRAPINCH"},{min_level:22,max_level:22,species:"SPECIES_SANDSHREW"},{min_level:22,max_level:22,species:"SPECIES_TRAPINCH"},{min_level:23,max_level:23,species:"SPECIES_SANDSHREW"},{min_level:23,max_level:23,species:"SPECIES_TRAPINCH"},{min_level:24,max_level:24,species:"SPECIES_SANDSHREW"},{min_level:24,max_level:24,species:"SPECIES_TRAPINCH"}]}},{map:"MAP_DESERT_UNDERPASS",base_label:"gDesertUnderpass",land_mons:{encounter_rate:10,mons:[{min_level:38,max_level:38,species:"SPECIES_DITTO"},{min_level:35,max_level:35,species:"SPECIES_WHISMUR"},{min_level:40,max_level:40,species:"SPECIES_DITTO"},{min_level:40,max_level:40,species:"SPECIES_LOUDRED"},{min_level:41,max_level:41,species:"SPECIES_DITTO"},{min_level:36,max_level:36,species:"SPECIES_WHISMUR"},{min_level:38,max_level:38,species:"SPECIES_LOUDRED"},{min_level:42,max_level:42,species:"SPECIES_DITTO"},{min_level:38,max_level:38,species:"SPECIES_WHISMUR"},{min_level:43,max_level:43,species:"SPECIES_DITTO"},{min_level:44,max_level:44,species:"SPECIES_LOUDRED"},{min_level:45,max_level:45,species:"SPECIES_DITTO"}]}},{map:"MAP_ARTISAN_CAVE_B1F",base_label:"gArtisanCave_B1F",land_mons:{encounter_rate:10,mons:[{min_level:40,max_level:40,species:"SPECIES_SMEARGLE"},{min_level:41,max_level:41,species:"SPECIES_SMEARGLE"},{min_level:42,max_level:42,species:"SPECIES_SMEARGLE"},{min_level:43,max_level:43,species:"SPECIES_SMEARGLE"},{min_level:44,max_level:44,species:"SPECIES_SMEARGLE"},{min_level:45,max_level:45,species:"SPECIES_SMEARGLE"},{min_level:46,max_level:46,species:"SPECIES_SMEARGLE"},{min_level:47,max_level:47,species:"SPECIES_SMEARGLE"},{min_level:48,max_level:48,species:"SPECIES_SMEARGLE"},{min_level:49,max_level:49,species:"SPECIES_SMEARGLE"},{min_level:50,max_level:50,species:"SPECIES_SMEARGLE"},{min_level:50,max_level:50,species:"SPECIES_SMEARGLE"}]}},{map:"MAP_ARTISAN_CAVE_1F",base_label:"gArtisanCave_1F",land_mons:{encounter_rate:10,mons:[{min_level:40,max_level:40,species:"SPECIES_SMEARGLE"},{min_level:41,max_level:41,species:"SPECIES_SMEARGLE"},{min_level:42,max_level:42,species:"SPECIES_SMEARGLE"},{min_level:43,max_level:43,species:"SPECIES_SMEARGLE"},{min_level:44,max_level:44,species:"SPECIES_SMEARGLE"},{min_level:45,max_level:45,species:"SPECIES_SMEARGLE"},{min_level:46,max_level:46,species:"SPECIES_SMEARGLE"},{min_level:47,max_level:47,species:"SPECIES_SMEARGLE"},{min_level:48,max_level:48,species:"SPECIES_SMEARGLE"},{min_level:49,max_level:49,species:"SPECIES_SMEARGLE"},{min_level:50,max_level:50,species:"SPECIES_SMEARGLE"},{min_level:50,max_level:50,species:"SPECIES_SMEARGLE"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave1",land_mons:{encounter_rate:7,mons:[{min_level:10,max_level:10,species:"SPECIES_ZUBAT"},{min_level:12,max_level:12,species:"SPECIES_ZUBAT"},{min_level:8,max_level:8,species:"SPECIES_ZUBAT"},{min_level:14,max_level:14,species:"SPECIES_ZUBAT"},{min_level:10,max_level:10,species:"SPECIES_ZUBAT"},{min_level:12,max_level:12,species:"SPECIES_ZUBAT"},{min_level:16,max_level:16,species:"SPECIES_ZUBAT"},{min_level:6,max_level:6,species:"SPECIES_ZUBAT"},{min_level:8,max_level:8,species:"SPECIES_ZUBAT"},{min_level:14,max_level:14,species:"SPECIES_ZUBAT"},{min_level:8,max_level:8,species:"SPECIES_ZUBAT"},{min_level:14,max_level:14,species:"SPECIES_ZUBAT"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave2",land_mons:{encounter_rate:7,mons:[{min_level:7,max_level:7,species:"SPECIES_MAREEP"},{min_level:9,max_level:9,species:"SPECIES_MAREEP"},{min_level:5,max_level:5,species:"SPECIES_MAREEP"},{min_level:11,max_level:11,species:"SPECIES_MAREEP"},{min_level:7,max_level:7,species:"SPECIES_MAREEP"},{min_level:9,max_level:9,species:"SPECIES_MAREEP"},{min_level:13,max_level:13,species:"SPECIES_MAREEP"},{min_level:3,max_level:3,species:"SPECIES_MAREEP"},{min_level:5,max_level:5,species:"SPECIES_MAREEP"},{min_level:11,max_level:11,species:"SPECIES_MAREEP"},{min_level:5,max_level:5,species:"SPECIES_MAREEP"},{min_level:11,max_level:11,species:"SPECIES_MAREEP"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave3",land_mons:{encounter_rate:7,mons:[{min_level:23,max_level:23,species:"SPECIES_PINECO"},{min_level:25,max_level:25,species:"SPECIES_PINECO"},{min_level:22,max_level:22,species:"SPECIES_PINECO"},{min_level:27,max_level:27,species:"SPECIES_PINECO"},{min_level:23,max_level:23,species:"SPECIES_PINECO"},{min_level:25,max_level:25,species:"SPECIES_PINECO"},{min_level:29,max_level:29,species:"SPECIES_PINECO"},{min_level:19,max_level:19,species:"SPECIES_PINECO"},{min_level:21,max_level:21,species:"SPECIES_PINECO"},{min_level:27,max_level:27,species:"SPECIES_PINECO"},{min_level:21,max_level:21,species:"SPECIES_PINECO"},{min_level:27,max_level:27,species:"SPECIES_PINECO"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave4",land_mons:{encounter_rate:7,mons:[{min_level:16,max_level:16,species:"SPECIES_HOUNDOUR"},{min_level:18,max_level:18,species:"SPECIES_HOUNDOUR"},{min_level:14,max_level:14,species:"SPECIES_HOUNDOUR"},{min_level:20,max_level:20,species:"SPECIES_HOUNDOUR"},{min_level:16,max_level:16,species:"SPECIES_HOUNDOUR"},{min_level:18,max_level:18,species:"SPECIES_HOUNDOUR"},{min_level:22,max_level:22,species:"SPECIES_HOUNDOUR"},{min_level:12,max_level:12,species:"SPECIES_HOUNDOUR"},{min_level:14,max_level:14,species:"SPECIES_HOUNDOUR"},{min_level:20,max_level:20,species:"SPECIES_HOUNDOUR"},{min_level:14,max_level:14,species:"SPECIES_HOUNDOUR"},{min_level:20,max_level:20,species:"SPECIES_HOUNDOUR"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave5",land_mons:{encounter_rate:7,mons:[{min_level:10,max_level:10,species:"SPECIES_TEDDIURSA"},{min_level:12,max_level:12,species:"SPECIES_TEDDIURSA"},{min_level:8,max_level:8,species:"SPECIES_TEDDIURSA"},{min_level:14,max_level:14,species:"SPECIES_TEDDIURSA"},{min_level:10,max_level:10,species:"SPECIES_TEDDIURSA"},{min_level:12,max_level:12,species:"SPECIES_TEDDIURSA"},{min_level:16,max_level:16,species:"SPECIES_TEDDIURSA"},{min_level:6,max_level:6,species:"SPECIES_TEDDIURSA"},{min_level:8,max_level:8,species:"SPECIES_TEDDIURSA"},{min_level:14,max_level:14,species:"SPECIES_TEDDIURSA"},{min_level:8,max_level:8,species:"SPECIES_TEDDIURSA"},{min_level:14,max_level:14,species:"SPECIES_TEDDIURSA"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave6",land_mons:{encounter_rate:7,mons:[{min_level:22,max_level:22,species:"SPECIES_AIPOM"},{min_level:24,max_level:24,species:"SPECIES_AIPOM"},{min_level:20,max_level:20,species:"SPECIES_AIPOM"},{min_level:26,max_level:26,species:"SPECIES_AIPOM"},{min_level:22,max_level:22,species:"SPECIES_AIPOM"},{min_level:24,max_level:24,species:"SPECIES_AIPOM"},{min_level:28,max_level:28,species:"SPECIES_AIPOM"},{min_level:18,max_level:18,species:"SPECIES_AIPOM"},{min_level:20,max_level:20,species:"SPECIES_AIPOM"},{min_level:26,max_level:26,species:"SPECIES_AIPOM"},{min_level:20,max_level:20,species:"SPECIES_AIPOM"},{min_level:26,max_level:26,species:"SPECIES_AIPOM"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave7",land_mons:{encounter_rate:7,mons:[{min_level:22,max_level:22,species:"SPECIES_SHUCKLE"},{min_level:24,max_level:24,species:"SPECIES_SHUCKLE"},{min_level:20,max_level:20,species:"SPECIES_SHUCKLE"},{min_level:26,max_level:26,species:"SPECIES_SHUCKLE"},{min_level:22,max_level:22,species:"SPECIES_SHUCKLE"},{min_level:24,max_level:24,species:"SPECIES_SHUCKLE"},{min_level:28,max_level:28,species:"SPECIES_SHUCKLE"},{min_level:18,max_level:18,species:"SPECIES_SHUCKLE"},{min_level:20,max_level:20,species:"SPECIES_SHUCKLE"},{min_level:26,max_level:26,species:"SPECIES_SHUCKLE"},{min_level:20,max_level:20,species:"SPECIES_SHUCKLE"},{min_level:26,max_level:26,species:"SPECIES_SHUCKLE"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave8",land_mons:{encounter_rate:7,mons:[{min_level:22,max_level:22,species:"SPECIES_STANTLER"},{min_level:24,max_level:24,species:"SPECIES_STANTLER"},{min_level:20,max_level:20,species:"SPECIES_STANTLER"},{min_level:26,max_level:26,species:"SPECIES_STANTLER"},{min_level:22,max_level:22,species:"SPECIES_STANTLER"},{min_level:24,max_level:24,species:"SPECIES_STANTLER"},{min_level:28,max_level:28,species:"SPECIES_STANTLER"},{min_level:18,max_level:18,species:"SPECIES_STANTLER"},{min_level:20,max_level:20,species:"SPECIES_STANTLER"},{min_level:26,max_level:26,species:"SPECIES_STANTLER"},{min_level:20,max_level:20,species:"SPECIES_STANTLER"},{min_level:26,max_level:26,species:"SPECIES_STANTLER"}]}},{map:"MAP_ALTERING_CAVE",base_label:"gAlteringCave9",land_mons:{encounter_rate:7,mons:[{min_level:22,max_level:22,species:"SPECIES_SMEARGLE"},{min_level:24,max_level:24,species:"SPECIES_SMEARGLE"},{min_level:20,max_level:20,species:"SPECIES_SMEARGLE"},{min_level:26,max_level:26,species:"SPECIES_SMEARGLE"},{min_level:22,max_level:22,species:"SPECIES_SMEARGLE"},{min_level:24,max_level:24,species:"SPECIES_SMEARGLE"},{min_level:28,max_level:28,species:"SPECIES_SMEARGLE"},{min_level:18,max_level:18,species:"SPECIES_SMEARGLE"},{min_level:20,max_level:20,species:"SPECIES_SMEARGLE"},{min_level:26,max_level:26,species:"SPECIES_SMEARGLE"},{min_level:20,max_level:20,species:"SPECIES_SMEARGLE"},{min_level:26,max_level:26,species:"SPECIES_SMEARGLE"}]}},{map:"MAP_METEOR_FALLS_STEVENS_CAVE",base_label:"gMeteorFalls_StevensCave",land_mons:{encounter_rate:10,mons:[{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:33,max_level:33,species:"SPECIES_GOLBAT"},{min_level:35,max_level:35,species:"SPECIES_SOLROCK"},{min_level:33,max_level:33,species:"SPECIES_SOLROCK"},{min_level:37,max_level:37,species:"SPECIES_SOLROCK"},{min_level:35,max_level:35,species:"SPECIES_GOLBAT"},{min_level:39,max_level:39,species:"SPECIES_SOLROCK"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_GOLBAT"},{min_level:38,max_level:38,species:"SPECIES_GOLBAT"},{min_level:40,max_level:40,species:"SPECIES_GOLBAT"}]}}]},{label:"gBattlePyramidWildMonHeaders",for_maps:!1,encounters:[{base_label:"gBattlePyramid_1",land_mons:{encounter_rate:4,mons:[{min_level:5,max_level:5,species:"SPECIES_BULBASAUR"},{min_level:5,max_level:5,species:"SPECIES_BULBASAUR"},{min_level:5,max_level:5,species:"SPECIES_BULBASAUR"},{min_level:5,max_level:5,species:"SPECIES_BULBASAUR"},{min_level:5,max_level:5,species:"SPECIES_IVYSAUR"},{min_level:5,max_level:5,species:"SPECIES_IVYSAUR"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"}]}},{base_label:"gBattlePyramid_2",land_mons:{encounter_rate:4,mons:[{min_level:5,max_level:5,species:"SPECIES_IVYSAUR"},{min_level:5,max_level:5,species:"SPECIES_IVYSAUR"},{min_level:5,max_level:5,species:"SPECIES_IVYSAUR"},{min_level:5,max_level:5,species:"SPECIES_IVYSAUR"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"}]}},{base_label:"gBattlePyramid_3",land_mons:{encounter_rate:4,mons:[{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_VENUSAUR"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"}]}},{base_label:"gBattlePyramid_4",land_mons:{encounter_rate:4,mons:[{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMANDER"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"}]}},{base_label:"gBattlePyramid_5",land_mons:{encounter_rate:4,mons:[{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"}]}},{base_label:"gBattlePyramid_6",land_mons:{encounter_rate:4,mons:[{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"}]}},{base_label:"gBattlePyramid_7",land_mons:{encounter_rate:8,mons:[{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"},{min_level:5,max_level:5,species:"SPECIES_WARTORTLE"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_SQUIRTLE"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARIZARD"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"},{min_level:5,max_level:5,species:"SPECIES_CHARMELEON"}]}}]},{label:"gBattlePikeWildMonHeaders",for_maps:!1,encounters:[{base_label:"gBattlePike_1",land_mons:{encounter_rate:10,mons:[{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"},{min_level:5,max_level:5,species:"SPECIES_DUSCLOPS"},{min_level:5,max_level:5,species:"SPECIES_DUSCLOPS"},{min_level:5,max_level:5,species:"SPECIES_DUSCLOPS"},{min_level:5,max_level:5,species:"SPECIES_DUSCLOPS"},{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"},{min_level:5,max_level:5,species:"SPECIES_DUSCLOPS"},{min_level:5,max_level:5,species:"SPECIES_DUSCLOPS"},{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"}]}},{base_label:"gBattlePike_2",land_mons:{encounter_rate:10,mons:[{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"},{min_level:5,max_level:5,species:"SPECIES_ELECTRODE"},{min_level:5,max_level:5,species:"SPECIES_ELECTRODE"},{min_level:5,max_level:5,species:"SPECIES_ELECTRODE"},{min_level:5,max_level:5,species:"SPECIES_ELECTRODE"},{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"},{min_level:5,max_level:5,species:"SPECIES_ELECTRODE"},{min_level:5,max_level:5,species:"SPECIES_ELECTRODE"},{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"}]}},{base_label:"gBattlePike_3",land_mons:{encounter_rate:10,mons:[{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"},{min_level:5,max_level:5,species:"SPECIES_BRELOOM"},{min_level:5,max_level:5,species:"SPECIES_BRELOOM"},{min_level:5,max_level:5,species:"SPECIES_BRELOOM"},{min_level:5,max_level:5,species:"SPECIES_BRELOOM"},{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"},{min_level:5,max_level:5,species:"SPECIES_BRELOOM"},{min_level:5,max_level:5,species:"SPECIES_BRELOOM"},{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"}]}},{base_label:"gBattlePike_4",land_mons:{encounter_rate:10,mons:[{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"},{min_level:5,max_level:5,species:"SPECIES_WOBBUFFET"},{min_level:5,max_level:5,species:"SPECIES_WOBBUFFET"},{min_level:5,max_level:5,species:"SPECIES_WOBBUFFET"},{min_level:5,max_level:5,species:"SPECIES_WOBBUFFET"},{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"},{min_level:5,max_level:5,species:"SPECIES_WOBBUFFET"},{min_level:5,max_level:5,species:"SPECIES_WOBBUFFET"},{min_level:5,max_level:5,species:"SPECIES_SEVIPER"},{min_level:5,max_level:5,species:"SPECIES_MILOTIC"}]}}]}]},N={roamers:[{id:"ActiveInMapLatios",maps:["MAP_ROUTE110","MAP_ROUTE111","MAP_ROUTE117","MAP_ROUTE118","MAP_ROUTE134","MAP_ROUTE119","MAP_ROUTE123","MAP_ROUTE120","MAP_ROUTE121","MAP_ROUTE122","MAP_ROUTE124","MAP_ROUTE125","MAP_ROUTE126","MAP_ROUTE127","MAP_ROUTE128","MAP_ROUTE129","MAP_ROUTE130","MAP_ROUTE131","MAP_ROUTE132","MAP_ROUTE133"],mon:{min_level:40,max_level:40,species:"Latios"}},{id:"ActiveInMapLatias",maps:["MAP_ROUTE110","MAP_ROUTE111","MAP_ROUTE117","MAP_ROUTE118","MAP_ROUTE134","MAP_ROUTE119","MAP_ROUTE123","MAP_ROUTE120","MAP_ROUTE121","MAP_ROUTE122","MAP_ROUTE124","MAP_ROUTE125","MAP_ROUTE126","MAP_ROUTE127","MAP_ROUTE128","MAP_ROUTE129","MAP_ROUTE130","MAP_ROUTE131","MAP_ROUTE132","MAP_ROUTE133"],mon:{min_level:40,max_level:40,species:"Latias"}}],mass_outbreaks:[{id:"Route102Seedot",maps:["MAP_ROUTE102"],mon:{min_level:3,max_level:3,species:"Seedot"}},{id:"Route114Nuzleaf",maps:["MAP_ROUTE114"],mon:{min_level:15,max_level:15,species:"Nuzleaf"}},{id:"Route117Seedot",maps:["MAP_ROUTE117"],mon:{min_level:13,max_level:13,species:"Seedot"}},{id:"Route120Seedot",maps:["MAP_ROUTE120"],mon:{min_level:25,max_level:25,species:"Seedot"}},{id:"Route116SkittyLvl8",maps:["MAP_ROUTE116"],mon:{min_level:8,max_level:8,species:"Skitty"}},{id:"Route116SkittyLvl15",maps:["MAP_ROUTE116"],mon:{min_level:15,max_level:15,species:"Skitty"}},{id:"Route102Surkit",maps:["MAP_ROUTE102"],mon:{min_level:3,max_level:3,species:"Surskit"}},{id:"Route114Surkit",maps:["MAP_ROUTE114"],mon:{min_level:15,max_level:15,species:"Surskit"}},{id:"Route117Surkit",maps:["MAP_ROUTE117"],mon:{min_level:15,max_level:15,species:"Surskit"}},{id:"Route120Surkit",maps:["MAP_ROUTE120"],mon:{min_level:28,max_level:28,species:"Surskit"}}],feebas:{maps:["MAP_ROUTE119"],mon:{min_level:20,max_level:25,species:"Feebas"}}},y=_=>{const a=$m(_.species);return{min_level:_.min_level,max_level:_.max_level,species:a,gender_ratio:Rr[a],is_electric_type:ie(3,a,"Electric"),is_steel_type:ie(3,a,"Steel")}},bm=_=>_==null||_.length===0?[]:_.map(a=>y(a)),ne=_=>_.toLowerCase().replace("species_","").replace(/[^a-z0-9]/g,""),$m=(()=>{const _=new Map;return Lr.forEach(a=>{_.set(ne(a),a)}),a=>{const t=_.get(ne(a));if(t===void 0)throw new Error(`Unknown species: ${a}`);return t}})(),ae=_=>dm(_).sort((a,t)=>a.localeCompare(t)),Um=["MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP1","MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP2","MAP_CAVE_OF_ORIGIN_UNUSED_RUBY_SAPPHIRE_MAP3"],Tm=()=>{const _=ee.enum(Am),a=ee.enum(Rm);return Lm.wild_encounter_groups.flatMap(t=>t.encounters.flatMap(n=>{var C,A,f,d,R,u;if(!("map"in n))return[];if(n.map==="MAP_ALTERING_CAVE"&&n.base_label!=="gAlteringCave1")return[];if(Um.includes(n.map))return[];const e=[],l=(x,o)=>{e[ml.indexOf(x)]=bm(o)};l("SweetScentLand",(C=n.land_mons)==null?void 0:C.mons),l("SweetScentWater",(A=n.water_mons)==null?void 0:A.mons),l("OldRod",(f=n.fishing_mons)==null?void 0:f.mons.slice(0,2)),l("GoodRod",(d=n.fishing_mons)==null?void 0:d.mons.slice(2,5)),l("SuperRod",(R=n.fishing_mons)==null?void 0:R.mons.slice(5,10)),l("RockSmash",(u=n.rock_smash_mons)==null?void 0:u.mons);const i=N.roamers.filter(x=>x.maps.includes(n.map)).map(x=>({id:_.parse(x.id),encounter_data:y(x.mon)})),m=N.mass_outbreaks.filter(x=>x.maps.includes(n.map)).map(x=>({id:a.parse(x.id),encounter_data:y(x.mon)})),S=N.feebas.maps.includes(n.map)?y(N.feebas.mon):null;return[{map_id:n.map,slots_by_action:e,roamers:i,mass_outbreaks:m,feebas:S}]}))},Nm=(_,a)=>{const t=new Map(a.map(n=>[n,[]]));return _.forEach(n=>{n.slots_by_action.forEach((e,l)=>{const i=ml[l],m=(i==="SweetScentLand"||i==="SweetScentWater")&&n.roamers.length>0?["Inactive","ActiveNotInMap",...n.roamers.map(A=>A.id)]:["Inactive"],S=i==="SweetScentLand"&&n.mass_outbreaks.length>0?["Inactive","ActiveNotInMap",...n.mass_outbreaks.map(A=>A.id)]:["Inactive"],C=(i==="OldRod"||i==="GoodRod"||i==="SuperRod")&&n.feebas!=null?["OnFeebasTile","InMapButNotOnFeebasTile"]:["NotInMap"];if(n.roamers.forEach(A=>{const f=t.get(A.encounter_data.species)??[];f.find(R=>R.map_data===n)==null&&f.push({map_data:n,actions:["SweetScentLand","SweetScentWater"],roamer_states:[A.id],mass_outbreak_states:S,feebas_states:["NotInMap"]})}),n.feebas!=null&&i==="OldRod"){const A=t.get(n.feebas.species)??[];A.find(d=>d.map_data===n)==null&&A.push({map_data:n,actions:["OldRod","GoodRod","SuperRod"],roamer_states:m,mass_outbreak_states:S,feebas_states:["OnFeebasTile"]})}e.forEach(A=>{const f=t.get(A.species)??[];let d=f.find(R=>R.map_data===n);d==null&&(d={map_data:n,actions:[],roamer_states:[],mass_outbreak_states:[],feebas_states:[]},f.push(d)),d.actions=T(d.actions,[i]),d.roamer_states=T(d.roamer_states,m),d.mass_outbreak_states=T(d.mass_outbreak_states,S),d.feebas_states=T(d.feebas_states,C)})})}),t};let h=null;const Fm=()=>(h==null&&(h=ym()),h),ym=()=>{const _=Tm(),a=ae(_.map(n=>n.map_id)),t=ae(_.map(n=>[...n.slots_by_action,n.roamers.map(e=>e.encounter_data),n.mass_outbreaks.map(e=>e.encounter_data),...n.feebas==null?[]:[n.feebas]]).flat(2).map(n=>n.species));return{maps_data:_,maps:a,species:t,mapSetupsBySpecies:Nm(_,t)}};export{Dm as a,km as b,Fm as c,Bm as d,jm as e,wm as f,fm as g,Zm as h,Pm as i,Hm as j,Gm as k,zm as l,Wm as m,Am as n,ml as o,Om as p,Mm as q,dm as u,Rm as w};
