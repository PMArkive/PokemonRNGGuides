import{R as c,j as o,B as i,F as p,A as u}from"./index-DXZ5ShUP.js";import{F as m}from"./fileUpload-DVI7Ingq.js";const g=({data:e,trackerId:t})=>{const r=c.useMemo(()=>{const s=new Blob([e],{type:"application/octet-stream"});return URL.createObjectURL(s)},[e]);return o.jsx(i,{trackerId:t,download:"merged.ips",href:r,children:"Download Merged Ips"})},x=e=>{const t=new TextDecoder().decode(e.slice(0,5)),r=new TextDecoder().decode(e.slice(-3));return t==="PATCH"&&r==="EOF"},w=e=>{if(!e.every(x))return{valid:!1};const r=new TextEncoder().encode("PATCH"),s=e.map(a=>a.slice(5,-3)),n=new TextEncoder().encode("EOF");return{valid:!0,ips:[r,...s,n].reduce((a,d)=>new Uint8Array([...a,...d]),new Uint8Array)}},j=()=>{const[e,t]=c.useState(null),[r,s]=c.useState(null);return o.jsxs(p,{vertical:!0,gap:16,children:[o.jsx(m,{id:"ips-merger",accept:".ips",onUpload:n=>{if(n.length===0)return;const l=w(n);l.valid?(t(l.ips),s(null)):s("Invalid IPS files")}}),r!=null&&o.jsx(u,{type:"error",message:r}),e!=null&&o.jsx(g,{data:e,trackerId:"download_merged_ips"})]})};export{j as IpsMerger};
